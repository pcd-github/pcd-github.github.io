[{"/Users/paul/OneDrive/Documents/code/src/react-sample/resample/src/index.js":"1","/Users/paul/OneDrive/Documents/code/src/react-sample/resample/src/reportWebVitals.js":"2","/Users/paul/OneDrive/Documents/code/src/react-sample/resample/src/App.js":"3","/Users/paul/OneDrive/Documents/code/src/react-sample/resample/src/inputs.js":"4","/Users/paul/OneDrive/Documents/code/src/react-sample/resample/src/chart.js":"5","/Users/paul/OneDrive/Documents/code/src/react-sample/resample/src/historical_data.js":"6","/Users/paul/OneDrive/Documents/code/src/swrve/src/index.js":"7","/Users/paul/OneDrive/Documents/code/src/swrve/src/App.js":"8","/Users/paul/OneDrive/Documents/code/src/swrve/src/reportWebVitals.js":"9","/Users/paul/OneDrive/Documents/code/src/swrve/src/chart.js":"10","/Users/paul/OneDrive/Documents/code/src/swrve/src/swrcalc.js":"11","/Users/paul/OneDrive/Documents/code/src/swrve/src/endvaluechart.js":"12","/Users/paul/OneDrive/Documents/code/src/swrve/src/common.js":"13","/Users/paul/OneDrive/Documents/code/src/swrve/src/summary.js":"14","/Users/paul/OneDrive/Documents/code/src/swrve/src/histdata.js":"15"},{"size":500,"mtime":1634752385177,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1634751762887,"results":"18","hashOfConfig":"17"},{"size":409,"mtime":1636311260942,"results":"19","hashOfConfig":"17"},{"size":6153,"mtime":1636146264720,"results":"20","hashOfConfig":"17"},{"size":477,"mtime":1636312762199,"results":"21","hashOfConfig":"17"},{"size":6625,"mtime":1636515735234,"results":"22","hashOfConfig":"17"},{"size":500,"mtime":1634752385177,"results":"23","hashOfConfig":"24"},{"size":353,"mtime":1639556681326,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1634751762887,"results":"26","hashOfConfig":"24"},{"size":21325,"mtime":1645828764320,"results":"27","hashOfConfig":"24"},{"size":11243,"mtime":1645828764321,"results":"28","hashOfConfig":"24"},{"size":9384,"mtime":1644605741409,"results":"29","hashOfConfig":"24"},{"size":2337,"mtime":1645828764320,"results":"30","hashOfConfig":"24"},{"size":3715,"mtime":1643836540027,"results":"31","hashOfConfig":"24"},{"size":18684,"mtime":1642272662797,"results":"32","hashOfConfig":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"153q9zp",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1edofr8",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"/Users/paul/OneDrive/Documents/code/src/react-sample/resample/src/index.js",[],["67","68"],"/Users/paul/OneDrive/Documents/code/src/react-sample/resample/src/reportWebVitals.js",[],"/Users/paul/OneDrive/Documents/code/src/react-sample/resample/src/App.js",[],"/Users/paul/OneDrive/Documents/code/src/react-sample/resample/src/inputs.js",[],"/Users/paul/OneDrive/Documents/code/src/react-sample/resample/src/chart.js",[],"/Users/paul/OneDrive/Documents/code/src/react-sample/resample/src/historical_data.js",["69"],"\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport hist from \"./data/hist-returns.csv\";\n\nfunction HistoricalData () {\n\n    const annualData = [\n        [1921,\t-0.1090,\t0.0267,\t0.1088],\n        [1922,\t-0.0620,\t0.2192,\t0.0386],\n        [1923,\t0.0180,\t-0.0079,\t0.0658],\n        [1924,\t0.0040,\t0.1982,\t0.0556],\n        [1925,\t0.0240,\t0.1957,\t0.0522],\n        [1926,\t0.0090,\t0.0593,\t0.0629],\n        [1927,\t-0.0190,\t0.3082,\t0.0342],\n        [1928,\t-0.0120,\t0.4181,\t0.0129],\n        [1929,\t0.0000,\t-0.1267,\t0.0598],\n        [1930,\t-0.0270,\t-0.2639,\t0.0291],\n        [1931,\t-0.0890,\t-0.4806,\t0.0077],\n        [1932,\t-0.1030,\t-0.1458,\t0.0652],\n        [1933,\t-0.0520,\t0.4866,\t0.0478],\n        [1934,\t0.0350,\t-0.1214,\t0.0571],\n        [1935,\t0.0260,\t0.4860,\t0.0390],\n        [1936,\t0.0100,\t0.2783,\t0.0241],\n        [1937,\t0.0370,\t-0.3570,\t0.0363],\n        [1938,\t-0.0200,\t0.1052,\t0.0416],\n        [1939,\t-0.0130,\t-0.0160,\t0.0357],\n        [1940,\t0.0070,\t-0.1423,\t0.0434],\n        [1941,\t0.0510,\t-0.1536,\t-0.0212],\n        [1942,\t0.1090,\t0.1299,\t0.0238],\n        [1943,\t0.0600,\t0.1744,\t0.0239],\n        [1944,\t0.0160,\t0.1384,\t0.0336],\n        [1945,\t0.0230,\t0.3358,\t0.0383],\n        [1946,\t0.0850,\t-0.1559,\t0.0171],\n        [1947,\t0.1440,\t-0.0250,\t0.0073],\n        [1948,\t0.0770,\t0.0357,\t0.0349],\n        [1949,\t-0.0100,\t0.0990,\t0.0223],\n        [1950,\t0.0110,\t0.2565,\t0.0033],\n        [1951,\t0.0790,\t0.1405,\t0.0170],\n        [1952,\t0.0230,\t0.0823,\t0.0150],\n        [1953,\t0.0080,\t-0.0275,\t0.0562],\n        [1954,\t0.0030,\t0.3983,\t0.0145],\n        [1955,\t-0.0030,\t0.2402,\t0.0261],\n        [1956,\t0.0150,\t0.0290,\t-0.0137],\n        [1957,\t0.0330,\t-0.0949,\t0.0633],\n        [1958,\t0.0270,\t0.3526,\t-0.0382],\n        [1959,\t0.0108,\t0.0433,\t-0.0102],\n        [1960,\t0.0150,\t0.0291,\t0.1131],\n        [1961,\t0.0110,\t0.1566,\t0.0206],\n        [1962,\t0.0120,\t-0.0581,\t0.0595],\n        [1963,\t0.0120,\t0.1751,\t0.0132],\n        [1964,\t0.0130,\t0.1265,\t0.0402],\n        [1965,\t0.0160,\t0.0836,\t0.0115],\n        [1966,\t0.0300,\t-0.0950,\t0.0483],\n        [1967,\t0.0280,\t0.1254,\t-0.0202],\n        [1968,\t0.0430,\t0.0732,\t0.0207],\n        [1969,\t0.0550,\t-0.1146,\t-0.0499],\n        [1970,\t0.0580,\t0.0352,\t0.1822],\n        [1971,\t0.0430,\t0.1049,\t0.0822],\n        [1972,\t0.0330,\t0.1462,\t0.0255],\n        [1973,\t0.0620,\t-0.1883,\t0.0301],\n        [1974,\t0.1110,\t-0.2450,\t0.0374],\n        [1975,\t0.0910,\t0.3349,\t0.0598],\n        [1976,\t0.0570,\t0.0716,\t0.1116],\n        [1977,\t0.0650,\t-0.1305,\t0.0252],\n        [1978,\t0.0760,\t0.1048,\t0.0115],\n        [1979,\t0.1130,\t0.1122,\t-0.0039],\n        [1980,\t0.1350,\t0.1993,\t0.0157],\n        [1981,\t0.1030,\t-0.1180,\t0.0279],\n        [1982,\t0.0610,\t0.2302,\t0.3795],\n        [1983,\t0.0320,\t0.1532,\t0.0393],\n        [1984,\t0.0430,\t0.0312,\t0.1325],\n        [1985,\t0.0350,\t0.2133,\t0.2441],\n        [1986,\t0.0190,\t0.2704,\t0.2289],\n        [1987,\t0.0370,\t-0.0529,\t-0.0258],\n        [1988,\t0.0410,\t0.1393,\t0.0616],\n        [1989,\t0.0480,\t0.1912,\t0.0909],\n        [1990,\t0.0540,\t-0.0426,\t0.0896],\n        [1991,\t0.0420,\t0.2783,\t0.1499],\n        [1992,\t0.0300,\t0.0460,\t0.0988],\n        [1993,\t0.0300,\t0.0868,\t0.1244],\n        [1994,\t0.0260,\t-0.0164,\t-0.0705],\n        [1995,\t0.0280,\t0.3206,\t0.2249],\n        [1996,\t0.0290,\t0.2471,\t-0.0052],\n        [1997,\t0.0230,\t0.2573,\t0.1380],\n        [1998,\t0.0160,\t0.2963,\t0.1144],\n        [1999,\t0.0220,\t0.1416,\t-0.0810],\n        [2000,\t0.0340,\t-0.0631,\t0.1725],\n        [2001,\t0.0280,\t-0.1463,\t0.0601],\n        [2002,\t0.0160,\t-0.2143,\t0.1238],\n        [2003,\t0.0230,\t0.2642,\t0.0331],\n        [2004,\t0.0270,\t0.0432,\t0.0363],\n        [2005,\t0.0340,\t0.0824,\t0.0276],\n        [2006,\t0.0320,\t0.1137,\t0.0198],\n        [2007,\t0.0290,\t-0.0319,\t0.1243],\n        [2008,\t0.0380,\t-0.3722,\t0.1346],\n        [2009,\t-0.0040,\t0.2981,\t-0.0659],\n        [2010,\t0.0160,\t0.1415,\t0.0633],\n        [2011,\t0.0320,\t0.0140,\t0.1500],\n        [2012,\t0.0210,\t0.1383,\t0.0246],\n        [2013,\t0.0150,\t0.2310,\t-0.0554],\n        [2014,\t0.0160,\t0.1129,\t0.1090],\n        [2015,\t0.0010,\t-0.0540,\t0.0017],\n        [2016,\t0.0130,\t0.1858,\t-0.0063],\n        [2017,\t0.0210,\t0.2262,\t0.0124],\n        [2018,\t0.0240,\t-0.0654,\t0.0155],\n        [2019,\t0.0180,\t0.2573,\t0.1055],\n        [2020,\t0.0120,\t0.1573,\t0.0176],                \n    ];\n\n\treturn (\n\t<div >\n\t\t<div className=\"row\"><div className=\"col-xs-12\">\n\t\t\t<OutTable data={annualData} cols={['year', 'inflation', 'stocks', 'bonds']} />\n\t\t</div></div>\n\t</div>\n\t);\n\n}\n\n// d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\nfunction ImportData() {\n    \n    // set the dimensions and margins of the graph\n    var margin = {top: 10, right: 30, bottom: 30, left: 60},\n    width = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\n    // append the svg object to the body of the page\n    var svg = d3.select(\"#my_dataviz\")\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\",\n        \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    d3.csv(hist, function(d) {\n            console.log(d);\n    });\n\n    return(\n        <div></div>\n    );\n}\n\nfunction HistoricalChart() {\n\n\n    return (\n        <div>\n            <ImportData />\n            <div id=\"my_dataviz\"></div>            \n        </div>\n    );\n}\n\n/*\n  Simple HTML Table\n  usage: <OutTable data={data} cols={cols} />\n    data:Array<Array<any> >;\n    cols:Array<{name:string, key:number|string}>;\n*/\nfunction OutTable({ data, cols }) {\n\n    const makePct = (pctIn) => {\n        pctIn = pctIn * 100;\n        pctIn = Math.round((pctIn + Number.EPSILON) * 100) / 100;\n        return (pctIn);\n    }\n\n\treturn (\n\t\t<div className=\"table-responsive\">\n\t\t\t<HistoricalChart />\n            <table className=\"table table-striped\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>{cols.map((c) => <th>{c} </th>)}</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    {data.map((r,i) => <tr>\n                        <td>\n                            {r[0]}\n                        </td>\n                        <td>\n                            {makePct(r[1])}%  \n                        </td>\n                        <td>\n                            {makePct(r[2])}%                    \n                        </td>\n                        <td>\n                            {makePct(r[3])}%                                            \n                        </td>\n                    </tr>)}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n}\n\n/*\n\t\t\t\t\t{data.map((r,i) => <tr key={i}>\n\t\t\t\t\t\t{cols.map(c => <td key={c.key}>{ r[c.key] }</td>)}\n\t\t\t\t\t</tr>)}\n */\n\n\nexport default HistoricalData;\n\n\n","/Users/paul/OneDrive/Documents/code/src/swrve/src/index.js",[],["70","71"],"/Users/paul/OneDrive/Documents/code/src/swrve/src/App.js",[],"/Users/paul/OneDrive/Documents/code/src/swrve/src/reportWebVitals.js",[],"/Users/paul/OneDrive/Documents/code/src/swrve/src/chart.js",["72","73"],"/Users/paul/OneDrive/Documents/code/src/swrve/src/swrcalc.js",[],"/Users/paul/OneDrive/Documents/code/src/swrve/src/endvaluechart.js",["74"],"import * as React from \"react\";\nimport * as d3 from \"d3\";\nimport { makeCurrency, makePct, getPerRunClassName, getThresholdValues, getColorStringForRelativeValue, findByID, findByClass, getPortfolioLineClassName} from \"./common.js\";\n\nfunction EndValueChart (props) {\n\n    const svgBinChartID = 'endvaluechartsvg';\n    const ttBinWrapID = 'ttevwrap';\n    const ttBinBackID = 'ttevback';\n    const ttBinRangeID = 'ttevrange';\n    const ttBinPctID = 'ttevpct';\n    const pathGroupID = 'pathgroupid';\n    const perRunClass = getPerRunClassName();\n    const margin = { top: 40, right: 65, bottom: 40, left: 65 };\n    const totalWidth = 960;\n    const totalHeight = 300;\n    const marginTranslate = \"translate(\" + margin.left + \",\" + margin.top + \")\";\n    const boundedWidth = totalWidth - margin.left - margin.right;\n    const boundedHeight = totalHeight - margin.top - margin.bottom;\n    const tooltipWidth = 75;\n    const tooltipHeight = 75;\n    var selectedBin = null;\n\n    const getXScaleForAxis = () => {\n        const thresholdValues = getCurrencyThresholds();\n        const numThresholds = thresholdValues.length;\n        var thresholdRange = [];\n        var thresholdInc = boundedWidth / (numThresholds + 1);\n\n        for (var i = 0; i <= thresholdValues.length; i++) {\n            thresholdRange[i] = i * thresholdInc;\n        }\n\n        return d3.scaleThreshold()\n                 .domain(thresholdValues)\n                 .range(thresholdRange);\n    }\n\n    const calcBinMetadata = (data) => {\n        const oneBinMetadata = {\n            'binData': data,\n            'extBin': d3.extent(data, (d) => d.adjEndCycleValue),\n            'extPctStartValue': d3.extent(data, (d) => d.pctOfStart),\n            'binCount': data.length,\n        }\n\n        return oneBinMetadata;\n    }\n\n    const getCurrencyThresholds = () => {\n        const pctThresholds = getThresholdValues();\n        const currencyThresholds = [];\n\n        // create failure bin\n        currencyThresholds[0] = 0;\n        currencyThresholds[1] = 0.01;\n        // start at index 1, as we've handled the zero case.  \n        // Consider removing zero from the common thresholds.\n        // for now, offset the first entry in the currency array to accomodate the failure bin.\n        for (var i = 1; i < pctThresholds.length; i++) {\n            currencyThresholds[i+1] = pctThresholds[i] * props.startvalue;\n        }\n        return currencyThresholds;\n    }\n\n    const createBins = (currencyThresholdValues) => {\n\n        const binFunc = d3.bin()\n                          .value(function(d) { return d.adjEndCycleValue; })   \n                          .domain([currencyThresholdValues[0], \n                                   currencyThresholdValues[currencyThresholdValues.length - 1]])\n                          .thresholds(currencyThresholdValues); \n\n        return binFunc(props.metadata);\n    }\n\n    const drawHistogram = (svg) => {\n        const currencyThresholdValues = getCurrencyThresholds();\n        const bins = createBins(currencyThresholdValues);        \n        const xScale = getXScaleForAxis(currencyThresholdValues);\n        const yScale = d3.scaleLinear()\n                         .domain([0, d3.max(bins, function(d) { return d.length; })])\n                         .range([boundedHeight, 0]);\n        const histoBarClass = 'histobarclass';\n\n        // x/y axes\n        svg.append(\"g\")\n            .attr(\"class\", perRunClass)\n            .attr(\"transform\", \"translate(0,\" + boundedHeight + \")\")\n            .call(d3.axisBottom(xScale));\n        svg.append(\"g\")\n            .attr(\"class\", perRunClass)\n            .call(d3.axisLeft(yScale));\n             \n        var barGroup = svg.append('g')\n                          .attr('class', perRunClass)\n                          .attr('id', pathGroupID);\n\n        // chart\n        var bars = barGroup.selectAll('.' + histoBarClass);\n        bars.data(bins)\n                .enter()\n                .append(\"rect\")\n                .attr(\"class\", perRunClass)\n                .attr(\"x\", 1)\n                .attr(\"transform\", function(d) { return \"translate(\" + xScale(d.x0) + \",\" + yScale(d.length) + \")\"; })\n                .attr(\"width\", function(d) { return xScale(d.x1) - xScale(d.x0) -1 ; })\n                .attr(\"height\", function(d) { return boundedHeight - yScale(d.length); })\n                .style(\"fill\",  function(d) { return getColorStringForRelativeValue(d.x0 / props.startvalue);})\n                .on('mousedown', handleMouseDown)\n                .on(\"mouseover\", handleMouseOver)\n                .on(\"mouseout\", handleMouseLeave)                \n                .on('mousemove', handleMouseMove);\n    }\n\n    const prepTooltip = (svg) => {\n        // wrapper\n        // background\n        // text element\n        //  tspan for each line\n        //  x0, x1, % of start, % of results\n\n        const tooltipWrapper = svg.append('g')\n                                  .attr('id', ttBinWrapID)\n                                  .attr(\"class\", perRunClass)\n                                  .style('opacity', 0);\n        tooltipWrapper.append('rect')\n                      .style('opacity', 0.70)\n                      .attr('id', ttBinBackID)\n                      .attr('width', tooltipWidth)\n                      .attr('height', tooltipHeight)\n                      .attr(\"pointer-events\", \"none\")\n                      .attr(\"fill\", \"#e8e8e8\"); \n\n        const tooltipText = tooltipWrapper.append('g').append('text')\n                                          .attr(\"pointer-events\", \"none\")\n                                          .attr('font-weight', 900)\n                                          .attr('text-anchor', 'left');\n        tooltipText.append('tspan')\n                   .attr('id', ttBinRangeID)\n                   .attr('x', '5')\n                   .attr('y', '5')\n                   .attr('dy', '15px')\n                   .attr(\"pointer-events\", \"none\");\n        tooltipText.append('tspan')\n                   .attr('id', ttBinPctID)\n                   .attr('x', '5')\n                   .attr('y', '5')\n                   .attr('dy', '30px')\n                   .attr(\"pointer-events\", \"none\");\n    }\n\n    const getTooltip = () => {\n        return findByID(ttBinWrapID);\n    }\n\n    const getTooltipBackground = () => {\n        return findByID(ttBinBackID);\n    }\n\n    const getBinRangeSpan = () => {\n        return findByID(ttBinRangeID);\n    }\n\n    const getBinPctSpan = () => {\n        return findByID(ttBinPctID);\n    }\n\n    const isBinSelected = (binID) => {\n        return (selectedBin === binID);\n    }\n\n    const selectBin = (binElement, thisBin) => {\n        const unselectedOpacity = 0.1;\n        const valueRatio = thisBin / props.startvalue;\n        const colorString = getColorStringForRelativeValue(valueRatio);\n        const cycleChart = findByID(props.cyclechartid);\n        const binChart = findByID(svgBinChartID);\n        findByClass(cycleChart, getPortfolioLineClassName()).style('opacity', unselectedOpacity);\n        findByClass(cycleChart, colorString).style('opacity', 1);\n        binChart.selectAll('rect').style('opacity', unselectedOpacity);\n        d3.select(binElement).style('opacity', 1);\n        selectedBin = thisBin;\n    }\n\n    const unselectBin = () => {\n        const cycleChart = findByID(props.cyclechartid);\n        const binChart = findByID(svgBinChartID);\n        findByClass(cycleChart, getPortfolioLineClassName()).style('opacity', 1);\n        binChart.selectAll('rect').style('opacity', 1);\n        selectedBin = null;\n    }\n\n    const handleMouseDown = (e) => {\n        const binData = e.srcElement.__data__;\n        const thisBin = binData.x0;\n\n        if (!isBinSelected(thisBin)) {\n            selectBin(e.srcElement, thisBin);\n        }\n        else {\n            unselectBin();\n        }\n    }\n\n    const handleMouseOver = (e) => {\n        getTooltip().style('opacity', 1);\n    }\n\n    const handleMouseMove = (e) => {\n\n        const binData = e.srcElement.__data__;\n        const binMeta = calcBinMetadata(binData);\n        \n        // set the tt content\n        const rangeString = makeCurrency(+(binMeta.extBin[0])) + \n                            '-' + makeCurrency(+(binMeta.extBin[1]));\n        const binSizeString = ' ' + makePct(binData.length / props.metadata.length) +\n                              ' of cycles';\n        getBinRangeSpan().text(rangeString);\n        getBinPctSpan().text(binSizeString);\n\n        // place the tt\n        const tt = getTooltip();\n        const ttBounds = tt.node().getBBox();\n        getTooltipBackground()                \n            .attr('width', ttBounds.width)\n            .attr('height', ttBounds.height);\n        // const mouseTranslate = 'translate(' + coords[0] + ',' + (coords[1] - ttBounds.height) + ')';\n        // tt.attr('transform', mouseTranslate);\n    };\n    \n    const handleMouseLeave = () => {\n        getTooltip().style('opacity', 0);\n    };\n\n    React.useEffect(() => {\n\n        const svg = findByID(svgBinChartID)\n                      .append(\"g\")\n                      .attr(\"transform\", marginTranslate);\n\n        drawHistogram(svg);\n        prepTooltip(svg);\n    }, [props] );\n\n    return (\n        <div>\n            <svg id={svgBinChartID}  \n                width={totalWidth}\n                height={totalHeight} \n             >\n            </svg>\n        </div>\n    );\n};\n\nexport default EndValueChart;\n","/Users/paul/OneDrive/Documents/code/src/swrve/src/common.js",[],"/Users/paul/OneDrive/Documents/code/src/swrve/src/summary.js",[],"/Users/paul/OneDrive/Documents/code/src/swrve/src/histdata.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":130,"column":9,"nodeType":"81","messageId":"82","endLine":130,"endColumn":12},{"ruleId":"75","replacedBy":"83"},{"ruleId":"77","replacedBy":"84"},{"ruleId":"79","severity":1,"message":"85","line":9,"column":10,"nodeType":"81","messageId":"82","endLine":9,"endColumn":22},{"ruleId":"86","severity":1,"message":"87","line":525,"column":8,"nodeType":"88","endLine":525,"endColumn":15,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":245,"column":8,"nodeType":"88","endLine":245,"endColumn":15,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'svg' is assigned a value but never used.","Identifier","unusedVar",["92"],["93"],"'makeCurrency' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'calcCycles', 'marginTranslate', and 'prepHoverStuff'. Either include them or remove the dependency array.","ArrayExpression",["94"],"React Hook React.useEffect has missing dependencies: 'drawHistogram', 'marginTranslate', and 'prepTooltip'. Either include them or remove the dependency array.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [calcCycles, marginTranslate, prepHoverStuff, props]",{"range":"100","text":"101"},"Update the dependencies array to be: [drawHistogram, marginTranslate, prepTooltip, props]",{"range":"102","text":"103"},[19737,19744],"[calcCycles, marginTranslate, prepHoverStuff, props]",[9144,9151],"[drawHistogram, marginTranslate, prepTooltip, props]"]