{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js\";\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport hist from \"./data/hist-returns.csv\"; // d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HistoricalChart() {\n  var svg = d3.select(\"#d3target\").append(\"svg\").attr(\"width\", 1200); // Create the scale\n\n  var x = d3.scaleLinear().domain([0, 100]) // This is what is written on the Axis: from 0 to 100\n  .range([100, 800]); // This is where the axis is placed: from 100px to 800px\n  // Draw the axis\n\n  svg.append(\"g\").attr(\"transform\", \"translate(0,500)\").call(d3.axisBottom(x));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"d3target\",\n    width: \"1200\",\n    height: \"1200\",\n    children: [\"Inside of it\", /*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        border: \"2px solid gold\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 14\n  }, this);\n}\n\n_c = HistoricalChart;\n\nfunction waitForIt() {\n  // set the dimensions and margins of the graph\n  var margin = {\n    top: 50,\n    right: 50,\n    bottom: 50,\n    left: 50\n  },\n      width = 1000 - margin.left - margin.right,\n      height = 1000 - margin.top - margin.bottom; // append the svg object to the body of the page\n\n  var svg = d3.select(\"#my_dataviz\").append(\"svg\") // .attr(\"width\", width + margin.left + margin.right)\n  // .attr(\"height\", height + margin.top + margin.bottom)\n  // .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  d3.csv(hist, function (d) {\n    return {\n      year: +d.year,\n      inflation: +d.inflation,\n      equity: +d.equity,\n      bonds: +d.bonds\n    };\n  }).then(function (data) {\n    var x = d3.scaleLinear().domain([1921, 2020]).range(0, width);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x));\n    var y = d3.scaleLinear().domain(-0.50, 0.50).range(height, 0);\n    svg.append(\"g\").call(d3.axisLeft(y));\n    var xx = d3.scaleLinear().domain([d3.min(data, function (d) {\n      return d.year;\n    }), d3.max(data, function (d) {\n      return d.year;\n    })]).range([0, width]);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)); // Add Y axis\n\n    var yy = d3.scaleLinear().domain([d3.min(data, function (d) {\n      return d.equity;\n    }), d3.max(data, function (d) {\n      return d.equity;\n    })]).range([height, 0]);\n    svg.append(\"g\").call(d3.axisLeft(y)); // Add the line\n\n    svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n      return x(d.year);\n    }).y(function (d) {\n      return y(d.equity);\n    }));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 13\n  }, this);\n}\n/*\n  Simple HTML Table\n  usage: <OutTable data={data} cols={cols} />\n    data:Array<Array<any> >;\n    cols:Array<{name:string, key:number|string}>;\n*/\n\n\nfunction OutTable({\n  data,\n  cols\n}) {\n  const makePct = pctIn => {\n    pctIn = pctIn * 100;\n    pctIn = Math.round((pctIn + Number.EPSILON) * 100) / 100;\n    return pctIn;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-responsive\",\n    children: [/*#__PURE__*/_jsxDEV(HistoricalChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: cols.map(c => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [c, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((r, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: r[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [makePct(r[1]), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [makePct(r[2]), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [makePct(r[3]), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 3\n  }, this);\n}\n\n_c2 = OutTable;\nexport default HistoricalChart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HistoricalChart\");\n$RefreshReg$(_c2, \"OutTable\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js"],"names":["React","d3","hist","HistoricalChart","svg","select","append","attr","x","scaleLinear","domain","range","call","axisBottom","border","waitForIt","margin","top","right","bottom","left","width","height","csv","d","year","inflation","equity","bonds","then","data","y","axisLeft","xx","min","max","yy","datum","line","OutTable","cols","makePct","pctIn","Math","round","Number","EPSILON","map","c","r","i"],"mappings":"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","sourcesContent":["\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport hist from \"./data/hist-returns.csv\";\n\n// d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\nfunction HistoricalChart() {\n\n    var svg = d3.select(\"#d3target\")\n        .append(\"svg\")\n        .attr(\"width\", 1200)\n  \n  // Create the scale\n    var x = d3.scaleLinear()\n        .domain([0, 100])         // This is what is written on the Axis: from 0 to 100\n        .range([100, 800]);       // This is where the axis is placed: from 100px to 800px\n  \n  // Draw the axis\n  svg.append(\"g\")\n    .attr(\"transform\", \"translate(0,500)\")      \n    .call(d3.axisBottom(x));\n\n    return(\n             <div id=\"d3target\" width=\"1200\" height=\"1200\" >\n                 Inside of it\n                 <svg style={{border: \"2px solid gold\"}} />\n             </div> \n    );\n}\n\nfunction waitForIt () {\n   \n    // set the dimensions and margins of the graph\n    var margin = {top: 50, right: 50, bottom: 50, left: 50},\n    width = 1000 - margin.left - margin.right,\n    height = 1000 - margin.top - margin.bottom;\n\n    // append the svg object to the body of the page\n    var svg = d3.select(\"#my_dataviz\")\n    .append(\"svg\")\n    // .attr(\"width\", width + margin.left + margin.right)\n    // .attr(\"height\", height + margin.top + margin.bottom)\n    // .append(\"g\")\n    .attr(\"transform\",\n        \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    d3.csv(hist,function(d) {\n                    return { year: +d.year, inflation: +d.inflation, equity: +d.equity, bonds: +d.bonds };\n                })\n        .then (function(data) {\n\n                var x = d3.scaleLinear()\n                    .domain([1921,2020])\n                    .range(0, width);\n                svg.append(\"g\")\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\n                    .call(d3.axisBottom(x));\n                \n                var y = d3.scaleLinear()\n                    .domain(-0.50, 0.50)\n                    .range(height, 0);\n                svg.append(\"g\")\n                    .call(d3.axisLeft(y));\n                    \n\n\n                var xx = d3.scaleLinear()\n                    .domain([d3.min(data, function(d) { return d.year; }),\n                             d3.max(data, function(d) { return d.year; })])\n                    .range([ 0, width ]);\n                \n                svg.append(\"g\")\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\n                    .call(d3.axisBottom(x));\n\n                // Add Y axis\n                var yy = d3.scaleLinear()\n                    .domain([d3.min(data, function(d) { return d.equity; }),\n                             d3.max(data, function(d) { return d.equity; })])\n                    .range([ height, 0 ]);\n                \n                svg.append(\"g\")\n                    .call(d3.axisLeft(y));\n\n                // Add the line\n                svg.append(\"path\")\n                .datum(data)\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke\", \"steelblue\")\n                .attr(\"stroke-width\", 1.5)\n                .attr(\"d\", d3.line()\n                    .x(function(d) { return x(d.year) })\n                    .y(function(d) { return y(d.equity) })\n                    )\n\n            });\n\n        return (\n            <div></div>\n        );\n}\n\n/*\n  Simple HTML Table\n  usage: <OutTable data={data} cols={cols} />\n    data:Array<Array<any> >;\n    cols:Array<{name:string, key:number|string}>;\n*/\nfunction OutTable({ data, cols }) {\n\n    const makePct = (pctIn) => {\n        pctIn = pctIn * 100;\n        pctIn = Math.round((pctIn + Number.EPSILON) * 100) / 100;\n        return (pctIn);\n    }\n\n\treturn (\n\t\t<div className=\"table-responsive\">\n\t\t\t<HistoricalChart />\n            <table className=\"table table-striped\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>{cols.map((c) => <th>{c} </th>)}</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    {data.map((r,i) => <tr>\n                        <td>\n                            {r[0]}\n                        </td>\n                        <td>\n                            {makePct(r[1])}%  \n                        </td>\n                        <td>\n                            {makePct(r[2])}%                    \n                        </td>\n                        <td>\n                            {makePct(r[3])}%                                            \n                        </td>\n                    </tr>)}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n}\n\nexport default HistoricalChart;\n"]},"metadata":{},"sourceType":"module"}