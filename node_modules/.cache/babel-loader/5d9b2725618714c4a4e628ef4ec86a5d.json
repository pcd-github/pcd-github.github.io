{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\"; // d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HistoricalChart() {\n  _s();\n\n  const [histDataState, setHistDataState] = useState([]);\n  const [focusState, setFocusState] = useState(null);\n  const [tooltipState, setTooltipState] = useState(null);\n  const margin = {\n    top: 40,\n    right: 80,\n    bottom: 60,\n    left: 50\n  };\n  const totalWidth = 960;\n  const totalHeight = 700;\n  const boundedWidth = totalWidth - margin.left - margin.right;\n  const boundedHeight = totalHeight - margin.top - margin.bottom;\n  const marginTranslate = \"translate(\" + margin.left + \",\" + margin.top + \")\";\n  const equityColor = \"OrangeRed\";\n  const bondColor = \"SteelBlue\";\n  const normalStrokeWidth = 1.5;\n  const highlightStrokeWidth = 10;\n  const normalLineOp = 0.5;\n  const highLineOp = 1.0;\n\n  const getXScale = (dataIn, widthIn) => {\n    var xExt = d3.extent(dataIn, d => d.year);\n    return d3.scaleLinear().domain(xExt).range([0, widthIn]);\n  };\n\n  const getYScale = (dataIn, heightIn) => {\n    var yExt = d3.extent(dataIn, d => d.equity);\n    return d3.scaleLinear().domain(yExt).range([heightIn, 0]);\n  };\n\n  const drawAxes = (svg, xScaleIn, yScaleIn, heightIn) => {\n    var pctFormat = d3.format(\"4.2%\");\n    var yearFormat = d3.format(\"d\");\n    var xGen = d3.axisBottom(xScaleIn).tickFormat(yearFormat);\n    var yGen = d3.axisLeft(yScaleIn).tickFormat(pctFormat);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + heightIn + \")\").call(xGen);\n    svg.append(\"g\").call(yGen);\n  };\n\n  const drawLines = (svg, dataIn, xScaleIn, yScaleIn) => {\n    // Add the equity line\n    svg.append(\"path\").datum(dataIn).on('mouseover', handleLineHighlight).on('mouseout', handleLineUnhighlight).attr(\"fill\", \"none\").style(\"opacity\", normalLineOp).attr(\"stroke\", equityColor).attr(\"stroke-width\", normalStrokeWidth).attr(\"d\", d3.line().x(function (d) {\n      return xScaleIn(d.year);\n    }).y(function (d) {\n      return yScaleIn(d.equity);\n    })); // Add the bonds line\n\n    svg.append(\"path\").datum(dataIn).attr(\"fill\", \"none\").attr(\"stroke\", bondColor).attr(\"stroke-width\", normalStrokeWidth).attr(\"d\", d3.line().x(function (d) {\n      return xScaleIn(d.year);\n    }).y(function (d) {\n      return yScaleIn(d.bond);\n    }));\n  };\n\n  const prepHoverStuff = svg => {\n    var focus = svg.append('g').append('circle').style('fill', 'none').attr('stroke', 'black').attr('r', 5).style('opacity', 0);\n    var tooltip = svg.append('g').append('text').style('opacity', 0).attr('text-anchor', 'left');\n    setFocusState(focus);\n    setTooltipState(tooltip);\n  };\n\n  const isDataTrackingReady = () => {\n    return 0 < histDataState.length && null != focusState;\n  };\n\n  const handleLineHighlight = e => {\n    var path = e.srcElement;\n    var currSW = path.strokeWidth;\n    console.log(\"highlight : current is \" + currSW);\n    path.strokeWidth = highlightStrokeWidth;\n    path.style.opacity = highLineOp;\n  };\n\n  const handleLineUnhighlight = e => {\n    var path = e.srcElement;\n    var currSW = path.strokeWidth;\n    console.log(\"unhighlight : current is \" + currSW);\n    path.strokeWidth = normalStrokeWidth;\n    path.style.opacity = highLineOp;\n  };\n\n  const handleMouseOver = e => {\n    if (isDataTrackingReady()) {\n      focusState.style(\"opacity\", 1);\n      tooltipState.style('opacity', 1);\n    }\n  };\n\n  const handleMouseMove = e => {\n    if (isDataTrackingReady()) {\n      const bisect = d3.bisector(d => d.year).left;\n      var xScaleIn = getXScale(histDataState, boundedWidth);\n      var yScaleIn = getYScale(histDataState, boundedHeight);\n      const coords = d3.pointer(e);\n      const x0 = xScaleIn.invert(coords[0]);\n      const i = bisect(histDataState, x0, 1);\n      const selectedData = histDataState[i];\n      const clientX = xScaleIn(selectedData.year);\n      const clientY = yScaleIn(selectedData.equity);\n      focusState.attr('cx', clientX).attr('cy', clientY);\n      tooltipState.html('year:' + selectedData.year + '  - x0:' + x0).attr('x', clientX).attr('y', clientY);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (isDataTrackingReady()) {\n      focusState.style('opacity', 0);\n      tooltipState.style('opacity', 0);\n    }\n  };\n\n  React.useEffect(() => {\n    var svg = d3.select(\"#d3target\").attr(\"width\", totalWidth).attr(\"height\", totalHeight).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    d3.csv(hist, function (d) {\n      return {\n        year: d.year,\n        inflation: +d.inflation,\n        equity: +d.equity,\n        bond: +d.bond\n      };\n    }).then(function (dataset) {\n      var xScaleIn = getXScale(dataset, boundedWidth);\n      var yScaleIn = getYScale(dataset, boundedHeight);\n      drawAxes(svg, xScaleIn, yScaleIn, boundedHeight);\n      drawLines(svg, dataset, xScaleIn, yScaleIn);\n      prepHoverStuff(svg);\n      setHistDataState(dataset);\n    });\n  }, [setHistDataState, setFocusState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"d3target\",\n      width: totalWidth,\n      height: totalHeight,\n      children: /*#__PURE__*/_jsxDEV(\"rect\", {\n        id: \"trackingRect\",\n        style: {\n          opacity: 0\n        },\n        width: boundedWidth,\n        height: boundedHeight,\n        transform: marginTranslate,\n        fill: \"LightGray\",\n        onMouseOver: handleMouseOver,\n        onMouseMove: handleMouseMove,\n        onMouseLeave: handleMouseLeave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HistoricalChart, \"C6Gf4ybucU8jHlTBoLf1Tly+hzk=\");\n\n_c = HistoricalChart;\nexport default HistoricalChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoricalChart\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js"],"names":["useState","React","d3","hist","HistoricalChart","histDataState","setHistDataState","focusState","setFocusState","tooltipState","setTooltipState","margin","top","right","bottom","left","totalWidth","totalHeight","boundedWidth","boundedHeight","marginTranslate","equityColor","bondColor","normalStrokeWidth","highlightStrokeWidth","normalLineOp","highLineOp","getXScale","dataIn","widthIn","xExt","extent","d","year","scaleLinear","domain","range","getYScale","heightIn","yExt","equity","drawAxes","svg","xScaleIn","yScaleIn","pctFormat","format","yearFormat","xGen","axisBottom","tickFormat","yGen","axisLeft","append","attr","call","drawLines","datum","on","handleLineHighlight","handleLineUnhighlight","style","line","x","y","bond","prepHoverStuff","focus","tooltip","isDataTrackingReady","length","e","path","srcElement","currSW","strokeWidth","console","log","opacity","handleMouseOver","handleMouseMove","bisect","bisector","coords","pointer","x0","invert","i","selectedData","clientX","clientY","html","handleMouseLeave","useEffect","select","csv","inflation","then","dataset"],"mappings":"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","sourcesContent":["\nimport { useState } from \"react\";\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\";\n\n// d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nfunction HistoricalChart () {\n    const [histDataState, setHistDataState] = useState([]);\n    const [focusState, setFocusState] = useState(null);\n    const [tooltipState, setTooltipState] = useState(null);\n    const margin = { top: 40, right: 80, bottom: 60, left: 50 };\n    const totalWidth = 960;\n    const totalHeight = 700;\n    const boundedWidth = totalWidth - margin.left - margin.right;\n    const boundedHeight = totalHeight - margin.top - margin.bottom;\n    const marginTranslate = \"translate(\" + margin.left + \",\" + margin.top + \")\";\n    const equityColor = \"OrangeRed\";\n    const bondColor = \"SteelBlue\"\n    const normalStrokeWidth = 1.5;\n    const highlightStrokeWidth = 10;\n    const normalLineOp = 0.5;\n    const highLineOp = 1.0;\n\n    const getXScale = (dataIn, widthIn) => { \n        var xExt = d3.extent(dataIn, (d) => d.year);\n        return d3.scaleLinear()\n                 .domain(xExt)\n                 .range([ 0, widthIn ]);\n    }\n\n    const getYScale = (dataIn, heightIn) => {\n        var yExt = d3.extent(dataIn, (d) => d.equity);\n        return d3.scaleLinear()\n                 .domain(yExt)\n                 .range([ heightIn, 0 ]);\n    }\n\n    const drawAxes = (svg, xScaleIn, yScaleIn, heightIn) => {\n        var pctFormat = d3.format(\"4.2%\");\n        var yearFormat = d3.format(\"d\");\n        var xGen = d3.axisBottom(xScaleIn)\n                     .tickFormat(yearFormat);            \n        var yGen = d3.axisLeft(yScaleIn)\n                     .tickFormat(pctFormat);    \n\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + heightIn + \")\")\n            .call(xGen);\n        svg.append(\"g\")\n           .call(yGen);\n    };\n\n    const drawLines = (svg, dataIn, xScaleIn, yScaleIn) => {\n        // Add the equity line\n        svg.append(\"path\")\n            .datum(dataIn)\n            .on('mouseover', handleLineHighlight)\n            .on('mouseout', handleLineUnhighlight)\n            .attr(\"fill\", \"none\")\n            .style(\"opacity\", normalLineOp)\n            .attr(\"stroke\", equityColor)\n            .attr(\"stroke-width\", normalStrokeWidth)\n            .attr(\"d\", d3.line()\n                        .x(function(d) { return xScaleIn(d.year) })\n                        .y(function(d) { return yScaleIn(d.equity) })\n            );\n        // Add the bonds line\n        svg.append(\"path\")\n            .datum(dataIn)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", bondColor)\n            .attr(\"stroke-width\", normalStrokeWidth)\n            .attr(\"d\", d3.line()\n                        .x(function(d) { return xScaleIn(d.year) })\n                        .y(function(d) { return yScaleIn(d.bond) })\n            );\n        \n    }\n\n    const prepHoverStuff = (svg) => {\n        var focus = svg\n        .append('g')\n        .append('circle')\n            .style('fill', 'none')\n            .attr('stroke', 'black')\n            .attr('r', 5)\n            .style('opacity', 0);\n\n        var tooltip = svg\n        .append('g')\n        .append('text')\n            .style('opacity', 0)\n            .attr('text-anchor', 'left');\n\n        setFocusState(focus);\n        setTooltipState(tooltip);\n    }\n\n    const isDataTrackingReady = () => {\n        return ( (0 < histDataState.length) &&\n                 (null != focusState)\n               );\n    }\n\n    const handleLineHighlight = (e) => {\n        \n        var path = e.srcElement;\n        var currSW = path.strokeWidth;\n\n        console.log(\"highlight : current is \" + currSW);\n        path.strokeWidth = highlightStrokeWidth;\n        path.style.opacity = highLineOp;\n    }\n\n    const handleLineUnhighlight = (e) => {\n        var path = e.srcElement;\n        var currSW = path.strokeWidth;\n\n        console.log(\"unhighlight : current is \" + currSW);\n        path.strokeWidth = normalStrokeWidth;\n        path.style.opacity = highLineOp;\n    }\n\n    const handleMouseOver = (e) => {\n        if (isDataTrackingReady()) {\n            focusState.style(\"opacity\", 1);\n            tooltipState.style('opacity', 1);\n        }\n    }\n\n    const handleMouseMove = (e) => {\n        if (isDataTrackingReady()) {  \n            const bisect = d3.bisector((d) => d.year).left;\n            var xScaleIn = getXScale(histDataState, boundedWidth);\n            var yScaleIn = getYScale(histDataState, boundedHeight);\n\n            const coords = d3.pointer(e);\n            const x0 = xScaleIn.invert(coords[0]);\n            const i = bisect(histDataState, x0, 1);\n            const selectedData = histDataState[i];\n            const clientX = xScaleIn(selectedData.year);\n            const clientY = yScaleIn(selectedData.equity);\n\n            focusState\n                .attr('cx', clientX)\n                .attr('cy', clientY);\n            tooltipState\n                .html('year:' + selectedData.year + '  - x0:' + x0)\n                .attr('x', clientX)\n                .attr('y', clientY);      \n        }\n    };\n    \n    const handleMouseLeave = () => {\n        if (isDataTrackingReady()) {\n            focusState.style('opacity', 0);\n            tooltipState.style('opacity', 0);\n        }\n    };\n\n    React.useEffect(() => {\n\n        var svg = d3.select(\"#d3target\")\n                    .attr(\"width\", totalWidth)\n                    .attr(\"height\", totalHeight)\n                    .append(\"g\")\n                    .attr(\"transform\",\n                          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        d3.csv(hist,function(d) {\n            return { year: d.year, inflation: +d.inflation, equity: +d.equity, bond: +d.bond };\n        })\n        .then (function(dataset) {\n\n            var xScaleIn = getXScale(dataset, boundedWidth);\n            var yScaleIn = getYScale(dataset, boundedHeight);\n\n            drawAxes(svg, xScaleIn, yScaleIn, boundedHeight);            \n            drawLines(svg, dataset, xScaleIn, yScaleIn); \n            prepHoverStuff(svg);\n \n            setHistDataState(dataset);\n        })\n    }, [setHistDataState, setFocusState]);\n\n    return (\n        <div>\n            <svg id=\"d3target\" \n                 width={totalWidth}\n                 height={totalHeight} \n            >\n                <rect id='trackingRect'\n                 style={{ opacity:0 }}\n                 width={boundedWidth}\n                 height={boundedHeight}\n                 transform={marginTranslate}\n                 fill='LightGray'\n                 onMouseOver={handleMouseOver}\n                 onMouseMove={handleMouseMove}\n                 onMouseLeave={handleMouseLeave}\n                >\n                </rect>\n            </svg>            \n        </div>\n    );\n}\n\nexport default HistoricalChart;\n"]},"metadata":{},"sourceType":"module"}