{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/chart.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Box } from \"@mui/system\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst histData = [{\n  year: 1921,\n  inflation: -0.1090,\n  equity: 0.0267,\n  bond: 0.1088\n}, {\n  year: 1922,\n  inflation: -0.0620,\n  equity: 0.2192,\n  bond: 0.0386\n}, {\n  year: 1923,\n  inflation: 0.0180,\n  equity: -0.0079,\n  bond: 0.0658\n}, {\n  year: 1924,\n  inflation: 0.0040,\n  equity: 0.1982,\n  bond: 0.0556\n}, {\n  year: 1925,\n  inflation: 0.0240,\n  equity: 0.1957,\n  bond: 0.0522\n}, {\n  year: 1926,\n  inflation: 0.0090,\n  equity: 0.0593,\n  bond: 0.0629\n}, {\n  year: 1927,\n  inflation: -0.0190,\n  equity: 0.3082,\n  bond: 0.0342\n}, {\n  year: 1928,\n  inflation: -0.0120,\n  equity: 0.4181,\n  bond: 0.0129\n}, {\n  year: 1929,\n  inflation: 0.0000,\n  equity: -0.1267,\n  bond: 0.0598\n}, {\n  year: 1930,\n  inflation: -0.0270,\n  equity: -0.2639,\n  bond: 0.0291\n}, {\n  year: 1931,\n  inflation: -0.0890,\n  equity: -0.4806,\n  bond: 0.0077\n}, {\n  year: 1932,\n  inflation: -0.1030,\n  equity: -0.1458,\n  bond: 0.0652\n}, {\n  year: 1933,\n  inflation: -0.0520,\n  equity: 0.4866,\n  bond: 0.0478\n}, {\n  year: 1934,\n  inflation: 0.0350,\n  equity: -0.1214,\n  bond: 0.0571\n}, {\n  year: 1935,\n  inflation: 0.0260,\n  equity: 0.4860,\n  bond: 0.0390\n}, {\n  year: 1937,\n  inflation: 0.0370,\n  equity: -0.3570,\n  bond: 0.0363\n}, {\n  year: 1938,\n  inflation: -0.0200,\n  equity: 0.1052,\n  bond: 0.0416\n}, {\n  year: 1939,\n  inflation: -0.0130,\n  equity: -0.0160,\n  bond: 0.0357\n}, {\n  year: 1940,\n  inflation: 0.0070,\n  equity: -0.1423,\n  bond: 0.0434\n}, {\n  year: 1941,\n  inflation: 0.0510,\n  equity: -0.1536,\n  bond: -0.0212\n}, {\n  year: 1942,\n  inflation: 0.1090,\n  equity: 0.1299,\n  bond: 0.0238\n}, {\n  year: 1943,\n  inflation: 0.0600,\n  equity: 0.1744,\n  bond: 0.0239\n}, {\n  year: 1944,\n  inflation: 0.0160,\n  equity: 0.1384,\n  bond: 0.0336\n}, {\n  year: 1945,\n  inflation: 0.0230,\n  equity: 0.3358,\n  bond: 0.0383\n}, {\n  year: 1946,\n  inflation: 0.0850,\n  equity: -0.1559,\n  bond: 0.0171\n}, {\n  year: 1947,\n  inflation: 0.1440,\n  equity: -0.0250,\n  bond: 0.0073\n}, {\n  year: 1948,\n  inflation: 0.0770,\n  equity: 0.0357,\n  bond: 0.0349\n}, {\n  year: 1949,\n  inflation: -0.0100,\n  equity: 0.0990,\n  bond: 0.0223\n}, {\n  year: 1950,\n  inflation: 0.0110,\n  equity: 0.2565,\n  bond: 0.0033\n}, {\n  year: 1951,\n  inflation: 0.0790,\n  equity: 0.1405,\n  bond: 0.0170\n}, {\n  year: 1952,\n  inflation: 0.0230,\n  equity: 0.0823,\n  bond: 0.0150\n}, {\n  year: 1953,\n  inflation: 0.0080,\n  equity: -0.0275,\n  bond: 0.0562\n}, {\n  year: 1954,\n  inflation: 0.0030,\n  equity: 0.3983,\n  bond: 0.0145\n}, {\n  year: 1955,\n  inflation: -0.0030,\n  equity: 0.2402,\n  bond: 0.0261\n}, {\n  year: 1956,\n  inflation: 0.0150,\n  equity: 0.0290,\n  bond: -0.0137\n}, {\n  year: 1957,\n  inflation: 0.0330,\n  equity: -0.0949,\n  bond: 0.0633\n}, {\n  year: 1958,\n  inflation: 0.0270,\n  equity: 0.3526,\n  bond: -0.0382\n}, {\n  year: 1959,\n  inflation: 0.0108,\n  equity: 0.0433,\n  bond: -0.0102\n}, {\n  year: 1960,\n  inflation: 0.0150,\n  equity: 0.0291,\n  bond: 0.1131\n}, {\n  year: 1961,\n  inflation: 0.0110,\n  equity: 0.1566,\n  bond: 0.0206\n}, {\n  year: 1962,\n  inflation: 0.0120,\n  equity: -0.0581,\n  bond: 0.0595\n}, {\n  year: 1963,\n  inflation: 0.0120,\n  equity: 0.1751,\n  bond: 0.0132\n}, {\n  year: 1964,\n  inflation: 0.0130,\n  equity: 0.1265,\n  bond: 0.0402\n}, {\n  year: 1965,\n  inflation: 0.0160,\n  equity: 0.0836,\n  bond: 0.0115\n}, {\n  year: 1966,\n  inflation: 0.0300,\n  equity: -0.0950,\n  bond: 0.0483\n}, {\n  year: 1967,\n  inflation: 0.0280,\n  equity: 0.1254,\n  bond: -0.0202\n}, {\n  year: 1968,\n  inflation: 0.0430,\n  equity: 0.0732,\n  bond: 0.0207\n}, {\n  year: 1969,\n  inflation: 0.0550,\n  equity: -0.1146,\n  bond: -0.0499\n}, {\n  year: 1970,\n  inflation: 0.0580,\n  equity: 0.0352,\n  bond: 0.1822\n}, {\n  year: 1971,\n  inflation: 0.0430,\n  equity: 0.1049,\n  bond: 0.0822\n}, {\n  year: 1972,\n  inflation: 0.0330,\n  equity: 0.1462,\n  bond: 0.0255\n}, {\n  year: 1973,\n  inflation: 0.0620,\n  equity: -0.1883,\n  bond: 0.0301\n}, {\n  year: 1974,\n  inflation: 0.1110,\n  equity: -0.2450,\n  bond: 0.0374\n}, {\n  year: 1975,\n  inflation: 0.0910,\n  equity: 0.3349,\n  bond: 0.0598\n}, {\n  year: 1976,\n  inflation: 0.0570,\n  equity: 0.0716,\n  bond: 0.1116\n}, {\n  year: 1977,\n  inflation: 0.0650,\n  equity: -0.1305,\n  bond: 0.0252\n}, {\n  year: 1978,\n  inflation: 0.0760,\n  equity: 0.1048,\n  bond: 0.0115\n}, {\n  year: 1979,\n  inflation: 0.1130,\n  equity: 0.1122,\n  bond: -0.0039\n}, {\n  year: 1980,\n  inflation: 0.1350,\n  equity: 0.1993,\n  bond: 0.0157\n}, {\n  year: 1981,\n  inflation: 0.1030,\n  equity: -0.1180,\n  bond: 0.0279\n}, {\n  year: 1982,\n  inflation: 0.0610,\n  equity: 0.2302,\n  bond: 0.3795\n}, {\n  year: 1983,\n  inflation: 0.0320,\n  equity: 0.1532,\n  bond: 0.0393\n}, {\n  year: 1984,\n  inflation: 0.0430,\n  equity: 0.0312,\n  bond: 0.1325\n}, {\n  year: 1985,\n  inflation: 0.0350,\n  equity: 0.2133,\n  bond: 0.2441\n}, {\n  year: 1986,\n  inflation: 0.0190,\n  equity: 0.2704,\n  bond: 0.2289\n}, {\n  year: 1987,\n  inflation: 0.0370,\n  equity: -0.0529,\n  bond: -0.0258\n}, {\n  year: 1988,\n  inflation: 0.0410,\n  equity: 0.1393,\n  bond: 0.0616\n}, {\n  year: 1989,\n  inflation: 0.0480,\n  equity: 0.1912,\n  bond: 0.0909\n}, {\n  year: 1990,\n  inflation: 0.0540,\n  equity: -0.0426,\n  bond: 0.0896\n}, {\n  year: 1991,\n  inflation: 0.0420,\n  equity: 0.2783,\n  bond: 0.1499\n}, {\n  year: 1992,\n  inflation: 0.0300,\n  equity: 0.0460,\n  bond: 0.0988\n}, {\n  year: 1993,\n  inflation: 0.0300,\n  equity: 0.0868,\n  bond: 0.1244\n}, {\n  year: 1994,\n  inflation: 0.0260,\n  equity: -0.0164,\n  bond: -0.0705\n}, {\n  year: 1995,\n  inflation: 0.0280,\n  equity: 0.3206,\n  bond: 0.2249\n}, {\n  year: 1996,\n  inflation: 0.0290,\n  equity: 0.2471,\n  bond: -0.0052\n}, {\n  year: 1997,\n  inflation: 0.0230,\n  equity: 0.2573,\n  bond: 0.1380\n}, {\n  year: 1998,\n  inflation: 0.0160,\n  equity: 0.2963,\n  bond: 0.1144\n}, {\n  year: 1999,\n  inflation: 0.0220,\n  equity: 0.1416,\n  bond: -0.0810\n}, {\n  year: 2000,\n  inflation: 0.0340,\n  equity: -0.0631,\n  bond: 0.1725\n}, {\n  year: 2001,\n  inflation: 0.0280,\n  equity: -0.1463,\n  bond: 0.0601\n}, {\n  year: 2002,\n  inflation: 0.0160,\n  equity: -0.2143,\n  bond: 0.1238\n}, {\n  year: 2003,\n  inflation: 0.0230,\n  equity: 0.2642,\n  bond: 0.0331\n}, {\n  year: 2004,\n  inflation: 0.0270,\n  equity: 0.0432,\n  bond: 0.0363\n}, {\n  year: 2005,\n  inflation: 0.0340,\n  equity: 0.0824,\n  bond: 0.0276\n}, {\n  year: 2006,\n  inflation: 0.0320,\n  equity: 0.1137,\n  bond: 0.0198\n}, {\n  year: 2007,\n  inflation: 0.0290,\n  equity: -0.0319,\n  bond: 0.1243\n}, {\n  year: 2008,\n  inflation: 0.0380,\n  equity: -0.3722,\n  bond: 0.1346\n}, {\n  year: 2009,\n  inflation: -0.0040,\n  equity: 0.2981,\n  bond: -0.0659\n}, {\n  year: 2010,\n  inflation: 0.0160,\n  equity: 0.1415,\n  bond: 0.0633\n}, {\n  year: 2011,\n  inflation: 0.0320,\n  equity: 0.0140,\n  bond: 0.1500\n}, {\n  year: 2012,\n  inflation: 0.0210,\n  equity: 0.1383,\n  bond: 0.0246\n}, {\n  year: 2013,\n  inflation: 0.0150,\n  equity: 0.2310,\n  bond: -0.0554\n}, {\n  year: 2014,\n  inflation: 0.0160,\n  equity: 0.1129,\n  bond: 0.1090\n}, {\n  year: 2015,\n  inflation: 0.0010,\n  equity: -0.0540,\n  bond: 0.0017\n}, {\n  year: 2016,\n  inflation: 0.0130,\n  equity: 0.1858,\n  bond: -0.0063\n}, {\n  year: 2017,\n  inflation: 0.0210,\n  equity: 0.2262,\n  bond: 0.0124\n}, {\n  year: 2018,\n  inflation: 0.0240,\n  equity: -0.0654,\n  bond: 0.0155\n}, {\n  year: 2019,\n  inflation: 0.0180,\n  equity: 0.2573,\n  bond: 0.1055\n}, {\n  year: 2020,\n  inflation: 0.0120,\n  equity: 0.1573,\n  bond: 0.0176\n}];\n\nfunction Chart(props) {\n  _s();\n\n  const svgID = 'd3target';\n  const xAxisID = 'xaxis';\n  const yAxisID = 'yaxis';\n  const portLineID = 'pline';\n  const hoverLineID = 'hoverLine';\n  const margin = {\n    top: 40,\n    right: 80,\n    bottom: 60,\n    left: 100\n  };\n  const totalWidth = 960;\n  const totalHeight = 700;\n  const boundedWidth = totalWidth - margin.left - margin.right;\n  const boundedHeight = totalHeight - margin.top - margin.bottom;\n  const tooltipWidth = 75;\n  const tooltipHeight = 75;\n  const marginTranslate = \"translate(\" + margin.left + \",\" + margin.top + \")\";\n  const portfolioLineColor = \"Blue\";\n  const portfolioFailedLineColor = \"OrangeRed\";\n  const normalStrokeWidth = 1.5;\n  const normalLineOp = 0.5;\n  var allCycleData = [];\n  var allCycleMeta = [];\n  var pctFormat = d3.format(\"4.2%\");\n\n  const getXScale = () => {\n    var xExt = [props.currentage, props.lifeexpectancy];\n    return d3.scaleLinear().domain(xExt).range([0, boundedWidth]);\n  };\n\n  const getYScale = (rangeMin, rangeMax) => {\n    var yExt = [rangeMin, rangeMax];\n    return d3.scaleLinear().domain(yExt).range([boundedHeight, 0]);\n  };\n\n  const drawAxes = (svg, xScaleIn, yScaleIn) => {\n    svg.append(\"g\").attr(\"id\", xAxisID).attr(\"transform\", \"translate(0,\" + boundedHeight + \")\").call(d3.axisBottom(xScaleIn));\n    svg.append(\"g\").attr(\"id\", yAxisID).call(d3.axisLeft(yScaleIn));\n  };\n\n  const drawPortfolioLine = (svg, xScaleIn, yScaleIn, oneCycleMeta, oneCycle) => {\n    // Add the equity line\n    svg.append(\"path\").datum(oneCycle).attr('class', portLineID).attr(\"fill\", \"none\").attr(\"pointer-events\", \"none\").style(\"opacity\", 1).attr(\"stroke\", oneCycleMeta.lineColor).attr(\"stroke-width\", normalStrokeWidth).attr(\"d\", d3.line().x(function (d) {\n      return xScaleIn(d.age);\n    }).y(function (d) {\n      return yScaleIn(d.endValue);\n    }));\n  };\n\n  const prepHoverStuff = svg => {\n    /*\n    const tooltipWrapper = svg\n            .append('g')\n            .attr('id', ttWrapID)\n            .attr('display', 'none');\n    \n    const tooltipBackground = tooltipWrapper.append('rect')\n                    .style('opacity', 0.70)\n                    .attr('id', ttBackID)\n                    .attr('width', tooltipWidth)\n                    .attr('height', tooltipHeight)\n                    .attr(\"pointer-events\", \"none\")\n                    .attr(\"fill\", \"#e8e8e8\"); \n     const tooltipText = tooltipWrapper.append('g').append('text');\n     tooltipText.attr(\"pointer-events\", \"none\")\n                .attr('font-weight', 900)\n                .attr('text-anchor', 'left');\n                \n    const yearTT = tooltipText\n            .append('tspan')\n            .attr('id', ttYearID)\n            .attr('x', '5')\n            .attr('y', '5')\n            .attr('dy', '15px')\n            .attr(\"pointer-events\", \"none\");\n    const equityTT = tooltipText\n            .append('tspan')\n            .attr('id', ttEquityID)\n            .attr('x', '5')\n            .attr('y', '5')\n            .attr('dy', '30px')\n            .attr(\"pointer-events\", \"none\");\n    const bondTT = tooltipText\n            .append('tspan')\n            .attr('id', ttBondID)\n            .attr('x', '5')\n            .attr('y', '5')\n            .attr('dy', '45px')\n            .attr(\"pointer-events\", \"none\");\n    const inflationTT = tooltipText\n            .append('tspan')\n            .attr('id', ttInflationID)\n            .attr('x', '5')\n            .attr('y', '5')\n            .attr('dy', '60px')\n            .attr(\"pointer-events\", \"none\");                \n    */\n    const hoverLine = svg.append(\"g\").append(\"rect\").style('opacity', 0).attr('id', hoverLineID).attr(\"pointer-events\", \"none\").attr(\"class\", \"dotted\").attr(\"stroke-width\", \"1px\").attr(\"width\", \".5px\").attr(\"height\", boundedHeight);\n  };\n\n  const getHoverLine = () => {\n    return d3.select('#' + hoverLineID);\n  };\n\n  const handleMouseOver = e => {// getHoverLine().style('opacity', 1)\n  };\n\n  const handleMouseMove = e => {\n    /*\n    const bisect = d3.bisector((d) => d.age).left;\n    var xScaleIn = getXScale();\n    const coords = d3.pointer(e);\n    const x0 = xScaleIn.invert(coords[0]);\n    const i = bisect(histData, x0, 1);\n    const selectedData = histData[i];\n    const clientX = xScaleIn(selectedData.year);\n    var tooltipX = clientX;\n     // prevent the tooltip from getting clipped.\n    if (boundedWidth <= (clientX + tooltipWidth)) {\n        tooltipX = clientX - tooltipWidth;\n    }\n     var ttYear = getTooltipYear();\n    ttYear.text(selectedData.year);\n    getTooltipEquity().text('stocks: ' + pctFormat(selectedData.equity));\n    getTooltipBond().text('bonds: ' + pctFormat(selectedData.bond));\n    getTooltipInflation().text('inflation: ' + pctFormat(selectedData.inflation));\n     const ttBounds = getTooltipWrapper().node().getBBox();\n    getTooltipBackground()                \n        .attr('width', ttBounds.width)\n        .attr('height', ttBounds.height);\n     getTooltipWrapper().attr(\"transform\", \"translate(\" + tooltipX + \",\" + coords[1] + \")\");        \n    getHoverLine().attr('x', clientX);\n    */\n  };\n\n  const handleMouseLeave = () => {// getHoverLine().style('opacity', 0)\n  };\n\n  const cleanupPrev = svg => {\n    const xSelect = '#' + xAxisID;\n    const ySelect = '#' + yAxisID;\n    const pLineSelect = '.' + portLineID;\n    d3.select(xSelect).remove();\n    d3.select(ySelect).remove();\n    d3.selectAll(pLineSelect).remove();\n  };\n\n  const runCycle = (startIndex, numYears) => {\n    var cycleData = [];\n\n    for (var i = 0; i < numYears; i++) {\n      // TODO : need to account for inflation\n      var obj = {\n        \"year\": histData[startIndex + i].year,\n        \"age\": +props.currentage + i,\n        \"beginValue\": i > 0 ? cycleData[i - 1].endValue : +props.portfoliovalue,\n        \"equityReturn\": histData[startIndex + i].equity,\n        \"bondReturn\": histData[startIndex + i].bond,\n        \"aggReturn\": histData[startIndex + i].equity * (props.stockallocation / 100) + histData[startIndex + i].bond * (props.bondallocation / 100),\n        \"spend\": +props.spendvalue,\n        \"actualSpend\": +props.spendvalue,\n        \"endValue\": +props.portfoliovalue\n      }; // endValue is begin - spend + SS + returns\n\n      obj.actualSpend = obj.age >= props.ssage ? obj.spend - props.ssincome : obj.spend;\n      obj.endValue = obj.beginValue - obj.actualSpend;\n      obj.endValue = obj.endValue * (1 + obj.aggReturn); //console.log('age:' + obj.age + ' begin:' + obj.beginValue + ' actualSpend:' + actualSpend +\n      //            ' return:' + obj.aggReturn + ' end:' + obj.endValue\n      //           );\n\n      cycleData.push(obj);\n    }\n\n    return cycleData;\n  };\n\n  const calcCycleMeta = oneCycle => {\n    var ext = d3.extent(oneCycle, d => d.endValue);\n    var avg = d3.mean(oneCycle, d => d.endValue);\n    var med = d3.median(oneCycle, d => d.endValue);\n    var totalSpend = d3.sum(oneCycle, d => d.actualSpend);\n    var oneMeta = {\n      'extent': ext,\n      'mean': avg,\n      'median': med,\n      'low10': low10,\n      'high10': high10,\n      'lineColor': ext[0] > 0 ? portfolioLineColor : portfolioFailedLineColor\n    };\n    return oneMeta;\n  };\n\n  const calcCycles = svg => {\n    const lifetime = props.lifeexpectancy - props.currentage;\n    const numCycles = histData.length - lifetime;\n    const startIndex = 0;\n    var portMin = Number.POSITIVE_INFINITY;\n    var portMax = Number.NEGATIVE_INFINITY;\n    cleanupPrev();\n\n    for (var i = 0; i < numCycles; i++) {\n      var oneCycle = runCycle(startIndex + i, lifetime);\n      var cycleMeta = calcCycleMeta(oneCycle);\n      allCycleMeta[i] = cycleMeta;\n      allCycleData[i] = oneCycle;\n      portMin = Math.min(portMin, cycleMeta.extent[0]);\n      portMax = Math.max(portMax, cycleMeta.extent[1]);\n    } // per cycle input is the starting index of historical data\n    // output is per-year value, spend, and maybe returns (stock, bond, aggregate)\n\n\n    const xScale = getXScale();\n    const yScale = getYScale(portMin, portMax);\n    drawAxes(svg, xScale, yScale);\n\n    for (i = 0; i < numCycles; i++) {\n      drawPortfolioLine(svg, xScale, yScale, allCycleMeta[i], allCycleData[i]);\n    }\n  };\n\n  React.useEffect(() => {\n    const svgSelect = '#' + svgID;\n    const svg = d3.select(svgSelect).append(\"g\").attr(\"transform\", marginTranslate);\n    calcCycles(svg); // prepHoverStuff(svg);\n    //console.log('effect');\n  }, [props]); //console.log('render');\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: svgID,\n      width: totalWidth,\n      height: totalHeight,\n      children: /*#__PURE__*/_jsxDEV(\"rect\", {\n        id: \"trackingRect\",\n        style: {\n          opacity: 0\n        },\n        width: boundedWidth,\n        height: boundedHeight,\n        transform: marginTranslate,\n        fill: \"LightGrey\",\n        onMouseEnter: handleMouseOver,\n        onMouseMove: handleMouseMove,\n        onMouseLeave: handleMouseLeave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Chart;\n;\nexport default Chart; // d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n// tooltip example : https://observablehq.com/@connor-roche/multi-line-chart-focus-context-w-mouseover-tooltip\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/chart.js"],"names":["React","Box","d3","histData","year","inflation","equity","bond","Chart","props","svgID","xAxisID","yAxisID","portLineID","hoverLineID","margin","top","right","bottom","left","totalWidth","totalHeight","boundedWidth","boundedHeight","tooltipWidth","tooltipHeight","marginTranslate","portfolioLineColor","portfolioFailedLineColor","normalStrokeWidth","normalLineOp","allCycleData","allCycleMeta","pctFormat","format","getXScale","xExt","currentage","lifeexpectancy","scaleLinear","domain","range","getYScale","rangeMin","rangeMax","yExt","drawAxes","svg","xScaleIn","yScaleIn","append","attr","call","axisBottom","axisLeft","drawPortfolioLine","oneCycleMeta","oneCycle","datum","style","lineColor","line","x","d","age","y","endValue","prepHoverStuff","hoverLine","getHoverLine","select","handleMouseOver","e","handleMouseMove","handleMouseLeave","cleanupPrev","xSelect","ySelect","pLineSelect","remove","selectAll","runCycle","startIndex","numYears","cycleData","i","obj","portfoliovalue","stockallocation","bondallocation","spendvalue","actualSpend","ssage","spend","ssincome","beginValue","aggReturn","push","calcCycleMeta","ext","extent","avg","mean","med","median","totalSpend","sum","oneMeta","low10","high10","calcCycles","lifetime","numCycles","length","portMin","Number","POSITIVE_INFINITY","portMax","NEGATIVE_INFINITY","cycleMeta","Math","min","max","xScale","yScale","useEffect","svgSelect","opacity"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Box } from \"@mui/system\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\n\nconst histData = \n    [{ year: 1921, inflation: -0.1090, equity: 0.0267, bond: 0.1088},\n    { year: 1922, inflation: -0.0620, equity: 0.2192, bond: 0.0386},\n    { year: 1923, inflation: 0.0180, equity: -0.0079, bond: 0.0658},\n    { year: 1924, inflation: 0.0040, equity: 0.1982, bond: 0.0556},\n    { year: 1925, inflation: 0.0240, equity: 0.1957, bond: 0.0522},\n    { year: 1926, inflation: 0.0090, equity: 0.0593, bond: 0.0629},\n    { year: 1927, inflation: -0.0190, equity: 0.3082, bond: 0.0342},\n    { year: 1928, inflation: -0.0120, equity: 0.4181, bond: 0.0129},\n    { year: 1929, inflation: 0.0000, equity: -0.1267, bond: 0.0598},\n    { year: 1930, inflation: -0.0270, equity: -0.2639, bond: 0.0291},\n    { year: 1931, inflation: -0.0890, equity: -0.4806, bond: 0.0077},\n    { year: 1932, inflation: -0.1030, equity: -0.1458, bond: 0.0652},\n    { year: 1933, inflation: -0.0520, equity: 0.4866, bond: 0.0478},\n    { year: 1934, inflation: 0.0350, equity: -0.1214, bond: 0.0571},\n    { year: 1935, inflation: 0.0260, equity: 0.4860, bond: 0.0390},\n    { year: 1937, inflation: 0.0370, equity: -0.3570,  bond: 0.0363},\n    { year: 1938, inflation: -0.0200, equity: 0.1052, bond: 0.0416},\n    { year: 1939, inflation: -0.0130, equity: -0.0160, bond: 0.0357},\n    { year: 1940, inflation: 0.0070, equity: -0.1423, bond: 0.0434},\n    { year: 1941, inflation: 0.0510, equity: -0.1536, bond: -0.0212},\n    { year: 1942, inflation: 0.1090, equity: 0.1299, bond: 0.0238},\n    { year: 1943, inflation: 0.0600, equity: 0.1744, bond: 0.0239},\n    { year: 1944, inflation: 0.0160, equity: 0.1384, bond: 0.0336},\n    { year: 1945, inflation: 0.0230, equity: 0.3358, bond: 0.0383},\n    { year: 1946, inflation: 0.0850, equity: -0.1559, bond: 0.0171},\n    { year: 1947, inflation: 0.1440, equity: -0.0250, bond: 0.0073},\n    { year: 1948, inflation: 0.0770, equity: 0.0357, bond: 0.0349},\n    { year: 1949, inflation: -0.0100, equity: 0.0990, bond: 0.0223},\n    { year: 1950, inflation: 0.0110, equity: 0.2565, bond: 0.0033},\n    { year: 1951, inflation: 0.0790, equity: 0.1405, bond: 0.0170},\n    { year: 1952, inflation: 0.0230, equity: 0.0823, bond: 0.0150},\n    { year: 1953, inflation: 0.0080, equity: -0.0275, bond: 0.0562},\n    { year: 1954, inflation: 0.0030, equity: 0.3983, bond: 0.0145},\n    { year: 1955, inflation: -0.0030, equity: 0.2402, bond: 0.0261},\n    { year: 1956, inflation: 0.0150, equity: 0.0290, bond: -0.0137},\n    { year: 1957, inflation: 0.0330, equity: -0.0949, bond: 0.0633},\n    { year: 1958, inflation: 0.0270, equity: 0.3526, bond: -0.0382},\n    { year: 1959, inflation: 0.0108, equity: 0.0433, bond: -0.0102},\n    { year: 1960, inflation: 0.0150, equity: 0.0291, bond: 0.1131},\n    { year: 1961, inflation: 0.0110, equity: 0.1566, bond: 0.0206},\n    { year: 1962, inflation: 0.0120, equity: -0.0581, bond: 0.0595},\n    { year: 1963, inflation: 0.0120, equity: 0.1751, bond: 0.0132},\n    { year: 1964, inflation: 0.0130, equity: 0.1265, bond: 0.0402},\n    { year: 1965, inflation: 0.0160, equity: 0.0836, bond: 0.0115},\n    { year: 1966, inflation: 0.0300, equity: -0.0950, bond: 0.0483},\n    { year: 1967, inflation: 0.0280, equity: 0.1254, bond: -0.0202},\n    { year: 1968, inflation: 0.0430, equity: 0.0732, bond: 0.0207},\n    { year: 1969, inflation: 0.0550, equity: -0.1146, bond: -0.0499},\n    { year: 1970, inflation: 0.0580, equity: 0.0352, bond: 0.1822},\n    { year: 1971, inflation: 0.0430, equity: 0.1049, bond: 0.0822},\n    { year: 1972, inflation: 0.0330, equity: 0.1462, bond: 0.0255},\n    { year: 1973, inflation: 0.0620, equity: -0.1883, bond: 0.0301},\n    { year: 1974, inflation: 0.1110, equity: -0.2450, bond: 0.0374},\n    { year: 1975, inflation: 0.0910, equity: 0.3349, bond: 0.0598},\n    { year: 1976, inflation: 0.0570, equity: 0.0716, bond: 0.1116},\n    { year: 1977, inflation: 0.0650, equity: -0.1305, bond: 0.0252},\n    { year: 1978, inflation: 0.0760, equity: 0.1048, bond: 0.0115},\n    { year: 1979, inflation: 0.1130, equity: 0.1122, bond: -0.0039},\n    { year: 1980, inflation: 0.1350, equity: 0.1993, bond: 0.0157},\n    { year: 1981, inflation: 0.1030, equity: -0.1180, bond: 0.0279},\n    { year: 1982, inflation: 0.0610, equity: 0.2302, bond: 0.3795},\n    { year: 1983, inflation: 0.0320, equity: 0.1532, bond: 0.0393},\n    { year: 1984, inflation: 0.0430, equity: 0.0312, bond: 0.1325},\n    { year: 1985, inflation: 0.0350, equity: 0.2133, bond: 0.2441},\n    { year: 1986, inflation: 0.0190, equity: 0.2704, bond: 0.2289},\n    { year: 1987, inflation: 0.0370, equity: -0.0529, bond: -0.0258},\n    { year: 1988, inflation: 0.0410, equity: 0.1393, bond: 0.0616},\n    { year: 1989, inflation: 0.0480, equity: 0.1912, bond: 0.0909},\n    { year: 1990, inflation: 0.0540, equity: -0.0426, bond: 0.0896},\n    { year: 1991, inflation: 0.0420, equity: 0.2783, bond: 0.1499},\n    { year: 1992, inflation: 0.0300, equity: 0.0460, bond: 0.0988},\n    { year: 1993, inflation: 0.0300, equity: 0.0868, bond: 0.1244},\n    { year: 1994, inflation: 0.0260, equity: -0.0164, bond: -0.0705},\n    { year: 1995, inflation: 0.0280, equity: 0.3206, bond: 0.2249},\n    { year: 1996, inflation: 0.0290, equity: 0.2471, bond: -0.0052},\n    { year: 1997, inflation: 0.0230, equity: 0.2573, bond: 0.1380},\n    { year: 1998, inflation: 0.0160, equity: 0.2963, bond: 0.1144},\n    { year: 1999, inflation: 0.0220, equity: 0.1416, bond: -0.0810},\n    { year: 2000, inflation: 0.0340, equity: -0.0631, bond: 0.1725},\n    { year: 2001, inflation: 0.0280, equity: -0.1463, bond: 0.0601},\n    { year: 2002, inflation: 0.0160, equity: -0.2143, bond: 0.1238},\n    { year: 2003, inflation: 0.0230, equity: 0.2642, bond: 0.0331},\n    { year: 2004, inflation: 0.0270, equity: 0.0432, bond: 0.0363},\n    { year: 2005, inflation: 0.0340, equity: 0.0824, bond: 0.0276},\n    { year: 2006, inflation: 0.0320, equity: 0.1137, bond: 0.0198},\n    { year: 2007, inflation: 0.0290, equity: -0.0319, bond: 0.1243},\n    { year: 2008, inflation: 0.0380, equity: -0.3722, bond: 0.1346},\n    { year: 2009, inflation: -0.0040, equity: 0.2981, bond: -0.0659},\n    { year: 2010, inflation: 0.0160, equity: 0.1415, bond: 0.0633},\n    { year: 2011, inflation: 0.0320, equity: 0.0140, bond: 0.1500},\n    { year: 2012, inflation: 0.0210, equity: 0.1383, bond: 0.0246},\n    { year: 2013, inflation: 0.0150, equity: 0.2310, bond: -0.0554},\n    { year: 2014, inflation: 0.0160, equity: 0.1129, bond: 0.1090},\n    { year: 2015, inflation: 0.0010, equity: -0.0540, bond: 0.0017},\n    { year: 2016, inflation: 0.0130, equity: 0.1858, bond: -0.0063},\n    { year: 2017, inflation: 0.0210, equity: 0.2262, bond: 0.0124},\n    { year: 2018, inflation: 0.0240, equity: -0.0654, bond: 0.0155},\n    { year: 2019, inflation: 0.0180, equity: 0.2573, bond: 0.1055},\n    { year: 2020, inflation: 0.0120, equity: 0.1573, bond: 0.0176}];\n\nfunction Chart (props) {\n  \n    const svgID = 'd3target';\n    const xAxisID = 'xaxis';\n    const yAxisID = 'yaxis';\n    const portLineID = 'pline'\n    const hoverLineID = 'hoverLine';\n    const margin = { top: 40, right: 80, bottom: 60, left: 100 };\n    const totalWidth = 960;\n    const totalHeight = 700;\n    const boundedWidth = totalWidth - margin.left - margin.right;\n    const boundedHeight = totalHeight - margin.top - margin.bottom;\n    const tooltipWidth = 75;\n    const tooltipHeight = 75;\n    const marginTranslate = \"translate(\" + margin.left + \",\" + margin.top + \")\";\n    const portfolioLineColor = \"Blue\";\n    const portfolioFailedLineColor = \"OrangeRed\";\n    const normalStrokeWidth = 1.5;\n    const normalLineOp = 0.5;\n    var allCycleData = [];\n    var allCycleMeta = [];\n    var pctFormat = d3.format(\"4.2%\");\n\n    const getXScale = () => { \n        var xExt = [props.currentage, props.lifeexpectancy];\n        return d3.scaleLinear()\n                    .domain(xExt)\n                    .range([ 0, boundedWidth ]);\n    }\n\n    const getYScale = (rangeMin, rangeMax) => {\n        var yExt = [rangeMin, rangeMax];\n        return d3.scaleLinear()\n                    .domain(yExt)\n                    .range([ boundedHeight, 0 ]);\n    }\n\n    const drawAxes = (svg, xScaleIn, yScaleIn) => {\n        svg.append(\"g\")\n            .attr(\"id\", xAxisID)\n            .attr(\"transform\", \"translate(0,\" + boundedHeight + \")\")\n            .call(d3.axisBottom(xScaleIn));\n        svg.append(\"g\")\n            .attr(\"id\", yAxisID)\n            .call(d3.axisLeft(yScaleIn));\n    };\n\n    const drawPortfolioLine = (svg, xScaleIn, yScaleIn, oneCycleMeta, oneCycle) => {\n        // Add the equity line\n        svg.append(\"path\")\n            .datum(oneCycle)\n            .attr('class', portLineID)\n            .attr(\"fill\", \"none\")\n            .attr(\"pointer-events\", \"none\")\n            .style(\"opacity\", 1)\n            .attr(\"stroke\", oneCycleMeta.lineColor)\n            .attr(\"stroke-width\", normalStrokeWidth)\n            .attr(\"d\", d3.line()\n                        .x(function(d) { return xScaleIn(d.age) })\n                        .y(function(d) { return yScaleIn(d.endValue) })\n            );        \n    }\n\n    const prepHoverStuff = (svg) => {\n        /*\n        const tooltipWrapper = svg\n                .append('g')\n                .attr('id', ttWrapID)\n                .attr('display', 'none');\n        \n        const tooltipBackground = tooltipWrapper.append('rect')\n                        .style('opacity', 0.70)\n                        .attr('id', ttBackID)\n                        .attr('width', tooltipWidth)\n                        .attr('height', tooltipHeight)\n                        .attr(\"pointer-events\", \"none\")\n                        .attr(\"fill\", \"#e8e8e8\"); \n\n        const tooltipText = tooltipWrapper.append('g').append('text');\n\n        tooltipText.attr(\"pointer-events\", \"none\")\n                    .attr('font-weight', 900)\n                    .attr('text-anchor', 'left');\n                    \n        const yearTT = tooltipText\n                .append('tspan')\n                .attr('id', ttYearID)\n                .attr('x', '5')\n                .attr('y', '5')\n                .attr('dy', '15px')\n                .attr(\"pointer-events\", \"none\");\n        const equityTT = tooltipText\n                .append('tspan')\n                .attr('id', ttEquityID)\n                .attr('x', '5')\n                .attr('y', '5')\n                .attr('dy', '30px')\n                .attr(\"pointer-events\", \"none\");\n        const bondTT = tooltipText\n                .append('tspan')\n                .attr('id', ttBondID)\n                .attr('x', '5')\n                .attr('y', '5')\n                .attr('dy', '45px')\n                .attr(\"pointer-events\", \"none\");\n        const inflationTT = tooltipText\n                .append('tspan')\n                .attr('id', ttInflationID)\n                .attr('x', '5')\n                .attr('y', '5')\n                .attr('dy', '60px')\n                .attr(\"pointer-events\", \"none\");                \n*/\n        const hoverLine = svg\n                .append(\"g\")\n                .append(\"rect\")\n                    .style('opacity', 0)\n                    .attr('id', hoverLineID)\n                    .attr(\"pointer-events\", \"none\")\n                    .attr(\"class\", \"dotted\")\n                    .attr(\"stroke-width\", \"1px\")\n                    .attr(\"width\", \".5px\")\n                    .attr(\"height\", boundedHeight);\n        \n    }\n\n    const getHoverLine = () => {\n        return d3.select('#' + hoverLineID);\n    }\n\n    const handleMouseOver = (e) => {\n        // getHoverLine().style('opacity', 1)\n    }\n\n    const handleMouseMove = (e) => {\n        /*\n        const bisect = d3.bisector((d) => d.age).left;\n        var xScaleIn = getXScale();\n        const coords = d3.pointer(e);\n        const x0 = xScaleIn.invert(coords[0]);\n        const i = bisect(histData, x0, 1);\n        const selectedData = histData[i];\n        const clientX = xScaleIn(selectedData.year);\n        var tooltipX = clientX;\n\n        // prevent the tooltip from getting clipped.\n        if (boundedWidth <= (clientX + tooltipWidth)) {\n            tooltipX = clientX - tooltipWidth;\n        }\n\n        var ttYear = getTooltipYear();\n        ttYear.text(selectedData.year);\n        getTooltipEquity().text('stocks: ' + pctFormat(selectedData.equity));\n        getTooltipBond().text('bonds: ' + pctFormat(selectedData.bond));\n        getTooltipInflation().text('inflation: ' + pctFormat(selectedData.inflation));\n\n        const ttBounds = getTooltipWrapper().node().getBBox();\n        getTooltipBackground()                \n            .attr('width', ttBounds.width)\n            .attr('height', ttBounds.height);\n\n        getTooltipWrapper().attr(\"transform\", \"translate(\" + tooltipX + \",\" + coords[1] + \")\");        \n        getHoverLine().attr('x', clientX);\n        */\n    };\n    \n    const handleMouseLeave = () => {\n        // getHoverLine().style('opacity', 0)\n    };\n\n    const cleanupPrev = (svg) => {\n        const xSelect = '#' + xAxisID;\n        const ySelect = '#' + yAxisID;\n        const pLineSelect = '.' + portLineID;\n        d3.select(xSelect).remove();\n        d3.select(ySelect).remove();\n        d3.selectAll(pLineSelect).remove();\n    }\n\n    const runCycle = (startIndex, numYears) => {\n        var cycleData = [];\n\n        for(var i = 0; i < numYears; i++){\n            // TODO : need to account for inflation\n            var obj = { \"year\": histData[startIndex + i].year,\n                        \"age\": +(props.currentage) + i,\n                        \"beginValue\": (i > 0) ? cycleData[i - 1].endValue : +(props.portfoliovalue),\n                        \"equityReturn\": histData[startIndex + i].equity,\n                        \"bondReturn\": histData[startIndex + i].bond,\n                        \"aggReturn\": ((histData[startIndex + i].equity * (props.stockallocation / 100)) +\n                                      (histData[startIndex + i].bond * (props.bondallocation / 100))),\n                        \"spend\": +(props.spendvalue),\n                        \"actualSpend\": +(props.spendvalue),\n                        \"endValue\": +(props.portfoliovalue),\n                      };\n            // endValue is begin - spend + SS + returns\n            obj.actualSpend = (obj.age >= props.ssage) ? (obj.spend - props.ssincome) : obj.spend;\n            obj.endValue = obj.beginValue - obj.actualSpend;\n            obj.endValue = obj.endValue * (1 + obj.aggReturn);\n            //console.log('age:' + obj.age + ' begin:' + obj.beginValue + ' actualSpend:' + actualSpend +\n            //            ' return:' + obj.aggReturn + ' end:' + obj.endValue\n            //           );\n            cycleData.push(obj);\n        }\n\n        return cycleData;\n    }\n\n    const calcCycleMeta = (oneCycle) => {\n        var ext = d3.extent(oneCycle, (d) => d.endValue);\n        var avg = d3.mean(oneCycle, (d) => d.endValue);\n        var med = d3.median(oneCycle, (d) => d.endValue);\n        var totalSpend = d3.sum(oneCycle, (d) => d.actualSpend);\n\n        var oneMeta = {\n            'extent': ext,\n            'mean': avg,\n            'median': med,\n            'low10': low10,\n            'high10': high10,\n            'lineColor': (ext[0] > 0) ? portfolioLineColor : portfolioFailedLineColor,\n        };\n\n        return oneMeta;\n    }\n\n    const calcCycles = (svg) => {\n        const lifetime = props.lifeexpectancy - props.currentage;\n        const numCycles = (histData.length - lifetime);\n        const startIndex = 0;\n        var portMin = Number.POSITIVE_INFINITY;\n        var portMax = Number.NEGATIVE_INFINITY;\n\n        cleanupPrev();\n\n        for (var i = 0; i < numCycles; i++) {\n            var oneCycle = runCycle(startIndex + i, lifetime);\n            var cycleMeta = calcCycleMeta(oneCycle);\n            \n            allCycleMeta[i] = cycleMeta;\n            allCycleData[i] = oneCycle;\n\n            portMin = Math.min(portMin, cycleMeta.extent[0]);\n            portMax = Math.max(portMax, cycleMeta.extent[1]);\n        }\n        // per cycle input is the starting index of historical data\n        // output is per-year value, spend, and maybe returns (stock, bond, aggregate)\n        const xScale = getXScale();\n        const yScale = getYScale(portMin, portMax);\n        drawAxes(svg, xScale, yScale);\n\n        for (i = 0; i < numCycles; i++) {\n            drawPortfolioLine(svg, xScale, yScale, allCycleMeta[i], allCycleData[i]);\n        }\n    }\n\n    React.useEffect(() => {\n\n        const svgSelect = '#' + svgID;\n        const svg = d3.select(svgSelect)\n                      .append(\"g\")\n                      .attr(\"transform\", marginTranslate);\n        calcCycles(svg);\n\n        // prepHoverStuff(svg);\n        //console.log('effect');\n    }, [props] );\n\n    //console.log('render');\n    return (\n        <div>\n            <svg id={svgID} \n                    width={totalWidth}\n                    height={totalHeight} \n            >\n                <rect id='trackingRect'\n                    style={{ opacity:0 }}\n                    width={boundedWidth}\n                    height={boundedHeight}\n                    transform={marginTranslate}\n                    fill='LightGrey'\n                    onMouseEnter={handleMouseOver}\n                    onMouseMove={handleMouseMove}\n                    onMouseLeave={handleMouseLeave}\n                />\n            </svg>   \n        </div>\n    );\n};\n\nexport default Chart;\n\n// d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n// tooltip example : https://observablehq.com/@connor-roche/multi-line-chart-focus-context-w-mouseover-tooltip\n"]},"metadata":{},"sourceType":"module"}