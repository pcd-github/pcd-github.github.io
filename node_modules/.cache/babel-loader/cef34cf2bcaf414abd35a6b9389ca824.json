{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/chart.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport * as d3 from \"d3\";\nimport SummaryCards from \"./summary.js\";\nimport EndValueChart from './endvaluechart.js';\nimport \"./chartdata.css\";\nimport { histData } from \"./histdata.js\";\nimport { getAvgEquityReturn, getStdDevEquityReturn } from \"./histdata.js\";\nimport { makeCurrency, makePct, getColorStringForRelativeValue, getPerRunClassName, getPortfolioLineClassName, cleanupPrev, findByID } from './common.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart(props) {\n  _s();\n\n  const [allCycleDataState, setAllCycleDataState] = useState([]);\n  const [allCycleMetaState, setAllCycleMetaState] = useState([]);\n  const [avgAdjEndValueState, setAvgAdjEndValueState] = useState(0);\n  const [medianAdjEndValueState, setMedianAdjEndValueState] = useState(0);\n  const [minAdjEndValueState, setMinAdjEndValueState] = useState(0);\n  const [maxAdjEndValueState, setMaxAdjEndValueState] = useState(0);\n  const [avgReturnsState, setAvgReturnsState] = useState(0);\n  const [medianReturnsState, setMedianReturnsState] = useState(0);\n  const [minReturnsState, setMinReturnsState] = useState(0);\n  const [maxReturnsState, setMaxReturnsState] = useState(0);\n  const [numCyclesState, setNumCyclesState] = useState(0);\n  const [numFailsState, setNumFailsState] = useState(0);\n  const [minFailAgeState, setMinFailAgeState] = useState(0);\n  const [medianFailAgeState, setMedianFailAgeState] = useState(0);\n  const svgCycleChartID = 'd3cycletarget';\n  const perRunClass = getPerRunClassName();\n  const hoverLineID = 'hoverLine';\n  const ttWrapID = 'ttwrapper';\n  const ttBackID = 'ttbackground';\n  const ttAgeID = 'ttage';\n  const margin = {\n    top: 40,\n    right: 65,\n    bottom: 40,\n    left: 65\n  };\n  const totalWidth = 960;\n  const totalHeight = 500;\n  const boundedWidth = totalWidth - margin.left - margin.right;\n  const boundedHeight = totalHeight - margin.top - margin.bottom;\n  const tooltipWidth = 75;\n  const tooltipHeight = 75;\n  const marginTranslate = \"translate(\" + margin.left + \",\" + margin.top + \")\";\n  const normalStrokeWidth = 1.5;\n  var allCycleMeta = [];\n\n  const getXScale = () => {\n    var xExt = [props.currentage, props.lifeexpectancy];\n    return d3.scaleLinear().domain(xExt).range([0, boundedWidth]);\n  };\n\n  const getYScale = (rangeMin, rangeMax) => {\n    var yExt = [rangeMin, rangeMax];\n    return d3.scaleLinear().domain(yExt).range([boundedHeight, 0]);\n  };\n\n  const drawAxes = (svg, xScaleIn, yScaleIn, rangeMin, rangeMax) => {\n    svg.append(\"g\").attr(\"class\", perRunClass).attr(\"transform\", \"translate(0,\" + boundedHeight + \")\").call(d3.axisBottom(xScaleIn));\n    svg.append(\"g\").attr(\"class\", perRunClass).call(d3.axisLeft(yScaleIn));\n  };\n\n  const drawPortfolioLine = (svg, xScaleIn, yScaleIn, oneCycleMeta, oneCycle) => {\n    const classNames = perRunClass + ' ' + getPortfolioLineClassName() + ' ' + oneCycleMeta.lineColor;\n    svg.append(\"path\").datum(oneCycle).attr('id', oneCycleMeta.startYear).attr('class', classNames).attr(\"fill\", \"none\").attr(\"pointer-events\", \"none\").style(\"opacity\", 1).attr(\"stroke\", oneCycleMeta.lineColor).attr(\"stroke-width\", normalStrokeWidth).attr(\"d\", d3.line().x(function (d) {\n      return xScaleIn(d.age);\n    }).y(function (d) {\n      return yScaleIn(d.adjEndValue);\n    }));\n  };\n\n  const prepHoverStuff = svg => {\n    const tooltipWrapper = svg.append('g').attr('id', ttWrapID).attr('display', 'none');\n    tooltipWrapper.append('rect').style('opacity', 0.70).attr('id', ttBackID).attr('width', tooltipWidth).attr('height', tooltipHeight).attr(\"pointer-events\", \"none\").attr(\"fill\", \"#e8e8e8\");\n    const tooltipText = tooltipWrapper.append('g').append('text');\n    tooltipText.attr(\"pointer-events\", \"none\").attr('font-weight', 900).attr('text-anchor', 'left');\n    tooltipText.append('tspan').attr('id', ttAgeID).attr('x', '5').attr('y', '5').attr('dy', '15px').attr(\"pointer-events\", \"none\");\n    svg.append(\"g\").append(\"rect\").style('opacity', 0).attr('id', hoverLineID).attr(\"pointer-events\", \"none\").attr(\"class\", \"dotted\").attr(\"stroke-width\", \"1px\").attr(\"width\", \".5px\").attr(\"height\", boundedHeight);\n  };\n\n  const getHoverLine = () => {\n    return findByID(hoverLineID);\n  };\n\n  const getTooltipWrapper = () => {\n    return findByID(ttWrapID);\n  };\n\n  const getTooltipBackground = () => {\n    return findByID(ttBackID);\n  };\n\n  const getTooltipAgeSpan = () => {\n    return findByID(ttAgeID);\n  };\n\n  const handleMouseDown = e => {\n    var bondReturns = getBondReturns();\n    var avgBondReturns = d3.mean(bondReturns);\n    var stdBondReturns = d3.deviation(bondReturns);\n    console.log('equity avg return:' + makePct(getAvgEquityReturn()) + ' equity sdev:' + makePct(getStdDevEquityReturn()) + ' bond avg return:' + makePct(avgBondReturns) + ' bond sdev:' + makePct(stdBondReturns));\n  };\n\n  const handleMouseOver = e => {\n    getHoverLine().style('opacity', 1);\n    getTooltipWrapper().attr('display', null);\n  };\n\n  const handleMouseMove = e => {\n    const bisect = d3.bisector(d => d.age).left;\n    var xScaleIn = getXScale();\n    const coords = d3.pointer(e);\n    const x0 = xScaleIn.invert(coords[0]);\n    const oneCycleData = allCycleDataState[0];\n    const i = bisect(oneCycleData, x0, 1);\n    const selectedData = oneCycleData[i];\n    const clientX = xScaleIn(selectedData.age);\n    var tooltipX = clientX; // prevent the tooltip from getting clipped.\n\n    const tooltipWidth = 75;\n\n    if (boundedWidth <= clientX + tooltipWidth) {\n      tooltipX = clientX - tooltipWidth;\n    }\n\n    getTooltipAgeSpan().text('age: ' + selectedData.age);\n    const ttBounds = getTooltipWrapper().node().getBBox();\n    getTooltipBackground().attr('width', ttBounds.width).attr('height', ttBounds.height);\n    getTooltipWrapper().attr(\"transform\", \"translate(\" + tooltipX + \",\" + coords[1] + \")\");\n    getHoverLine().attr('x', clientX);\n    getTooltipWrapper().attr('x', tooltipX);\n  };\n\n  const handleMouseLeave = () => {\n    getHoverLine().style('opacity', 0);\n    getTooltipWrapper().attr('display', 'none');\n  };\n  /*\n  const dumpCycleData = (oneCycle) => {\n      for (var i = 0; i < oneCycle.length; i++) {\n           console.log(oneCycle[i].year + \n              ' st:' + makeCurrency(oneCycle[i].beginValue) +\n              ' cpi:' + Number(oneCycle[i].cumulativeCPI).toFixed(2) + \n              ' sp:' + makeCurrency(oneCycle[i].actualSpend) + \n              ' e$:' + makeCurrency(oneCycle[i].equityAppr) +\n              ' d$:' + makeCurrency(oneCycle[i].divAppr) +\n              ' b$:' + makeCurrency(oneCycle[i].bondAppr) +\n              ' f$: ' + makeCurrency(oneCycle[i].fees) + \n              ' ae$: ' + makeCurrency(oneCycle[i].adjEndValue)\n              );\n      }\n  }\n   */\n\n\n  const calcBondYield = (bondStake, histIndex) => {\n    var retValue = 0; // if we're at the end of the cycle, use the simplified calculation\n\n    if (histData.length <= histIndex + 1) {\n      retValue = bondStake * histData[histIndex].bonds;\n    } else {\n      var bg1 = (1 - Math.pow(1 + histData[histIndex + 1].bonds, -9)) * histData[histIndex].bonds;\n      bg1 = bg1 / histData[histIndex + 1].bonds;\n      var bg2 = 1 / Math.pow(1 + histData[histIndex + 1].bonds, 9);\n      bg2 = bg2 - 1;\n      retValue = bondStake * (bg1 + bg2 + histData[histIndex].bonds);\n    }\n\n    return retValue;\n  };\n\n  const findHistStartIndex = startDataYear => {\n    const firstYear = histData[0].year;\n    const offset = startDataYear - firstYear;\n    return offset;\n  };\n\n  const calcAnnualAggReturn = (oneYear, stockPct, bondPct) => {\n    var retVal = oneYear.equityReturn * stockPct + oneYear.bondReturn * bondPct;\n\n    if (isNaN(retVal)) {\n      if (1 === stockPct) {\n        retVal = oneYear.equityReturn;\n      } else if (1 === bondPct) {\n        retVal = oneYear.bondReturn;\n      } else {\n        retVal = 0;\n        console.log('unexpected aggReturn result- equity :(' + makePct(oneYear.equityReturn) + ',' + makePct(stockPct) + ') ' + ' bond:(' + makePct(oneYear.bondReturn) + ',' + makePct(bondPct) + ')');\n      }\n    }\n\n    return retVal;\n  };\n\n  const runCycle = (startIndex, numYears) => {\n    var cycleData = [];\n    const stockPct = +props.stockallocation / 100;\n    const bondPct = +props.bondallocation / 100;\n    const feePct = +props.feepct / 100;\n    const ssAge = +props.ssage;\n    const ssIncome = +props.ssincome;\n    const startCPI = histData[startIndex].cpi;\n\n    for (var i = 0; i < numYears; i++) {\n      var obj = {\n        \"year\": histData[startIndex + i].year,\n        \"age\": +props.currentage + i,\n        \"beginValue\": i > 0 ? cycleData[i - 1].endValue : +props.portfoliovalue,\n        \"equityReturn\": histData[startIndex + i].equity,\n        \"equityAppr\": 0,\n        \"divAppr\": 0,\n        \"bondReturn\": 0,\n        \"bondAppr\": 0,\n        \"aggReturn\": 0,\n        \"cumulativeCPI\": histData[startIndex + i].cpi / startCPI,\n        \"spend\": +props.spendvalue,\n        \"actualSpend\": +props.spendvalue,\n        \"fees\": 0,\n        \"netDelta\": 0,\n        \"endValue\": 0,\n        \"adjEndValue\": 0,\n        \"appr\": 0,\n        \"adjAppr\": 0\n      }; // adjust spend for cumultative cpi\n\n      obj.actualSpend = obj.spend * obj.cumulativeCPI; // apply ss adjustment if applicable\n\n      var adjustment = ssAge <= obj.age ? ssIncome * obj.cumulativeCPI : 0;\n      obj.actualSpend -= adjustment; // port1 = subtract spend from start port\n\n      obj.endValue = obj.beginValue - obj.actualSpend;\n\n      if (0 < obj.endValue) {\n        var startStockValue = obj.endValue * stockPct; // e growth = port1 * e-share * e-growth\n\n        obj.equityAppr = startStockValue * obj.equityReturn; // calc dividends\n\n        obj.divAppr = startStockValue * histData[startIndex + i].dividends; // b growth = port1 * b=share * b-growth\n\n        obj.bondAppr = calcBondYield(obj.endValue * bondPct, startIndex + i);\n        obj.bondReturn = obj.bondAppr / (obj.beginValue * bondPct);\n        obj.aggReturn = calcAnnualAggReturn(obj, stockPct, bondPct); // port2 = port1 + e-growth + b-growth\n\n        obj.appr = obj.equityAppr + obj.divAppr + obj.bondAppr;\n        obj.endValue += obj.appr; // end port = port2 - (fees (based on cpi-adj value))\n\n        obj.fees = (obj.beginValue + obj.appr) * feePct;\n        obj.endValue -= obj.fees; // total +/- for the year\n\n        obj.netDelta = obj.appr - obj.actualSpend - obj.fees;\n        console.log('y:' + obj.year + ' agg%:' + makePct(obj.aggReturn) + ' appr$:' + makeCurrency(obj.appr) + ' spend+fee$:' + makeCurrency(obj.actualSpend + obj.fees) + ' delta$' + makeCurrency(obj.netDelta));\n        obj.adjEndValue = obj.endValue / obj.cumulativeCPI;\n        obj.adjAppr = obj.appr / obj.cumulativeCPI;\n        cycleData.push(obj);\n      } else {\n        obj.endValue = obj.adjEndValue = 0;\n        cycleData.push(obj);\n        break;\n      }\n    }\n\n    return cycleData;\n  };\n\n  const getBondReturns = () => {\n    var retVal = [];\n\n    for (var iCycle = 0; iCycle < allCycleDataState.length; iCycle++) {\n      for (var year = 0; year < allCycleDataState[iCycle].length; year++) {\n        const oneYear = allCycleDataState[iCycle][year];\n        retVal.push(oneYear.bondReturn);\n      }\n    }\n\n    return retVal;\n  };\n\n  const getAggReturns = allCycles => {\n    var retVal = [];\n\n    for (var iCycle = 0; iCycle < allCycles.length; iCycle++) {\n      for (var year = 0; year < allCycles[iCycle].length; year++) {\n        const oneYear = allCycles[iCycle][year];\n        retVal.push(oneYear.aggReturn);\n      }\n    }\n\n    return retVal;\n  };\n\n  const getNetDeltas = allCycles => {\n    var retVal = [];\n\n    for (var iCycle = 0; iCycle < allCycles.length; iCycle++) {\n      for (var year = 0; year < allCycles[iCycle].length; year++) {\n        const oneYear = allCycles[iCycle][year];\n        retVal.push(oneYear.netDelta);\n      }\n    }\n\n    return retVal;\n  };\n\n  const calcCycleMeta = oneCycle => {\n    var extAdjEndValue = d3.extent(oneCycle, d => d.adjEndValue);\n    var avgAdjEndValue = d3.mean(oneCycle, d => d.adjEndValue);\n    var medAdjEndValue = d3.median(oneCycle, d => d.adjEndValue);\n    var totalSpend = d3.sum(oneCycle, d => d.actualSpend);\n    var totalAppr = d3.sum(oneCycle, d => d.appr);\n    var totalAdjAppr = d3.sum(oneCycle, d => d.adjAppr);\n    var pctStart = oneCycle[oneCycle.length - 1].adjEndValue / props.portfoliovalue;\n    const thisLineColor = getColorStringForRelativeValue(pctStart);\n    var extAggReturn = d3.extent(oneCycle, d => d.aggReturn);\n    var avgAggReturn = d3.mean(oneCycle, d => d.aggReturn);\n    var medAggReturn = d3.median(oneCycle, d => d.aggReturn);\n    var oneMeta = {\n      'startCycleValue': props.portfoliovalue,\n      'endCycleValue': oneCycle[oneCycle.length - 1].endValue,\n      'adjEndCycleValue': oneCycle[oneCycle.length - 1].adjEndValue,\n      'extent': extAdjEndValue,\n      'mean': avgAdjEndValue,\n      'median': medAdjEndValue,\n      'pctOfStart': pctStart,\n      'totalSpend': totalSpend,\n      'totalAppreciation': totalAppr,\n      'totalAdjAppreciation': totalAdjAppr,\n      'extAggReturn': extAggReturn,\n      'avgAggReturn': avgAggReturn,\n      'medAggReturn': medAggReturn,\n      'fail': 0 >= oneCycle[oneCycle.length - 1].adjEndValue,\n      'failAge': 0 >= oneCycle[oneCycle.length - 1].adjEndValue ? oneCycle.length + props.currentage : undefined,\n      'startYear': oneCycle[0].year,\n      'cycleData': oneCycle,\n      'lineColor': thisLineColor\n    };\n    return oneMeta;\n  };\n\n  const calcSummaryData = allCycles => {\n    var extAdjEnd = d3.extent(allCycleMeta, d => d.adjEndCycleValue);\n    var avgAdjEnd = d3.mean(allCycleMeta, d => d.adjEndCycleValue);\n    var medAdjEnd = d3.median(allCycleMeta, d => d.adjEndCycleValue);\n    var aggReturns = getAggReturns(allCycles);\n    var avgReturns = d3.mean(aggReturns);\n    var medianReturns = d3.median(aggReturns);\n    var extReturns = d3.extent(aggReturns);\n    var numFails = 0;\n    var minFailAge = props.lifeexpectancy + 1;\n    var failAges = [];\n\n    for (var i = 0; i < allCycleMeta.length; i++) {\n      if (allCycleMeta[i].fail) {\n        minFailAge = Math.min(allCycleMeta[i].failAge, minFailAge);\n        failAges[numFails] = allCycleMeta[i].failAge;\n        numFails++;\n      }\n    }\n\n    setAvgAdjEndValueState(avgAdjEnd);\n    setMedianAdjEndValueState(medAdjEnd);\n    setMinAdjEndValueState(extAdjEnd[0]);\n    setMaxAdjEndValueState(extAdjEnd[1]);\n    setAvgReturnsState(avgReturns);\n    setMedianReturnsState(medianReturns);\n    setMinReturnsState(extReturns[0]);\n    setMaxReturnsState(extReturns[1]);\n    setNumCyclesState(allCycleMeta.length);\n    setNumFailsState(numFails);\n    setMinFailAgeState(minFailAge);\n    setMedianFailAgeState(d3.median(failAges));\n  };\n\n  const calcCycles = svg => {\n    const lifetime = props.lifeexpectancy - props.currentage + 1;\n    const startDataYear = props.startdatayear;\n    const endDataYear = props.enddatayear; // TODO : require numCycles to be greater than zero\n\n    const numCycles = endDataYear - startDataYear + 2 - lifetime;\n    const startIndex = findHistStartIndex(startDataYear);\n    var portMin = Number.POSITIVE_INFINITY;\n    var portMax = Number.NEGATIVE_INFINITY;\n    var allCycles = [];\n    cleanupPrev();\n\n    for (var i = 0; i < numCycles; i++) {\n      var oneCycle = runCycle(startIndex + i, lifetime);\n      var cycleMeta = calcCycleMeta(oneCycle);\n      allCycleMeta[i] = cycleMeta;\n      allCycles[i] = oneCycle;\n      portMin = Math.min(portMin, cycleMeta.extent[0]);\n      portMax = Math.max(portMax, cycleMeta.extent[1]);\n    }\n\n    setAllCycleDataState(allCycles);\n    setAllCycleMetaState(allCycleMeta);\n    calcSummaryData(allCycles);\n    const xScale = getXScale();\n    const yScale = getYScale(portMin, portMax);\n    drawAxes(svg, xScale, yScale, portMin, portMax);\n\n    for (i = 0; i < numCycles; i++) {\n      drawPortfolioLine(svg, xScale, yScale, allCycleMeta[i], allCycles[i]);\n    }\n  };\n\n  React.useEffect(() => {\n    const svg = findByID(svgCycleChartID).append(\"g\").attr(\"transform\", marginTranslate);\n    calcCycles(svg);\n    prepHoverStuff(svg);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SummaryCards, {\n      fails: numFailsState,\n      cycles: numCyclesState,\n      minfailage: minFailAgeState,\n      medianfailage: medianFailAgeState,\n      medianendvalue: medianAdjEndValueState,\n      avgendvalue: avgAdjEndValueState,\n      minendvalue: minAdjEndValueState,\n      maxendvalue: maxAdjEndValueState,\n      medianreturns: medianReturnsState,\n      avgreturns: avgReturnsState,\n      minreturns: minReturnsState,\n      maxreturns: maxReturnsState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: svgCycleChartID,\n      width: totalWidth,\n      height: totalHeight,\n      children: /*#__PURE__*/_jsxDEV(\"rect\", {\n        id: \"trackingRect\",\n        style: {\n          opacity: 0\n        },\n        width: boundedWidth,\n        height: boundedHeight,\n        transform: marginTranslate,\n        fill: \"LightGrey\",\n        onMouseDown: handleMouseDown,\n        onMouseEnter: handleMouseOver,\n        onMouseMove: handleMouseMove,\n        onMouseLeave: handleMouseLeave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EndValueChart, {\n      startvalue: props.portfoliovalue,\n      minendvalue: minAdjEndValueState,\n      maxendvalue: maxAdjEndValueState,\n      medianendvalue: medianAdjEndValueState,\n      metadata: allCycleMetaState,\n      cyclechartid: svgCycleChartID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 508,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"MevoQrmXSOy3lmbkXbJArGjp1ZY=\");\n\n_c = Chart;\n;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/chart.js"],"names":["React","useState","d3","SummaryCards","EndValueChart","histData","getAvgEquityReturn","getStdDevEquityReturn","makeCurrency","makePct","getColorStringForRelativeValue","getPerRunClassName","getPortfolioLineClassName","cleanupPrev","findByID","Chart","props","allCycleDataState","setAllCycleDataState","allCycleMetaState","setAllCycleMetaState","avgAdjEndValueState","setAvgAdjEndValueState","medianAdjEndValueState","setMedianAdjEndValueState","minAdjEndValueState","setMinAdjEndValueState","maxAdjEndValueState","setMaxAdjEndValueState","avgReturnsState","setAvgReturnsState","medianReturnsState","setMedianReturnsState","minReturnsState","setMinReturnsState","maxReturnsState","setMaxReturnsState","numCyclesState","setNumCyclesState","numFailsState","setNumFailsState","minFailAgeState","setMinFailAgeState","medianFailAgeState","setMedianFailAgeState","svgCycleChartID","perRunClass","hoverLineID","ttWrapID","ttBackID","ttAgeID","margin","top","right","bottom","left","totalWidth","totalHeight","boundedWidth","boundedHeight","tooltipWidth","tooltipHeight","marginTranslate","normalStrokeWidth","allCycleMeta","getXScale","xExt","currentage","lifeexpectancy","scaleLinear","domain","range","getYScale","rangeMin","rangeMax","yExt","drawAxes","svg","xScaleIn","yScaleIn","append","attr","call","axisBottom","axisLeft","drawPortfolioLine","oneCycleMeta","oneCycle","classNames","lineColor","datum","startYear","style","line","x","d","age","y","adjEndValue","prepHoverStuff","tooltipWrapper","tooltipText","getHoverLine","getTooltipWrapper","getTooltipBackground","getTooltipAgeSpan","handleMouseDown","e","bondReturns","getBondReturns","avgBondReturns","mean","stdBondReturns","deviation","console","log","handleMouseOver","handleMouseMove","bisect","bisector","coords","pointer","x0","invert","oneCycleData","i","selectedData","clientX","tooltipX","text","ttBounds","node","getBBox","width","height","handleMouseLeave","calcBondYield","bondStake","histIndex","retValue","length","bonds","bg1","Math","pow","bg2","findHistStartIndex","startDataYear","firstYear","year","offset","calcAnnualAggReturn","oneYear","stockPct","bondPct","retVal","equityReturn","bondReturn","isNaN","runCycle","startIndex","numYears","cycleData","stockallocation","bondallocation","feePct","feepct","ssAge","ssage","ssIncome","ssincome","startCPI","cpi","obj","endValue","portfoliovalue","equity","spendvalue","actualSpend","spend","cumulativeCPI","adjustment","beginValue","startStockValue","equityAppr","divAppr","dividends","bondAppr","aggReturn","appr","fees","netDelta","adjAppr","push","iCycle","getAggReturns","allCycles","getNetDeltas","calcCycleMeta","extAdjEndValue","extent","avgAdjEndValue","medAdjEndValue","median","totalSpend","sum","totalAppr","totalAdjAppr","pctStart","thisLineColor","extAggReturn","avgAggReturn","medAggReturn","oneMeta","undefined","calcSummaryData","extAdjEnd","adjEndCycleValue","avgAdjEnd","medAdjEnd","aggReturns","avgReturns","medianReturns","extReturns","numFails","minFailAge","failAges","fail","min","failAge","calcCycles","lifetime","startdatayear","endDataYear","enddatayear","numCycles","portMin","Number","POSITIVE_INFINITY","portMax","NEGATIVE_INFINITY","cycleMeta","max","xScale","yScale","useEffect","opacity"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {useState} from \"react\";\nimport * as d3 from \"d3\";\nimport SummaryCards from \"./summary.js\";\nimport EndValueChart from './endvaluechart.js';\nimport \"./chartdata.css\";\nimport { histData } from \"./histdata.js\";\nimport { getAvgEquityReturn, getStdDevEquityReturn } from \"./histdata.js\";\nimport { makeCurrency, makePct, getColorStringForRelativeValue, getPerRunClassName, getPortfolioLineClassName, cleanupPrev, findByID} from './common.js';\n\nfunction Chart (props) {\n  \n    const [allCycleDataState, setAllCycleDataState] = useState([]);\n    const [allCycleMetaState, setAllCycleMetaState] = useState([]);\n\n    const [avgAdjEndValueState, setAvgAdjEndValueState] = useState(0);\n    const [medianAdjEndValueState, setMedianAdjEndValueState] = useState(0);\n    const [minAdjEndValueState, setMinAdjEndValueState] = useState(0);\n    const [maxAdjEndValueState, setMaxAdjEndValueState] = useState(0);\n\n    const [avgReturnsState, setAvgReturnsState] = useState(0);\n    const [medianReturnsState, setMedianReturnsState] = useState(0);\n    const [minReturnsState, setMinReturnsState] = useState(0);\n    const [maxReturnsState, setMaxReturnsState] = useState(0);\n    \n    const [numCyclesState, setNumCyclesState] = useState(0);\n    const [numFailsState, setNumFailsState] = useState(0);\n    const [minFailAgeState, setMinFailAgeState] = useState(0);\n    const [medianFailAgeState, setMedianFailAgeState] = useState(0);\n\n    const svgCycleChartID = 'd3cycletarget';\n    const perRunClass = getPerRunClassName();\n    const hoverLineID = 'hoverLine';\n    const ttWrapID = 'ttwrapper';\n    const ttBackID = 'ttbackground';\n    const ttAgeID = 'ttage';\n    const margin = { top: 40, right: 65, bottom: 40, left: 65 };\n    const totalWidth = 960;\n    const totalHeight = 500;\n    const boundedWidth = totalWidth - margin.left - margin.right;\n    const boundedHeight = totalHeight - margin.top - margin.bottom;\n    const tooltipWidth = 75;\n    const tooltipHeight = 75;\n    const marginTranslate = \"translate(\" + margin.left + \",\" + margin.top + \")\";\n    const normalStrokeWidth = 1.5;\n    var allCycleMeta = [];\n\n    const getXScale = () => { \n        var xExt = [props.currentage, props.lifeexpectancy];\n        return d3.scaleLinear()\n                    .domain(xExt)\n                    .range([ 0, boundedWidth ]);\n    }\n\n    const getYScale = (rangeMin, rangeMax) => {\n        var yExt = [rangeMin, rangeMax];\n        return d3.scaleLinear()\n                    .domain(yExt)\n                    .range([ boundedHeight, 0 ]);\n    }\n\n    const drawAxes = (svg, xScaleIn, yScaleIn, rangeMin, rangeMax) => {\n \n        svg.append(\"g\")\n            .attr(\"class\", perRunClass)\n            .attr(\"transform\", \"translate(0,\" + boundedHeight + \")\")\n            .call(d3.axisBottom(xScaleIn));\n        svg.append(\"g\")\n            .attr(\"class\", perRunClass)\n            .call(d3.axisLeft(yScaleIn));\n    };\n\n    const drawPortfolioLine = (svg, xScaleIn, yScaleIn, oneCycleMeta, oneCycle) => {\n\n        const classNames = perRunClass + ' ' \n                            + getPortfolioLineClassName() + ' ' \n                            + oneCycleMeta.lineColor;\n        svg.append(\"path\")\n            .datum(oneCycle)\n            .attr('id', oneCycleMeta.startYear)\n            .attr('class', classNames)\n            .attr(\"fill\", \"none\")\n            .attr(\"pointer-events\", \"none\")\n            .style(\"opacity\", 1)\n            .attr(\"stroke\", oneCycleMeta.lineColor)\n            .attr(\"stroke-width\", normalStrokeWidth)\n            .attr(\"d\", d3.line()\n                        .x(function(d) { return xScaleIn(d.age) })\n                        .y(function(d) { return yScaleIn(d.adjEndValue) })\n            );        \n    }\n\n    const prepHoverStuff = (svg) => {\n        const tooltipWrapper = svg\n                .append('g')\n                .attr('id', ttWrapID)\n                .attr('display', 'none');\n        \n        tooltipWrapper.append('rect')\n                        .style('opacity', 0.70)\n                        .attr('id', ttBackID)\n                        .attr('width', tooltipWidth)\n                        .attr('height', tooltipHeight)\n                        .attr(\"pointer-events\", \"none\")\n                        .attr(\"fill\", \"#e8e8e8\"); \n\n        const tooltipText = tooltipWrapper.append('g').append('text');\n\n        tooltipText.attr(\"pointer-events\", \"none\")\n                    .attr('font-weight', 900)\n                    .attr('text-anchor', 'left');\n                    \n        tooltipText.append('tspan')\n                    .attr('id', ttAgeID)\n                    .attr('x', '5')\n                    .attr('y', '5')\n                    .attr('dy', '15px')\n                    .attr(\"pointer-events\", \"none\");\n\n        svg.append(\"g\")\n           .append(\"rect\")\n            .style('opacity', 0)\n            .attr('id', hoverLineID)\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"class\", \"dotted\")\n            .attr(\"stroke-width\", \"1px\")\n            .attr(\"width\", \".5px\")\n            .attr(\"height\", boundedHeight);\n        \n    }\n\n    const getHoverLine = () => {\n        return findByID(hoverLineID);\n    }\n\n    const getTooltipWrapper = () => {\n        return findByID(ttWrapID);\n    }\n\n    const getTooltipBackground = () => {\n        return findByID(ttBackID);\n    }\n\n    const getTooltipAgeSpan = () => {\n        return findByID(ttAgeID);\n    }\n\n    const handleMouseDown = (e) => {\n        var bondReturns = getBondReturns();\n        var avgBondReturns = d3.mean(bondReturns);\n        var stdBondReturns = d3.deviation(bondReturns);\n        console.log('equity avg return:' + \n                    makePct(getAvgEquityReturn()) + \n                    ' equity sdev:' + makePct(getStdDevEquityReturn()) +\n                    ' bond avg return:' + makePct(avgBondReturns) +\n                    ' bond sdev:' + makePct(stdBondReturns)\n                    );\n    }\n\n    const handleMouseOver = (e) => {\n        getHoverLine().style('opacity', 1);\n        getTooltipWrapper().attr('display', null);\n    }\n\n    const handleMouseMove = (e) => {\n        const bisect = d3.bisector((d) => d.age).left;\n        var xScaleIn = getXScale();\n        const coords = d3.pointer(e);\n        const x0 = xScaleIn.invert(coords[0]);\n        const oneCycleData = allCycleDataState[0];\n        const i = bisect(oneCycleData, x0, 1);\n        const selectedData = oneCycleData[i];\n        const clientX = xScaleIn(selectedData.age);\n        var tooltipX = clientX;\n        \n        // prevent the tooltip from getting clipped.\n        const tooltipWidth = 75;             \n        if (boundedWidth <= (clientX + tooltipWidth)) {\n            tooltipX = clientX - tooltipWidth;\n        }\n        getTooltipAgeSpan().text('age: ' + selectedData.age);\n\n        const ttBounds = getTooltipWrapper().node().getBBox();\n        getTooltipBackground()                \n            .attr('width', ttBounds.width)\n            .attr('height', ttBounds.height);\n\n        getTooltipWrapper().attr(\"transform\", \"translate(\" + tooltipX + \",\" + coords[1] + \")\");  \n\n        getHoverLine().attr('x', clientX);\n        getTooltipWrapper().attr('x', tooltipX);\n    };\n    \n    const handleMouseLeave = () => {\n        getHoverLine().style('opacity', 0);\n        getTooltipWrapper().attr('display', 'none');\n    };\n\n    /*\n    const dumpCycleData = (oneCycle) => {\n        for (var i = 0; i < oneCycle.length; i++) {\n\n            console.log(oneCycle[i].year + \n                ' st:' + makeCurrency(oneCycle[i].beginValue) +\n                ' cpi:' + Number(oneCycle[i].cumulativeCPI).toFixed(2) + \n                ' sp:' + makeCurrency(oneCycle[i].actualSpend) + \n                ' e$:' + makeCurrency(oneCycle[i].equityAppr) +\n                ' d$:' + makeCurrency(oneCycle[i].divAppr) +\n                ' b$:' + makeCurrency(oneCycle[i].bondAppr) +\n                ' f$: ' + makeCurrency(oneCycle[i].fees) + \n                ' ae$: ' + makeCurrency(oneCycle[i].adjEndValue)\n                );\n        }\n    }\n     */\n\n    const calcBondYield = (bondStake, histIndex) => {\n        \n        var retValue = 0;\n\n        // if we're at the end of the cycle, use the simplified calculation\n        if (histData.length <= (histIndex + 1)) {\n            retValue = bondStake * histData[histIndex].bonds;\n        }\n        else {\n            var bg1 = (1 - Math.pow(1 + histData[histIndex + 1].bonds, -9 ))\n                      * histData[histIndex].bonds;\n            bg1 = bg1 / histData[histIndex + 1].bonds;\n            \n            var bg2 = 1 / Math.pow(1 + histData[histIndex + 1].bonds, 9);\n            bg2 = bg2 - 1;\n\n            retValue = bondStake * (bg1 + bg2 + histData[histIndex].bonds);\n        }\n\n        return retValue;\n    }\n\n    const findHistStartIndex = (startDataYear) => {\n        const firstYear = histData[0].year;\n        const offset = startDataYear - firstYear;\n\n        return offset;\n    }\n\n    const calcAnnualAggReturn = (oneYear, stockPct, bondPct) => {\n\n        var retVal = (oneYear.equityReturn * stockPct) + (oneYear.bondReturn * bondPct);\n        \n        if (isNaN(retVal)) {\n            if (1 === stockPct) {\n                retVal = oneYear.equityReturn;\n            }\n            else if (1 === bondPct) {\n                retVal = oneYear.bondReturn;\n            }\n            else {\n                retVal = 0;\n                console.log('unexpected aggReturn result- equity :(' + \n                            makePct(oneYear.equityReturn) + ',' + makePct(stockPct) + ') ' +\n                            ' bond:(' +\n                            makePct(oneYear.bondReturn) + ',' + makePct(bondPct) + ')');\n            }\n        }\n\n        return retVal;\n    }\n    const runCycle = (startIndex, numYears) => {\n        var cycleData = [];\n        const stockPct = +(props.stockallocation) / 100;\n        const bondPct = +(props.bondallocation) / 100;\n        const feePct = +(props.feepct) / 100;\n        const ssAge = +(props.ssage);\n        const ssIncome = +(props.ssincome);\n        const startCPI = histData[startIndex].cpi;\n\n        for(var i = 0; i < numYears; i++){\n            var obj = { \"year\": histData[startIndex + i].year,\n                        \"age\": +(props.currentage) + i,\n                        \"beginValue\": (i > 0) ? cycleData[i - 1].endValue : +(props.portfoliovalue),\n                        \"equityReturn\": histData[startIndex + i].equity,\n                        \"equityAppr\": 0,\n                        \"divAppr\": 0,\n                        \"bondReturn\": 0,\n                        \"bondAppr\": 0,\n                        \"aggReturn\": 0,\n                        \"cumulativeCPI\": histData[startIndex + i].cpi / startCPI,\n                        \"spend\": +(props.spendvalue),\n                        \"actualSpend\": +(props.spendvalue),\n                        \"fees\": 0,\n                        \"netDelta\": 0,\n                        \"endValue\": 0,\n                        \"adjEndValue\": 0,\n                        \"appr\": 0,\n                        \"adjAppr\": 0,\n                      };\n            // adjust spend for cumultative cpi\n            obj.actualSpend = obj.spend * obj.cumulativeCPI;\n            // apply ss adjustment if applicable\n            var adjustment = (ssAge <= obj.age) ? (ssIncome * obj.cumulativeCPI) : 0;\n            obj.actualSpend -= adjustment;\n            // port1 = subtract spend from start port\n            obj.endValue = obj.beginValue - obj.actualSpend;\n            if (0 < obj.endValue) {\n                var startStockValue = obj.endValue * stockPct;\n                // e growth = port1 * e-share * e-growth\n                obj.equityAppr = startStockValue * obj.equityReturn;\n                // calc dividends\n                obj.divAppr = startStockValue * histData[startIndex + i].dividends;\n                // b growth = port1 * b=share * b-growth\n                obj.bondAppr = calcBondYield(obj.endValue * bondPct, startIndex + i);\n                obj.bondReturn = obj.bondAppr / (obj.beginValue * bondPct);\n                obj.aggReturn = calcAnnualAggReturn(obj, stockPct, bondPct);\n                // port2 = port1 + e-growth + b-growth\n                obj.appr = obj.equityAppr + obj.divAppr + obj.bondAppr;\n                obj.endValue += obj.appr;\n                // end port = port2 - (fees (based on cpi-adj value))\n                obj.fees = (obj.beginValue + obj.appr) * feePct;\n                obj.endValue -= obj.fees;\n\n                // total +/- for the year\n                obj.netDelta = obj.appr - obj.actualSpend - obj.fees;\n\n                console.log('y:' + obj.year + ' agg%:' + makePct(obj.aggReturn) + \n                            ' appr$:' + makeCurrency(obj.appr) + \n                            ' spend+fee$:' + makeCurrency((obj.actualSpend + obj.fees)) + \n                            ' delta$' + makeCurrency(obj.netDelta));\n\n                obj.adjEndValue = obj.endValue / obj.cumulativeCPI;\n                obj.adjAppr = obj.appr / obj.cumulativeCPI;\n                cycleData.push(obj);\n            }\n            else {\n                obj.endValue = obj.adjEndValue = 0;\n                cycleData.push(obj);\n                break;\n            }\n        }\n        return cycleData;\n    }\n\n    const getBondReturns = () => {\n        var retVal = [];\n\n        for (var iCycle = 0; iCycle < allCycleDataState.length; iCycle++) {\n            for (var year = 0; year < allCycleDataState[iCycle].length; year++) {\n                const oneYear = allCycleDataState[iCycle][year];\n                retVal.push(oneYear.bondReturn);\n            }\n        }\n\n        return retVal;\n    }\n\n    const getAggReturns = (allCycles) => {\n        var retVal = [];\n\n        for (var iCycle = 0; iCycle < allCycles.length; iCycle++) {\n            for (var year = 0; year < allCycles[iCycle].length; year++) {\n                const oneYear = allCycles[iCycle][year];\n                retVal.push(oneYear.aggReturn);\n            }\n        }\n\n        return retVal;\n    }\n\n    const getNetDeltas = (allCycles) => {\n        var retVal = [];\n\n        for (var iCycle = 0; iCycle < allCycles.length; iCycle++) {\n            for (var year = 0; year < allCycles[iCycle].length; year++) {\n                const oneYear = allCycles[iCycle][year];\n                retVal.push(oneYear.netDelta);\n            }\n        }\n\n        return retVal;\n    }\n\n    const calcCycleMeta = (oneCycle) => {\n        var extAdjEndValue = d3.extent(oneCycle, (d) => d.adjEndValue);\n        var avgAdjEndValue = d3.mean(oneCycle, (d) => d.adjEndValue);\n        var medAdjEndValue = d3.median(oneCycle, (d) => d.adjEndValue);\n        var totalSpend = d3.sum(oneCycle, (d) => d.actualSpend);\n        var totalAppr = d3.sum(oneCycle, (d) => d.appr);\n        var totalAdjAppr = d3.sum(oneCycle, (d) => d.adjAppr);\n        var pctStart = oneCycle[oneCycle.length - 1].adjEndValue / props.portfoliovalue;\n        const thisLineColor = getColorStringForRelativeValue(pctStart);\n        var extAggReturn = d3.extent(oneCycle, (d) => d.aggReturn);\n        var avgAggReturn = d3.mean(oneCycle, (d) => d.aggReturn);\n        var medAggReturn = d3.median(oneCycle, (d) => d.aggReturn);\n\n        var oneMeta = {\n            'startCycleValue': props.portfoliovalue,\n            'endCycleValue': oneCycle[oneCycle.length - 1].endValue,\n            'adjEndCycleValue': oneCycle[oneCycle.length - 1].adjEndValue,\n            'extent': extAdjEndValue,\n            'mean': avgAdjEndValue,\n            'median': medAdjEndValue,\n            'pctOfStart': pctStart,\n            'totalSpend': totalSpend,\n            'totalAppreciation': totalAppr,\n            'totalAdjAppreciation': totalAdjAppr,\n            'extAggReturn': extAggReturn,\n            'avgAggReturn': avgAggReturn,\n            'medAggReturn': medAggReturn,\n            'fail': (0 >= oneCycle[oneCycle.length - 1].adjEndValue),\n            'failAge': (0 >= oneCycle[oneCycle.length - 1].adjEndValue) ? \n                       (oneCycle.length + props.currentage) :\n                       undefined,\n            'startYear': oneCycle[0].year,\n            'cycleData': oneCycle,\n            'lineColor': thisLineColor,\n        };\n\n        return oneMeta;\n    }\n\n    const calcSummaryData = (allCycles) => {\n\n        var extAdjEnd = d3.extent(allCycleMeta, (d) => d.adjEndCycleValue);\n        var avgAdjEnd = d3.mean(allCycleMeta, (d) => d.adjEndCycleValue);\n        var medAdjEnd = d3.median(allCycleMeta, (d) => d.adjEndCycleValue);\n\n        var aggReturns = getAggReturns(allCycles);\n        var avgReturns = d3.mean(aggReturns);\n        var medianReturns = d3.median(aggReturns);\n        var extReturns = d3.extent(aggReturns);\n\n        var numFails = 0;\n        var minFailAge = props.lifeexpectancy + 1;\n        var failAges = [];\n\n        for (var i = 0; i < allCycleMeta.length; i++) {\n            if (allCycleMeta[i].fail) {\n                minFailAge = Math.min(allCycleMeta[i].failAge, minFailAge);\n                failAges[numFails] = allCycleMeta[i].failAge;\n                numFails++;\n            }\n        }\n\n        setAvgAdjEndValueState(avgAdjEnd);\n        setMedianAdjEndValueState(medAdjEnd);\n        setMinAdjEndValueState(extAdjEnd[0]);\n        setMaxAdjEndValueState(extAdjEnd[1]);\n\n        setAvgReturnsState(avgReturns);\n        setMedianReturnsState(medianReturns);\n        setMinReturnsState(extReturns[0]);\n        setMaxReturnsState(extReturns[1]);\n\n        setNumCyclesState(allCycleMeta.length);\n        setNumFailsState(numFails);\n        setMinFailAgeState(minFailAge);\n        setMedianFailAgeState(d3.median(failAges));\n    }\n\n    const calcCycles = (svg) => {\n        const lifetime = props.lifeexpectancy - props.currentage + 1;\n        const startDataYear = props.startdatayear;\n        const endDataYear = props.enddatayear;\n        // TODO : require numCycles to be greater than zero\n        const numCycles = (endDataYear - startDataYear + 2) - lifetime;\n        const startIndex = findHistStartIndex(startDataYear);\n        var portMin = Number.POSITIVE_INFINITY;\n        var portMax = Number.NEGATIVE_INFINITY;\n        var allCycles = [];\n\n        cleanupPrev();\n\n        for (var i = 0; i < numCycles; i++) {\n            var oneCycle = runCycle(startIndex + i, lifetime);\n            var cycleMeta = calcCycleMeta(oneCycle);\n            \n            allCycleMeta[i] = cycleMeta;\n            allCycles[i] = oneCycle;\n\n            portMin = Math.min(portMin, cycleMeta.extent[0]);\n            portMax = Math.max(portMax, cycleMeta.extent[1]);\n        }\n\n        setAllCycleDataState(allCycles);\n        setAllCycleMetaState(allCycleMeta);\n\n        calcSummaryData(allCycles);\n\n        const xScale = getXScale();\n        const yScale = getYScale(portMin, portMax);\n\n        drawAxes(svg, xScale, yScale, portMin, portMax);\n        for (i = 0; i < numCycles; i++) {\n            drawPortfolioLine(svg, xScale, yScale, allCycleMeta[i], allCycles[i]);\n        }\n    }\n\n    React.useEffect(() => {\n\n        const svg = findByID(svgCycleChartID)\n                      .append(\"g\")\n                      .attr(\"transform\", marginTranslate);\n        calcCycles(svg);\n\n        prepHoverStuff(svg);\n    }, [props] );\n\n    return (\n        <div>\n            <SummaryCards \n             fails={numFailsState} cycles={numCyclesState}\n             minfailage={minFailAgeState} medianfailage={medianFailAgeState} \n             medianendvalue={medianAdjEndValueState} avgendvalue={avgAdjEndValueState}\n             minendvalue={minAdjEndValueState} maxendvalue={maxAdjEndValueState}\n             medianreturns={medianReturnsState} avgreturns={avgReturnsState}\n             minreturns={minReturnsState} maxreturns={maxReturnsState}\n             />\n            <svg id={svgCycleChartID} \n                    width={totalWidth}\n                    height={totalHeight} \n            >\n                <rect id='trackingRect'\n                    style={{ opacity:0 }}\n                    width={boundedWidth}\n                    height={boundedHeight}\n                    transform={marginTranslate}\n                    fill='LightGrey'\n                    onMouseDown={handleMouseDown}\n                    onMouseEnter={handleMouseOver}\n                    onMouseMove={handleMouseMove}\n                    onMouseLeave={handleMouseLeave}\n                />\n            </svg>  \n            <EndValueChart \n             startvalue={props.portfoliovalue} \n             minendvalue={minAdjEndValueState} \n             maxendvalue={maxAdjEndValueState} \n             medianendvalue={medianAdjEndValueState}\n             metadata={allCycleMetaState} \n             cyclechartid={svgCycleChartID} />            \n        </div>\n    );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}