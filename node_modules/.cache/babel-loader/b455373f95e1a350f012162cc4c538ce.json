{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport { LineChart } from \"@d3/multi-line-chart\";\nimport hist from \"./data/hist-returns.csv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InteractiveChart() {\n  unemployment = FileAttachment(\"bls-metro-unemployment.csv\").csv({\n    typed: true\n  });\n  chart = LineChart(unemployment, {\n    x: d => d.date,\n    y: d => d.unemployment,\n    z: d => d.division,\n    yLabel: \"↑ Unemployment (%)\",\n    width,\n    height: 500,\n    color: \"steelblue\",\n    voronoi // if true, show Voronoi overlay\n\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"d3target\",\n      width: \"1200\",\n      height: \"1200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n} // d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n\n\n_c = InteractiveChart;\n\nfunction HistoricalChart() {\n  _s();\n\n  React.useEffect(() => {\n    // set the dimensions and margins of the graph\n    var margin = {\n      top: 50,\n      right: 50,\n      bottom: 50,\n      left: 50\n    },\n        width = 800 - margin.left - margin.right,\n        height = 600 - margin.top - margin.bottom;\n    var svg = d3.select(\"#d3target\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    d3.csv(hist, function (d) {\n      return {\n        year: d.year,\n        inflation: +d.inflation,\n        equity: +d.equity,\n        bond: +d.bond\n      };\n    }).then(function (data) {\n      var pctFormat = d3.format(\"4.2%\");\n      var yearFormat = d3.format(\"d\");\n      var x = d3.scaleLinear().domain([d3.min(data, function (d) {\n        return d.year;\n      }), d3.max(data, function (d) {\n        return d.year;\n      })]).range([0, width]);\n      var xGen = d3.axisBottom(x).tickFormat(yearFormat);\n      svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(xGen);\n      var y = d3.scaleLinear().domain([d3.min(data, function (d) {\n        return d.equity;\n      }), d3.max(data, function (d) {\n        return d.equity;\n      })]).range([height, 0]);\n      var yGen = d3.axisLeft(y).tickFormat(pctFormat);\n      svg.append(\"g\").call(yGen); // Add the equity line\n\n      svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n        return x(d.year);\n      }).y(function (d) {\n        return y(d.equity);\n      })); // Add the bonds line\n\n      svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"cyan\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n        return x(d.year);\n      }).y(function (d) {\n        return y(d.bond);\n      })); // Add the inflation line\n\n      svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"red\").attr(\"stroke-width\", 1.5).style(\"stroke-dasharray\", \"5, 5\").attr(\"d\", d3.line().x(function (d) {\n        return x(d.year);\n      }).y(function (d) {\n        return y(d.inflation);\n      }));\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"d3target\",\n      width: \"1200\",\n      height: \"1200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HistoricalChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = HistoricalChart;\nexport default HistoricalChart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InteractiveChart\");\n$RefreshReg$(_c2, \"HistoricalChart\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js"],"names":["React","d3","LineChart","hist","InteractiveChart","unemployment","FileAttachment","csv","typed","chart","x","d","date","y","z","division","yLabel","width","height","color","voronoi","HistoricalChart","useEffect","margin","top","right","bottom","left","svg","select","append","attr","year","inflation","equity","bond","then","data","pctFormat","format","yearFormat","scaleLinear","domain","min","max","range","xGen","axisBottom","tickFormat","call","yGen","axisLeft","datum","line","style"],"mappings":";;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAAQC,SAAR,QAAwB,sBAAxB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;;AAEA,SAASC,gBAAT,GAA6B;AACzBC,EAAAA,YAAY,GAAGC,cAAc,CAAC,4BAAD,CAAd,CAA6CC,GAA7C,CAAiD;AAACC,IAAAA,KAAK,EAAE;AAAR,GAAjD,CAAf;AACAC,EAAAA,KAAK,GAAGP,SAAS,CAACG,YAAD,EAAe;AAC5BK,IAAAA,CAAC,EAAEC,CAAC,IAAIA,CAAC,CAACC,IADkB;AAE5BC,IAAAA,CAAC,EAAEF,CAAC,IAAIA,CAAC,CAACN,YAFkB;AAG5BS,IAAAA,CAAC,EAAEH,CAAC,IAAIA,CAAC,CAACI,QAHkB;AAI5BC,IAAAA,MAAM,EAAE,oBAJoB;AAK5BC,IAAAA,KAL4B;AAM5BC,IAAAA,MAAM,EAAE,GANoB;AAO5BC,IAAAA,KAAK,EAAE,WAPqB;AAQ5BC,IAAAA,OAR4B,CAQpB;;AARoB,GAAf,CAAjB;AAWE,sBACE;AAAA,2BACK;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,KAAK,EAAC,MAAzB;AAAgC,MAAA,MAAM,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAOL,C,CAED;AACA;;;KAvBShB,gB;;AAwBT,SAASiB,eAAT,GAA2B;AAAA;;AAEvBrB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,MAAM;AACd;AACJ,QAAIC,MAAM,GAAG;AAACC,MAAAA,GAAG,EAAE,EAAN;AAAUC,MAAAA,KAAK,EAAE,EAAjB;AAAqBC,MAAAA,MAAM,EAAE,EAA7B;AAAiCC,MAAAA,IAAI,EAAE;AAAvC,KAAb;AAAA,QACIV,KAAK,GAAG,MAAMM,MAAM,CAACI,IAAb,GAAoBJ,MAAM,CAACE,KADvC;AAAA,QAEIP,MAAM,GAAG,MAAMK,MAAM,CAACC,GAAb,GAAmBD,MAAM,CAACG,MAFvC;AAIA,QAAIE,GAAG,GAAG3B,EAAE,CAAC4B,MAAH,CAAU,WAAV,EACGC,MADH,CACU,KADV,EAEGC,IAFH,CAEQ,OAFR,EAEiBd,KAAK,GAAGM,MAAM,CAACI,IAAf,GAAsBJ,MAAM,CAACE,KAF9C,EAGGM,IAHH,CAGQ,QAHR,EAGkBb,MAAM,GAAGK,MAAM,CAACC,GAAhB,GAAsBD,MAAM,CAACG,MAH/C,EAIGI,MAJH,CAIU,GAJV,EAKGC,IALH,CAKQ,WALR,EAMM,eAAeR,MAAM,CAACI,IAAtB,GAA6B,GAA7B,GAAmCJ,MAAM,CAACC,GAA1C,GAAgD,GANtD,CAAV;AAQAvB,IAAAA,EAAE,CAACM,GAAH,CAAOJ,IAAP,EAAY,UAASQ,CAAT,EAAY;AACpB,aAAO;AAAEqB,QAAAA,IAAI,EAAErB,CAAC,CAACqB,IAAV;AAAgBC,QAAAA,SAAS,EAAE,CAACtB,CAAC,CAACsB,SAA9B;AAAyCC,QAAAA,MAAM,EAAE,CAACvB,CAAC,CAACuB,MAApD;AAA4DC,QAAAA,IAAI,EAAE,CAACxB,CAAC,CAACwB;AAArE,OAAP;AACH,KAFD,EAGCC,IAHD,CAGO,UAASC,IAAT,EAAe;AAElB,UAAIC,SAAS,GAAGrC,EAAE,CAACsC,MAAH,CAAU,MAAV,CAAhB;AACA,UAAIC,UAAU,GAAGvC,EAAE,CAACsC,MAAH,CAAU,GAAV,CAAjB;AAEA,UAAI7B,CAAC,GAAGT,EAAE,CAACwC,WAAH,GACHC,MADG,CACI,CAACzC,EAAE,CAAC0C,GAAH,CAAON,IAAP,EAAa,UAAS1B,CAAT,EAAY;AAAE,eAAOA,CAAC,CAACqB,IAAT;AAAgB,OAA3C,CAAD,EACA/B,EAAE,CAAC2C,GAAH,CAAOP,IAAP,EAAa,UAAS1B,CAAT,EAAY;AAAE,eAAOA,CAAC,CAACqB,IAAT;AAAgB,OAA3C,CADA,CADJ,EAGHa,KAHG,CAGG,CAAE,CAAF,EAAK5B,KAAL,CAHH,CAAR;AAIA,UAAI6B,IAAI,GAAG7C,EAAE,CAAC8C,UAAH,CAAcrC,CAAd,EACEsC,UADF,CACaR,UADb,CAAX;AAGAZ,MAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,WADV,EACuB,iBAAiBb,MAAjB,GAA0B,GADjD,EAEK+B,IAFL,CAEUH,IAFV;AAIA,UAAIjC,CAAC,GAAGZ,EAAE,CAACwC,WAAH,GACHC,MADG,CACI,CAACzC,EAAE,CAAC0C,GAAH,CAAON,IAAP,EAAa,UAAS1B,CAAT,EAAY;AAAE,eAAOA,CAAC,CAACuB,MAAT;AAAkB,OAA7C,CAAD,EACIjC,EAAE,CAAC2C,GAAH,CAAOP,IAAP,EAAa,UAAS1B,CAAT,EAAY;AAAE,eAAOA,CAAC,CAACuB,MAAT;AAAkB,OAA7C,CADJ,CADJ,EAGHW,KAHG,CAGG,CAAE3B,MAAF,EAAU,CAAV,CAHH,CAAR;AAIA,UAAIgC,IAAI,GAAGjD,EAAE,CAACkD,QAAH,CAAYtC,CAAZ,EACEmC,UADF,CACaV,SADb,CAAX;AAGAV,MAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EACKmB,IADL,CACUC,IADV,EAvBkB,CA0BlB;;AACAtB,MAAAA,GAAG,CAACE,MAAJ,CAAW,MAAX,EACCsB,KADD,CACOf,IADP,EAECN,IAFD,CAEM,MAFN,EAEc,MAFd,EAGCA,IAHD,CAGM,QAHN,EAGgB,WAHhB,EAICA,IAJD,CAIM,cAJN,EAIsB,GAJtB,EAKCA,IALD,CAKM,GALN,EAKW9B,EAAE,CAACoD,IAAH,GACN3C,CADM,CACJ,UAASC,CAAT,EAAY;AAAE,eAAOD,CAAC,CAACC,CAAC,CAACqB,IAAH,CAAR;AAAkB,OAD5B,EAENnB,CAFM,CAEJ,UAASF,CAAT,EAAY;AAAE,eAAOE,CAAC,CAACF,CAAC,CAACuB,MAAH,CAAR;AAAoB,OAF9B,CALX,EA3BkB,CAqClB;;AACAN,MAAAA,GAAG,CAACE,MAAJ,CAAW,MAAX,EACCsB,KADD,CACOf,IADP,EAECN,IAFD,CAEM,MAFN,EAEc,MAFd,EAGCA,IAHD,CAGM,QAHN,EAGgB,MAHhB,EAICA,IAJD,CAIM,cAJN,EAIsB,GAJtB,EAKCA,IALD,CAKM,GALN,EAKW9B,EAAE,CAACoD,IAAH,GACN3C,CADM,CACJ,UAASC,CAAT,EAAY;AAAE,eAAOD,CAAC,CAACC,CAAC,CAACqB,IAAH,CAAR;AAAkB,OAD5B,EAENnB,CAFM,CAEJ,UAASF,CAAT,EAAY;AAAE,eAAOE,CAAC,CAACF,CAAC,CAACwB,IAAH,CAAR;AAAkB,OAF5B,CALX,EAtCkB,CAgDlB;;AACAP,MAAAA,GAAG,CAACE,MAAJ,CAAW,MAAX,EACCsB,KADD,CACOf,IADP,EAECN,IAFD,CAEM,MAFN,EAEc,MAFd,EAGCA,IAHD,CAGM,QAHN,EAGgB,KAHhB,EAICA,IAJD,CAIM,cAJN,EAIsB,GAJtB,EAKCuB,KALD,CAKO,kBALP,EAK4B,MAL5B,EAMCvB,IAND,CAMM,GANN,EAMW9B,EAAE,CAACoD,IAAH,GACN3C,CADM,CACJ,UAASC,CAAT,EAAY;AAAE,eAAOD,CAAC,CAACC,CAAC,CAACqB,IAAH,CAAR;AAAkB,OAD5B,EAENnB,CAFM,CAEJ,UAASF,CAAT,EAAY;AAAE,eAAOE,CAAC,CAACF,CAAC,CAACsB,SAAH,CAAR;AAAuB,OAFjC,CANX;AAWH,KA/DD;AAgEH,GA9ED;AAgFA,sBACI;AAAA,2BACK;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,KAAK,EAAC,MAAzB;AAAgC,MAAA,MAAM,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAzFQZ,e;;MAAAA,e;AA2FT,eAAeA,eAAf","sourcesContent":["\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport {LineChart} from \"@d3/multi-line-chart\"\nimport hist from \"./data/hist-returns.csv\";\n\nfunction InteractiveChart () {\n    unemployment = FileAttachment(\"bls-metro-unemployment.csv\").csv({typed: true});\n    chart = LineChart(unemployment, {\n        x: d => d.date,\n        y: d => d.unemployment,\n        z: d => d.division,\n        yLabel: \"↑ Unemployment (%)\",\n        width,\n        height: 500,\n        color: \"steelblue\",\n        voronoi // if true, show Voronoi overlay\n      })\n\n      return (\n        <div>\n             <div id=\"d3target\" width=\"1200\" height=\"1200\" >\n                 \n             </div> \n        </div>\n      );\n}\n\n// d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\nfunction HistoricalChart() {\n\n    React.useEffect(() => {\n            // set the dimensions and margins of the graph\n        var margin = {top: 50, right: 50, bottom: 50, left: 50},\n            width = 800 - margin.left - margin.right,\n            height = 600 - margin.top - margin.bottom;\n\n        var svg = d3.select(\"#d3target\")\n                    .append(\"svg\")\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom)\n                    .append(\"g\")\n                    .attr(\"transform\",\n                        \"translate(\" + margin.left + \",\" + margin.top + \")\");\n   \n        d3.csv(hist,function(d) {\n            return { year: d.year, inflation: +d.inflation, equity: +d.equity, bond: +d.bond };\n        })\n        .then (function(data) {\n\n            var pctFormat = d3.format(\"4.2%\");\n            var yearFormat = d3.format(\"d\");\n\n            var x = d3.scaleLinear()\n                .domain([d3.min(data, function(d) { return d.year; }),\n                        d3.max(data, function(d) { return d.year; })])\n                .range([ 0, width ]);\n            var xGen = d3.axisBottom(x)\n                        .tickFormat(yearFormat);\n            \n            svg.append(\"g\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(xGen);\n\n            var y = d3.scaleLinear()\n                .domain([d3.min(data, function(d) { return d.equity; }),\n                            d3.max(data, function(d) { return d.equity; })])\n                .range([ height, 0 ]);\n            var yGen = d3.axisLeft(y)\n                        .tickFormat(pctFormat);\n            \n            svg.append(\"g\")\n                .call(yGen);\n\n            // Add the equity line\n            svg.append(\"path\")\n            .datum(data)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"steelblue\")\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"d\", d3.line()\n                .x(function(d) { return x(d.year) })\n                .y(function(d) { return y(d.equity) })\n                );\n            \n            // Add the bonds line\n            svg.append(\"path\")\n            .datum(data)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"cyan\")\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"d\", d3.line()\n                .x(function(d) { return x(d.year) })\n                .y(function(d) { return y(d.bond) })\n                );\n\n            // Add the inflation line\n            svg.append(\"path\")\n            .datum(data)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"red\")\n            .attr(\"stroke-width\", 1.5)\n            .style(\"stroke-dasharray\", (\"5, 5\"))\n            .attr(\"d\", d3.line()\n                .x(function(d) { return x(d.year) })\n                .y(function(d) { return y(d.inflation) })\n                );\n                \n        })\n    })\n\n    return(\n        <div>\n             <div id=\"d3target\" width=\"1200\" height=\"1200\" >\n                 \n             </div> \n        </div>\n    );\n}\n\nexport default HistoricalChart;\n"]},"metadata":{},"sourceType":"module"}