{"ast":null,"code":"const perRunClass = 'perrundata';\nconst failureColorString = 'Crimson';\nconst lowValueColorString = 'PeachPuff';\nconst highValueColorString = 'ForestGreen';\nconst maxValueColorString = 'DarkGreen';\nconst midValueColorString = 'DarkKhaki';\nconst startValueMargin = 0.5;\nconst thresholdValues = [0, 1 - startValueMargin, 1 + startValueMargin, 2, 5, 20];\nexport const getPerRunClassName = () => {\n  return perRunClass;\n};\nexport const getFailureColorString = () => {\n  return failureColorString;\n};\nexport const getLowValueColorString = () => {\n  return lowValueColorString;\n};\nexport const getHighValueColorString = () => {\n  return highValueColorString;\n};\nexport const getMidValueColorString = () => {\n  return midValueColorString;\n};\nexport const getThresholdValues = () => {\n  return thresholdValues;\n};\nexport const getColorStringForRelativeValue = ratioValue => {\n  var retValue = midValueColorString;\n\n  if (0 >= ratioValue) {\n    retValue = failureColorString;\n  } else if (ratioValue < 1 - startValueMargin) {\n    retValue = lowValueColorString;\n  } else if (ratioValue >= 1 + startValueMargin) {\n    if (ratioValue >= thresholdValues[thresholdValues.length - 2]) {\n      retValue = maxValueColorString;\n    } else {\n      retValue = highValueColorString;\n    }\n  }\n\n  return retValue;\n};","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/common.js"],"names":["perRunClass","failureColorString","lowValueColorString","highValueColorString","maxValueColorString","midValueColorString","startValueMargin","thresholdValues","getPerRunClassName","getFailureColorString","getLowValueColorString","getHighValueColorString","getMidValueColorString","getThresholdValues","getColorStringForRelativeValue","ratioValue","retValue","length"],"mappings":"AACA,MAAMA,WAAW,GAAG,YAApB;AACA,MAAMC,kBAAkB,GAAG,SAA3B;AACA,MAAMC,mBAAmB,GAAG,WAA5B;AACA,MAAMC,oBAAoB,GAAG,aAA7B;AACA,MAAMC,mBAAmB,GAAG,WAA5B;AACA,MAAMC,mBAAmB,GAAG,WAA5B;AACA,MAAMC,gBAAgB,GAAG,GAAzB;AACA,MAAMC,eAAe,GAAG,CAAC,CAAD,EAAI,IAAID,gBAAR,EAA0B,IAAIA,gBAA9B,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,EAAtD,CAAxB;AAEA,OAAO,MAAME,kBAAkB,GAAG,MAAM;AACpC,SAAOR,WAAP;AACH,CAFM;AAIP,OAAO,MAAMS,qBAAqB,GAAG,MAAM;AACvC,SAAOR,kBAAP;AACH,CAFM;AAIP,OAAO,MAAMS,sBAAsB,GAAG,MAAM;AACxC,SAAOR,mBAAP;AACH,CAFM;AAIP,OAAO,MAAMS,uBAAuB,GAAG,MAAM;AACzC,SAAOR,oBAAP;AACH,CAFM;AAIP,OAAO,MAAMS,sBAAsB,GAAG,MAAM;AACxC,SAAOP,mBAAP;AACH,CAFM;AAIP,OAAO,MAAMQ,kBAAkB,GAAG,MAAM;AACpC,SAAON,eAAP;AACH,CAFM;AAIP,OAAO,MAAMO,8BAA8B,GAAIC,UAAD,IAAgB;AAC1D,MAAIC,QAAQ,GAAGX,mBAAf;;AAEA,MAAI,KAAKU,UAAT,EAAqB;AACjBC,IAAAA,QAAQ,GAAGf,kBAAX;AACH,GAFD,MAGK,IAAIc,UAAU,GAAI,IAAIT,gBAAtB,EAAyC;AAC1CU,IAAAA,QAAQ,GAAGd,mBAAX;AACH,GAFI,MAGA,IAAIa,UAAU,IAAK,IAAIT,gBAAvB,EAA0C;AAC3C,QAAIS,UAAU,IAAKR,eAAe,CAACA,eAAe,CAACU,MAAhB,GAAuB,CAAxB,CAAlC,EAA+D;AAC3DD,MAAAA,QAAQ,GAAGZ,mBAAX;AACH,KAFD,MAGK;AACDY,MAAAA,QAAQ,GAAGb,oBAAX;AACH;AACJ;;AAED,SAAOa,QAAP;AACH,CAnBM","sourcesContent":["\nconst perRunClass = 'perrundata';\nconst failureColorString = 'Crimson';\nconst lowValueColorString = 'PeachPuff';\nconst highValueColorString = 'ForestGreen';\nconst maxValueColorString = 'DarkGreen';\nconst midValueColorString = 'DarkKhaki';\nconst startValueMargin = 0.5;\nconst thresholdValues = [0, 1 - startValueMargin, 1 + startValueMargin, 2, 5, 20];\n\nexport const getPerRunClassName = () => {\n    return perRunClass;\n}\n\nexport const getFailureColorString = () => {\n    return failureColorString;\n}\n\nexport const getLowValueColorString = () => {\n    return lowValueColorString;\n}\n\nexport const getHighValueColorString = () => {\n    return highValueColorString;\n}\n\nexport const getMidValueColorString = () => {\n    return midValueColorString;\n}\n\nexport const getThresholdValues = () => {\n    return thresholdValues;\n}\n\nexport const getColorStringForRelativeValue = (ratioValue) => {\n    var retValue = midValueColorString;\n\n    if (0 >= ratioValue) {\n        retValue = failureColorString;\n    }\n    else if (ratioValue < (1 - startValueMargin)) {\n        retValue = lowValueColorString;\n    }\n    else if (ratioValue >= (1 + startValueMargin)) {\n        if (ratioValue >= (thresholdValues[thresholdValues.length-2])) {\n            retValue = maxValueColorString;\n        }\n        else {\n            retValue = highValueColorString;\n        }\n    }\n\n    return retValue;\n}"]},"metadata":{},"sourceType":"module"}