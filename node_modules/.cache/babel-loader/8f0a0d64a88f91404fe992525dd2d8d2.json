{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\"; // d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HistoricalChart() {\n  _s();\n\n  const [xExtState, setXExtState] = React.useState([]);\n  const [yExtState, setYExtState] = React.useState([]);\n  const [histDataState, setDataState] = React.useState([]);\n  const [loadedState, setLoadedState] = React.useState(false);\n  const margin = {\n    top: 40,\n    right: 80,\n    bottom: 60,\n    left: 50\n  };\n  const width = 960 - margin.left - margin.right;\n  const height = 600 - margin.top - margin.bottom;\n  const equityColor = \"OrangeRed\";\n  var focus = null;\n\n  const getXScale = (dataIn, widthIn) => {\n    var xExt = d3.extent(dataIn, d => d.year);\n    return d3.scaleLinear().domain(xExt).range([0, widthIn]);\n  };\n\n  const getXScaleSafe = () => {\n    var ret = null;\n\n    if (null != xExtState) {\n      ret = d3.scaleLinear().domain(xExtState).range([0, width]);\n    }\n\n    return ret;\n  };\n\n  const getYScale = (dataIn, heightIn) => {\n    var yExt = d3.extent(dataIn, d => d.equity);\n    return d3.scaleLinear().domain(yExt).range([heightIn, 0]);\n  };\n\n  const getYScaleSafe = () => {\n    var ret = null;\n\n    if (null != yExtState) {\n      ret = d3.scaleLinear().domain(yExtState).range([height, 0]);\n    }\n\n    return ret;\n  };\n\n  const drawAxes = (svg, xScaleIn, yScaleIn, heightIn) => {\n    var pctFormat = d3.format(\"4.2%\");\n    var yearFormat = d3.format(\"d\");\n    var xGen = d3.axisBottom(xScaleIn).tickFormat(yearFormat);\n    var yGen = d3.axisLeft(yScaleIn).tickFormat(pctFormat);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + heightIn + \")\").call(xGen);\n    svg.append(\"g\").call(yGen);\n  };\n\n  const drawLines = (svg, dataIn, xScaleIn, yScaleIn) => {\n    // Add the equity line\n    svg.append(\"path\").datum(dataIn).attr(\"fill\", \"none\").attr(\"stroke\", equityColor).attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n      return xScaleIn(d.year);\n    }).y(function (d) {\n      return yScaleIn(d.equity);\n    }));\n  };\n\n  const prepHoverStuff = svg => {\n    // focus indicator\n    focus = svg.append('g').append('circle').style(\"fill\", \"none\").attr(\"stroke\", \"black\").attr('r', 8.5).style(\"opacity\", 0); // mouse tracking stuff\n\n    svg.append('rect').style(\"fill\", \"none\").style(\"pointer-events\", \"all\").attr('width', width).attr('height', height).on('mouseover', handleMouseOver).on('mousemove', handleMouseMove).on('mouseout', handleMouseLeave);\n  };\n\n  const isDataTrackingReady = () => {\n    return null != focus && 0 < histDataState.length;\n  };\n\n  const handleMouseOver = e => {\n    if (isDataTrackingReady()) {\n      focus.style(\"opacity\", 1);\n    }\n  };\n\n  const handleMouseMove = e => {\n    const bisect = d3.bisector(d => d.year).left;\n    var xScaleIn = getXScale(histDataState, width);\n    const x0 = xScaleIn.invert(d3.pointer(e, this)[0]);\n    const index = bisect(histDataState, x0, 1);\n    console.log(\"mouseMove - loaded : \" + loadedState + \" x0 : \" + x0 + \" index : \" + index);\n  };\n\n  const handleMouseMoveX = e => {\n    if (isDataTrackingReady()) {\n      var bisect = d3.bisector(function (d) {\n        return d.year;\n      }).left;\n      var invertIn = d3.pointer(e, this)[0];\n      var x0 = getXScaleSafe.invert(invertIn);\n      var i = bisect(histDataState, x0, 1);\n      var selectedData = histDataState[i];\n      focus.attr(\"cx\", getXScaleSafe(selectedData.year)).attr(\"cy\", getYScaleSafe(selectedData.equity));\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (isDataTrackingReady()) {\n      focus.style(\"opacity\", 0);\n    }\n  };\n\n  React.useEffect(() => {\n    if (!loadedState) {\n      var svg = d3.select(\"#d3target\");\n      console.log(\"loading ...\");\n      d3.csv(hist, function (d) {\n        return {\n          year: d.year,\n          inflation: +d.inflation,\n          equity: +d.equity,\n          bond: +d.bond\n        };\n      }).then(function (dataset) {\n        console.log(\"... loaded\");\n        var xExtIn = d3.extent(dataset, d => d.year);\n        var yExtIn = d3.extent(dataset, d => d.equity);\n        var xScaleIn = getXScale(dataset, width);\n        var yScaleIn = getYScale(dataset, height); // update state \n\n        setDataState(dataset);\n        setXExtState(xExtIn);\n        setYExtState(yExtIn);\n        setLoadedState(true);\n        drawAxes(svg, xScaleIn, yScaleIn, height);\n        drawLines(svg, dataset, xScaleIn, yScaleIn);\n        prepHoverStuff(svg);\n      });\n    }\n  }, [setDataState, setXExtState, setYExtState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"d3target\",\n      width: 960 - margin.left - margin.right,\n      height: 600 - margin.top - margin.bottom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HistoricalChart, \"vhTFGUzsNFUkk0Yv2BtsG82lZxw=\");\n\n_c = HistoricalChart;\nexport default HistoricalChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoricalChart\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js"],"names":["React","d3","hist","HistoricalChart","xExtState","setXExtState","useState","yExtState","setYExtState","histDataState","setDataState","loadedState","setLoadedState","margin","top","right","bottom","left","width","height","equityColor","focus","getXScale","dataIn","widthIn","xExt","extent","d","year","scaleLinear","domain","range","getXScaleSafe","ret","getYScale","heightIn","yExt","equity","getYScaleSafe","drawAxes","svg","xScaleIn","yScaleIn","pctFormat","format","yearFormat","xGen","axisBottom","tickFormat","yGen","axisLeft","append","attr","call","drawLines","datum","line","x","y","prepHoverStuff","style","on","handleMouseOver","handleMouseMove","handleMouseLeave","isDataTrackingReady","length","e","bisect","bisector","x0","invert","pointer","index","console","log","handleMouseMoveX","invertIn","i","selectedData","useEffect","select","csv","inflation","bond","then","dataset","xExtIn","yExtIn"],"mappings":"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","sourcesContent":["\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\";\n\n// d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nfunction HistoricalChart () {\n    const [xExtState, setXExtState] = React.useState([]);\n    const [yExtState, setYExtState] = React.useState([]);\n    const [histDataState, setDataState] = React.useState([]);\n    const [loadedState, setLoadedState] = React.useState(false);\n    const margin = { top: 40, right: 80, bottom: 60, left: 50 };\n    const width = 960 - margin.left - margin.right;\n    const height = 600 - margin.top - margin.bottom;\n    const equityColor = \"OrangeRed\";\n    var focus = null;\n\n    const getXScale = (dataIn, widthIn) => { \n        var xExt = d3.extent(dataIn, (d) => d.year);\n        return d3.scaleLinear()\n                 .domain(xExt)\n                 .range([ 0, widthIn ]);\n    }\n\n    const getXScaleSafe = () => {\n        var ret = null;\n        if (null != xExtState) {\n            ret = d3.scaleLinear()\n                    .domain(xExtState)\n                    .range([ 0, width ]);\n        }\n        return ret;\n    }\n\n    const getYScale = (dataIn, heightIn) => {\n        var yExt = d3.extent(dataIn, (d) => d.equity);\n        return d3.scaleLinear()\n                 .domain(yExt)\n                 .range([ heightIn, 0 ]);\n    }\n\n    const getYScaleSafe = () => {\n        var ret = null;\n        if (null != yExtState) {\n            ret = d3.scaleLinear()\n                    .domain(yExtState)\n                    .range([ height, 0 ]);\n        }\n        return ret;\n    }\n\n    const drawAxes = (svg, xScaleIn, yScaleIn, heightIn) => {\n        var pctFormat = d3.format(\"4.2%\");\n        var yearFormat = d3.format(\"d\");\n        var xGen = d3.axisBottom(xScaleIn)\n                     .tickFormat(yearFormat);            \n        var yGen = d3.axisLeft(yScaleIn)\n                     .tickFormat(pctFormat);    \n\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + heightIn + \")\")\n            .call(xGen);\n        svg.append(\"g\")\n           .call(yGen);\n    };\n\n    const drawLines = (svg, dataIn, xScaleIn, yScaleIn) => {\n        // Add the equity line\n        svg.append(\"path\")\n            .datum(dataIn)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", equityColor)\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"d\", d3.line()\n                        .x(function(d) { return xScaleIn(d.year) })\n                        .y(function(d) { return yScaleIn(d.equity) })\n            );\n    }\n\n    const prepHoverStuff = (svg) => {\n        // focus indicator\n        focus = svg\n        .append('g')\n        .append('circle')\n            .style(\"fill\", \"none\")\n            .attr(\"stroke\", \"black\")\n            .attr('r', 8.5)\n            .style(\"opacity\", 0);\n\n        // mouse tracking stuff\n        svg\n        .append('rect')\n        .style(\"fill\", \"none\")\n        .style(\"pointer-events\", \"all\")\n        .attr('width', width)\n        .attr('height', height)\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseLeave);   \n    }\n\n    const isDataTrackingReady = () => {\n        return ((null != focus) && \n                (0 < histDataState.length));\n    }\n\n    const handleMouseOver = (e) => {\n        if (isDataTrackingReady()) {\n            focus.style(\"opacity\", 1);\n        }\n    }\n\n    const handleMouseMove = (e) => {\n        const bisect = d3.bisector((d) => d.year).left;\n        var xScaleIn = getXScale(histDataState, width);\n        const x0 = xScaleIn.invert(d3.pointer(e, this)[0]);\n        const index = bisect(histDataState, x0, 1);\n        console.log(\"mouseMove - loaded : \" + loadedState + \" x0 : \" + x0 + \" index : \" + index);\n    }\n\n    const handleMouseMoveX = (e) => {\n        if (isDataTrackingReady()) {            \n            var bisect = d3.bisector(function(d) { return d.year; }).left;\n            var invertIn = d3.pointer(e, this)[0];\n            var x0 = getXScaleSafe.invert(invertIn);\n            var i = bisect(histDataState, x0, 1);\n            var selectedData = histDataState[i];\n\n            focus\n                .attr(\"cx\", getXScaleSafe(selectedData.year))\n                .attr(\"cy\", getYScaleSafe(selectedData.equity));\n        }\n    };\n    \n    const handleMouseLeave = () => {\n        if (isDataTrackingReady()) {\n            focus.style(\"opacity\", 0);\n        }\n    };\n\n    React.useEffect(() => {\n\n\n        if (!loadedState) {\n            var svg = d3.select(\"#d3target\");\n            console.log(\"loading ...\");\n            d3.csv(hist,function(d) {\n                return { year: d.year, inflation: +d.inflation, equity: +d.equity, bond: +d.bond };\n            })\n            .then (function(dataset) {\n                console.log(\"... loaded\");\n                var xExtIn = d3.extent(dataset, (d) => d.year);\n                var yExtIn = d3.extent(dataset, (d) => d.equity);\n                var xScaleIn = getXScale(dataset, width);\n                var yScaleIn = getYScale(dataset, height);\n\n                // update state \n                setDataState(dataset);\n                setXExtState(xExtIn);\n                setYExtState(yExtIn);\n                setLoadedState(true);\n\n                drawAxes(svg, xScaleIn, yScaleIn, height);\n                drawLines(svg, dataset, xScaleIn, yScaleIn); \n                prepHoverStuff(svg);\n            })\n        }\n    }, [setDataState, setXExtState, setYExtState]);\n\n    return (\n        <div>\n            <svg id=\"d3target\" \n                 width={960 - margin.left - margin.right}\n                 height={600 - margin.top - margin.bottom} >\n            </svg>\n        </div>\n    );\n}\n\nexport default HistoricalChart;\n"]},"metadata":{},"sourceType":"module"}