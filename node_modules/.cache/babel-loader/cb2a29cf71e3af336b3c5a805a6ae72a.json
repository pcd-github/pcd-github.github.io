{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\"; // d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HistoricalChart() {\n  _s();\n\n  const [activeIndex, setActiveIndex] = React.useState(null);\n  const [histData, setData] = React.useState([]);\n  const margin = {\n    top: 40,\n    right: 80,\n    bottom: 60,\n    left: 50\n  };\n  const width = 960 - margin.left - margin.right;\n  const height = 600 - margin.top - margin.bottom;\n\n  const getXScale = (dataIn, widthIn) => {\n    var xExt = d3.extent(dataIn, d => d.year);\n    return d3.scaleLinear().domain(xExt).range([0, widthIn]);\n  };\n\n  const getYScale = (dataIn, heightIn) => {\n    var yExt = d3.extent(dataIn, d => d.equity);\n    return d3.scaleLinear().domain(yExt).range([heightIn, 0]);\n  };\n\n  const drawAxes = (svg, x, y, heightIn) => {\n    var pctFormat = d3.format(\"4.2%\");\n    var yearFormat = d3.format(\"d\");\n    var xGen = d3.axisBottom(x).tickFormat(yearFormat);\n    var yGen = d3.axisLeft(y).tickFormat(pctFormat);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + heightIn + \")\").call(xGen);\n    svg.append(\"g\").call(yGen);\n  };\n\n  const drawLines = (svg, dataIn, x, y) => {\n    const equityColor = \"OrangeRed\"; // Add the equity line\n\n    svg.append(\"path\").datum(dataIn).attr(\"fill\", \"none\").attr(\"stroke\", equityColor).attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n      return x(d.year);\n    }).y(function (d) {\n      return y(d.equity);\n    }));\n  };\n\n  const handleMouseMove = e => {\n    const bisect = d3.bisector(d => d.year).left;\n    const xScale = getXScale(histData, width);\n    const x0 = getXScale.invert(d3.pointer(e, this)[0]);\n    const index = bisect(histData, x0, 1);\n    console.log(\"mouseMove - x0 : \" + x0 + \" index : \" + index);\n    setActiveIndex(index);\n  };\n\n  const handleMouseLeave = () => {\n    setActiveIndex(null);\n  };\n\n  React.useEffect(() => {\n    var svg = d3.select(\"#d3target\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    d3.csv(hist, function (d) {\n      return {\n        year: d.year,\n        inflation: +d.inflation,\n        equity: +d.equity,\n        bond: +d.bond\n      };\n    }).then(function (dataset) {\n      setData(dataset);\n      var xScale = getXScale(dataset, width);\n      var yScale = getYScale(dataset, height); // xy axes\n\n      drawAxes(svg, xScale, yScale, height); // chart lines\n\n      drawLines(svg, dataset, xScale, yScale);\n    });\n  }, [setData, margin, width]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"d3target\",\n      onMouseMove: handleMouseMove,\n      onMouseLeave: handleMouseLeave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HistoricalChart, \"w7aL4YtEYJwAmzJRcT/B00Op1P8=\");\n\n_c = HistoricalChart;\nexport default HistoricalChart;\n/*\n                \n                <g className=\"axis xAxis\"\n                    ref={getXAxis}\n                    transform={`translate(0,${height})`} />\n                <g className=\"axis\" ref={getYAxis} />    \n                \n                               \n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoricalChart\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js"],"names":["React","d3","hist","HistoricalChart","activeIndex","setActiveIndex","useState","histData","setData","margin","top","right","bottom","left","width","height","getXScale","dataIn","widthIn","xExt","extent","d","year","scaleLinear","domain","range","getYScale","heightIn","yExt","equity","drawAxes","svg","x","y","pctFormat","format","yearFormat","xGen","axisBottom","tickFormat","yGen","axisLeft","append","attr","call","drawLines","equityColor","datum","line","handleMouseMove","e","bisect","bisector","xScale","x0","invert","pointer","index","console","log","handleMouseLeave","useEffect","select","csv","inflation","bond","then","dataset","yScale"],"mappings":"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","sourcesContent":["\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\";\n\n// d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nfunction HistoricalChart () {\n    const [activeIndex, setActiveIndex] = React.useState(null);\n    const [histData, setData] = React.useState([]);\n    const margin = { top: 40, right: 80, bottom: 60, left: 50 };\n    const width = 960 - margin.left - margin.right;\n    const height = 600 - margin.top - margin.bottom;\n\n    const getXScale = (dataIn, widthIn) => { \n        var xExt = d3.extent(dataIn, (d) => d.year);\n        return d3.scaleLinear()\n                 .domain(xExt)\n                 .range([ 0, widthIn ]);\n    }\n\n    const getYScale = (dataIn, heightIn) => {\n        var yExt = d3.extent(dataIn, (d) => d.equity);\n        return d3.scaleLinear()\n                 .domain(yExt)\n                 .range([ heightIn, 0 ]);\n    }\n\n    const drawAxes = (svg, x, y, heightIn) => {\n        var pctFormat = d3.format(\"4.2%\");\n        var yearFormat = d3.format(\"d\");\n        var xGen = d3.axisBottom(x)\n                     .tickFormat(yearFormat);            \n        var yGen = d3.axisLeft(y)\n                     .tickFormat(pctFormat);    \n\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + heightIn + \")\")\n            .call(xGen);\n        svg.append(\"g\")\n           .call(yGen);\n    };\n\n    const drawLines = (svg, dataIn, x, y) => {\n        const equityColor = \"OrangeRed\";\n        // Add the equity line\n        svg.append(\"path\")\n            .datum(dataIn)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", equityColor)\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"d\", d3.line()\n                        .x(function(d) { return x(d.year) })\n                        .y(function(d) { return y(d.equity) })\n            );\n    }\n\n    const handleMouseMove = (e) => {\n        const bisect = d3.bisector((d) => d.year).left;\n        const xScale = getXScale(histData, width);\n        const x0 = getXScale.invert(d3.pointer(e, this)[0]);\n        const index = bisect(histData, x0, 1);\n        console.log(\"mouseMove - x0 : \" + x0 + \" index : \" + index);\n        setActiveIndex(index);\n    };\n    \n    const handleMouseLeave = () => {\n        setActiveIndex(null);\n    };\n\n\n    React.useEffect(() => {\n\n        var svg = d3.select(\"#d3target\")\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom)\n                    .append(\"g\")\n                    .attr(\"transform\",\n                          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        d3.csv(hist,function(d) {\n            return { year: d.year, inflation: +d.inflation, equity: +d.equity, bond: +d.bond };\n        })\n        .then (function(dataset) {\n            setData(dataset);\n            var xScale = getXScale(dataset, width);\n            var yScale = getYScale(dataset, height);\n\n            // xy axes\n            drawAxes(svg, xScale, yScale, height);\n\n            // chart lines\n            drawLines(svg, dataset, xScale, yScale);          \n        })\n    }, [setData, margin, width]);\n\n    return (\n        <div>\n            <svg id=\"d3target\"\n                 onMouseMove={handleMouseMove}\n                 onMouseLeave={handleMouseLeave} >\n            </svg>\n        </div>\n    );\n}\n\nexport default HistoricalChart;\n/*\n                \n                <g className=\"axis xAxis\"\n                    ref={getXAxis}\n                    transform={`translate(0,${height})`} />\n                <g className=\"axis\" ref={getYAxis} />    \n                \n                               \n*/"]},"metadata":{},"sourceType":"module"}