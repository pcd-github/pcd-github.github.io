{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/endvaluechart.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EndValueChart(props) {\n  _s();\n\n  const [binMetadataState, setBinMetadataState] = useState([]);\n  const svgID = 'endvaluechartsvg';\n  const perRunClass = 'perrunevdata';\n  const margin = {\n    top: 40,\n    right: 65,\n    bottom: 40,\n    left: 65\n  };\n  const totalWidth = 960;\n  const totalHeight = 300;\n  const marginTranslate = \"translate(\" + margin.left + \",\" + margin.top + \")\";\n  const boundedWidth = totalWidth - margin.left - margin.right;\n  const boundedHeight = totalHeight - margin.top - margin.bottom;\n  const ttBinWrapID = 'ttevwrap';\n  const ttBinBackID = 'ttevback';\n  const ttBinRangeID = 'ttevrange';\n  const ttBinPctID = 'ttevpct';\n  const tooltipWidth = 75;\n  const tooltipHeight = 75;\n  const thresholdValues = [0, 0.25, 0.5, 1, 3, 5, 10, 50];\n\n  const cleanupPrev = svg => {\n    const perRunSelect = '.' + perRunClass;\n    d3.selectAll(perRunSelect).remove();\n  };\n\n  const getXScaleForAxis = () => {\n    const numThresholds = thresholdValues.length;\n    var thresholdRange = [];\n    var thresholdInc = boundedWidth / (numThresholds + 1);\n\n    for (var i = 0; i <= thresholdValues.length; i++) {\n      thresholdRange[i] = i * thresholdInc;\n    }\n\n    return d3.scaleThreshold().domain(thresholdValues).range(thresholdRange);\n  };\n\n  const calcBinMetadata = data => {\n    const oneBinMetadata = {\n      'binData': data,\n      'extBin': d3.extent(data, d => d.adjEndCycleValue),\n      'extPctStartValue': d3.extent(data, d => d.pctOfStart),\n      'binCount': data.length\n    };\n    return oneBinMetadata;\n  };\n\n  const prepTooltip = svg => {\n    // wrapper\n    // background\n    // text element\n    //  tspan for each line\n    //  x0, x1, % of start, % of results\n    const tooltipWrapper = svg.append('g').attr('id', ttBinWrapID).attr('display', 'none');\n    const tooltipBack = tooltipWrapper.append('rect').style('opacity', 0.70).attr('id', ttBinBackID).attr('width', tooltipWidth).attr('height', tooltipHeight).attr(\"pointer-events\", \"none\").attr(\"fill\", \"#e8e8e8\");\n    const tooltipText = tooltipWrapper.append('g').append('text').attr(\"pointer-events\", \"none\").attr('font-weight', 900).attr('text-anchor', 'left');\n    tooltipText.append('tspan').attr('id', ttBinRangeID).attr('x', '5').attr('y', '5').attr('dy', '15px').attr(\"pointer-events\", \"none\");\n    tooltipText.append('tspan').attr('id', ttBinPctID).attr('x', '5').attr('y', '5').attr('dy', '30px').attr(\"pointer-events\", \"none\");\n  };\n\n  const drawHistogram = svg => {\n    cleanupPrev(svg);\n    const xScaleBins = getXScaleForAxis();\n    const binFunc = d3.bin().value(function (d) {\n      return d.pctOfStart;\n    }).domain([thresholdValues[0], thresholdValues[thresholdValues.length - 1]]).thresholds(thresholdValues);\n    const bins = binFunc(props.metadata);\n    const yScaleBins = d3.scaleLinear().domain([0, d3.max(bins, function (d) {\n      return d.length;\n    })]).range([boundedHeight, 0]);\n    var binsMeta = [];\n\n    for (var i = 0; i < bins.length; i++) {\n      binsMeta[i] = calcBinMetadata(bins[i]);\n    }\n\n    setBinMetadataState(binsMeta);\n    svg.append(\"g\").attr(\"class\", perRunClass).attr(\"transform\", \"translate(0,\" + boundedHeight + \")\").call(d3.axisBottom(xScaleBins));\n    svg.append(\"g\").attr(\"class\", perRunClass).call(d3.axisLeft(yScaleBins)); // draw the histogram bars \n\n    svg.selectAll(\"rect\").data(bins).enter().append(\"rect\").attr(\"class\", perRunClass).attr(\"x\", 1).attr(\"transform\", function (d) {\n      return \"translate(\" + xScaleBins(d.x0) + \",\" + yScaleBins(d.length) + \")\";\n    }).attr(\"width\", function (d) {\n      return xScaleBins(d.x1) - xScaleBins(d.x0) - 1;\n    }).attr(\"height\", function (d) {\n      return boundedHeight - yScaleBins(d.length);\n    }).style(\"fill\", \"#69b3a2\").on(\"mouseover\", handleMouseOver).on(\"mouseout\", handleMouseLeave).on('mousemove', handleMouseMove);\n  };\n\n  const makeCurrency = num => {\n    let dollarUSLocale = Intl.NumberFormat('en-US', {\n      style: \"currency\",\n      currency: \"USD\"\n    });\n    return dollarUSLocale.format(num);\n  };\n\n  const makePct = num => {\n    return Number(num * 100).toFixed(2) + '%';\n  };\n\n  const getTooltip = () => {\n    return d3.select('#' + ttBinWrapID);\n  };\n\n  const getBinRangeSpan = () => {\n    return d3.select('#' + ttBinRangeID);\n  };\n\n  const getBinPctSpan = () => {\n    return d3.select('#' + ttBinPctID);\n  };\n\n  const handleMouseOver = e => {\n    console.log('over');\n    getTooltip().style('opacity', 1);\n  };\n\n  const handleMouseMove = e => {\n    const coords = d3.pointer(e);\n    const binData = e.srcElement.__data__;\n    const binMeta = calcBinMetadata(binData); // set the tt content\n\n    const tt = getTooltip();\n    const rangeString = makeCurrency(+binMeta.extBin[0]) + '-' + makeCurrency(+binMeta.extBin[1]);\n    const binSizeString = '(' + makePct(binData.length / props.metadata.length) + ' of cycles)';\n    const ttContent = rangeString + binSizeString;\n    getBinRangeSpan().attr('text', ttContent); // console.log('move : ' + binData[0].adjEndCycleValue + ' ' + ttContent);\n    // place the tt\n\n    tt.style('left', coords[0] + 'px').style('top', coords[1] + 'px');\n  };\n\n  const handleMouseLeave = () => {\n    console.log('leave');\n    getTooltip().style('opacity', 0);\n  };\n\n  React.useEffect(() => {\n    const svgSelect = '#' + svgID;\n    const svg = d3.select(svgSelect).append(\"g\").attr(\"transform\", marginTranslate);\n    prepTooltip(svg);\n    drawHistogram(svg);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: svgID,\n      width: totalWidth,\n      height: totalHeight,\n      children: /*#__PURE__*/_jsxDEV(\"rect\", {\n        style: {\n          opacity: 0\n        },\n        width: boundedWidth,\n        height: boundedHeight,\n        transform: marginTranslate,\n        fill: \"LightGrey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EndValueChart, \"b9n5mTSe+H/ngodpAp6FIzcAtns=\");\n\n_c = EndValueChart;\n;\nexport default EndValueChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"EndValueChart\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/endvaluechart.js"],"names":["React","useState","d3","EndValueChart","props","binMetadataState","setBinMetadataState","svgID","perRunClass","margin","top","right","bottom","left","totalWidth","totalHeight","marginTranslate","boundedWidth","boundedHeight","ttBinWrapID","ttBinBackID","ttBinRangeID","ttBinPctID","tooltipWidth","tooltipHeight","thresholdValues","cleanupPrev","svg","perRunSelect","selectAll","remove","getXScaleForAxis","numThresholds","length","thresholdRange","thresholdInc","i","scaleThreshold","domain","range","calcBinMetadata","data","oneBinMetadata","extent","d","adjEndCycleValue","pctOfStart","prepTooltip","tooltipWrapper","append","attr","tooltipBack","style","tooltipText","drawHistogram","xScaleBins","binFunc","bin","value","thresholds","bins","metadata","yScaleBins","scaleLinear","max","binsMeta","call","axisBottom","axisLeft","enter","x0","x1","on","handleMouseOver","handleMouseLeave","handleMouseMove","makeCurrency","num","dollarUSLocale","Intl","NumberFormat","currency","format","makePct","Number","toFixed","getTooltip","select","getBinRangeSpan","getBinPctSpan","e","console","log","coords","pointer","binData","srcElement","__data__","binMeta","tt","rangeString","extBin","binSizeString","ttContent","useEffect","svgSelect","opacity"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;;AAEA,SAASC,aAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAE3B,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,EAAD,CAAxD;AAEA,QAAMM,KAAK,GAAG,kBAAd;AACA,QAAMC,WAAW,GAAG,cAApB;AACA,QAAMC,MAAM,GAAG;AAAEC,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,KAAK,EAAE,EAAlB;AAAsBC,IAAAA,MAAM,EAAE,EAA9B;AAAkCC,IAAAA,IAAI,EAAE;AAAxC,GAAf;AACA,QAAMC,UAAU,GAAG,GAAnB;AACA,QAAMC,WAAW,GAAG,GAApB;AACA,QAAMC,eAAe,GAAG,eAAeP,MAAM,CAACI,IAAtB,GAA6B,GAA7B,GAAmCJ,MAAM,CAACC,GAA1C,GAAgD,GAAxE;AACA,QAAMO,YAAY,GAAGH,UAAU,GAAGL,MAAM,CAACI,IAApB,GAA2BJ,MAAM,CAACE,KAAvD;AACA,QAAMO,aAAa,GAAGH,WAAW,GAAGN,MAAM,CAACC,GAArB,GAA2BD,MAAM,CAACG,MAAxD;AACA,QAAMO,WAAW,GAAG,UAApB;AACA,QAAMC,WAAW,GAAG,UAApB;AACA,QAAMC,YAAY,GAAG,WAArB;AACA,QAAMC,UAAU,GAAG,SAAnB;AACA,QAAMC,YAAY,GAAG,EAArB;AACA,QAAMC,aAAa,GAAG,EAAtB;AACA,QAAMC,eAAe,GAAG,CAAC,CAAD,EAAI,IAAJ,EAAU,GAAV,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,EAAxB,EAA4B,EAA5B,CAAxB;;AAEA,QAAMC,WAAW,GAAIC,GAAD,IAAS;AACzB,UAAMC,YAAY,GAAG,MAAMpB,WAA3B;AACAN,IAAAA,EAAE,CAAC2B,SAAH,CAAaD,YAAb,EAA2BE,MAA3B;AACH,GAHD;;AAKA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,UAAMC,aAAa,GAAGP,eAAe,CAACQ,MAAtC;AACA,QAAIC,cAAc,GAAG,EAArB;AACA,QAAIC,YAAY,GAAGlB,YAAY,IAAIe,aAAa,GAAG,CAApB,CAA/B;;AAEA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIX,eAAe,CAACQ,MAArC,EAA6CG,CAAC,EAA9C,EAAkD;AAC9CF,MAAAA,cAAc,CAACE,CAAD,CAAd,GAAoBA,CAAC,GAAGD,YAAxB;AACH;;AAED,WAAOjC,EAAE,CAACmC,cAAH,GACGC,MADH,CACUb,eADV,EAEGc,KAFH,CAESL,cAFT,CAAP;AAGH,GAZD;;AAcA,QAAMM,eAAe,GAAIC,IAAD,IAAU;AAC9B,UAAMC,cAAc,GAAG;AACnB,iBAAWD,IADQ;AAEnB,gBAAUvC,EAAE,CAACyC,MAAH,CAAUF,IAAV,EAAiBG,CAAD,IAAOA,CAAC,CAACC,gBAAzB,CAFS;AAGnB,0BAAoB3C,EAAE,CAACyC,MAAH,CAAUF,IAAV,EAAiBG,CAAD,IAAOA,CAAC,CAACE,UAAzB,CAHD;AAInB,kBAAYL,IAAI,CAACR;AAJE,KAAvB;AAOA,WAAOS,cAAP;AACH,GATD;;AAWA,QAAMK,WAAW,GAAIpB,GAAD,IAAS;AACzB;AACA;AACA;AACA;AACA;AAEA,UAAMqB,cAAc,GAAGrB,GAAG,CAACsB,MAAJ,CAAW,GAAX,EACIC,IADJ,CACS,IADT,EACe/B,WADf,EAEI+B,IAFJ,CAES,SAFT,EAEoB,MAFpB,CAAvB;AAGA,UAAMC,WAAW,GAAGH,cAAc,CAACC,MAAf,CAAsB,MAAtB,EACeG,KADf,CACqB,SADrB,EACgC,IADhC,EAEeF,IAFf,CAEoB,IAFpB,EAE0B9B,WAF1B,EAGe8B,IAHf,CAGoB,OAHpB,EAG6B3B,YAH7B,EAIe2B,IAJf,CAIoB,QAJpB,EAI8B1B,aAJ9B,EAKe0B,IALf,CAKoB,gBALpB,EAKsC,MALtC,EAMeA,IANf,CAMoB,MANpB,EAM4B,SAN5B,CAApB;AAOA,UAAMG,WAAW,GAAGL,cAAc,CAACC,MAAf,CAAsB,GAAtB,EAA2BA,MAA3B,CAAkC,MAAlC,EACeC,IADf,CACoB,gBADpB,EACsC,MADtC,EAEeA,IAFf,CAEoB,aAFpB,EAEmC,GAFnC,EAGeA,IAHf,CAGoB,aAHpB,EAGmC,MAHnC,CAApB;AAIAG,IAAAA,WAAW,CAACJ,MAAZ,CAAmB,OAAnB,EACYC,IADZ,CACiB,IADjB,EACuB7B,YADvB,EAEY6B,IAFZ,CAEiB,GAFjB,EAEsB,GAFtB,EAGYA,IAHZ,CAGiB,GAHjB,EAGsB,GAHtB,EAIYA,IAJZ,CAIiB,IAJjB,EAIuB,MAJvB,EAKYA,IALZ,CAKiB,gBALjB,EAKmC,MALnC;AAMAG,IAAAA,WAAW,CAACJ,MAAZ,CAAmB,OAAnB,EACYC,IADZ,CACiB,IADjB,EACuB5B,UADvB,EAEY4B,IAFZ,CAEiB,GAFjB,EAEsB,GAFtB,EAGYA,IAHZ,CAGiB,GAHjB,EAGsB,GAHtB,EAIYA,IAJZ,CAIiB,IAJjB,EAIuB,MAJvB,EAKYA,IALZ,CAKiB,gBALjB,EAKmC,MALnC;AAOP,GAlCG;;AAoCA,QAAMI,aAAa,GAAI3B,GAAD,IAAS;AAC3BD,IAAAA,WAAW,CAACC,GAAD,CAAX;AAEA,UAAM4B,UAAU,GAAGxB,gBAAgB,EAAnC;AACA,UAAMyB,OAAO,GAAGtD,EAAE,CAACuD,GAAH,GACGC,KADH,CACS,UAASd,CAAT,EAAY;AAAE,aAAOA,CAAC,CAACE,UAAT;AAAsB,KAD7C,EAEGR,MAFH,CAEU,CAACb,eAAe,CAAC,CAAD,CAAhB,EAAqBA,eAAe,CAACA,eAAe,CAACQ,MAAhB,GAAyB,CAA1B,CAApC,CAFV,EAGG0B,UAHH,CAGclC,eAHd,CAAhB;AAIA,UAAMmC,IAAI,GAAGJ,OAAO,CAACpD,KAAK,CAACyD,QAAP,CAApB;AACA,UAAMC,UAAU,GAAG5D,EAAE,CAAC6D,WAAH,GACGzB,MADH,CACU,CAAC,CAAD,EAAIpC,EAAE,CAAC8D,GAAH,CAAOJ,IAAP,EAAa,UAAShB,CAAT,EAAY;AAAE,aAAOA,CAAC,CAACX,MAAT;AAAkB,KAA7C,CAAJ,CADV,EAEGM,KAFH,CAES,CAACrB,aAAD,EAAgB,CAAhB,CAFT,CAAnB;AAIA,QAAI+C,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAI7B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwB,IAAI,CAAC3B,MAAzB,EAAiCG,CAAC,EAAlC,EAAsC;AAClC6B,MAAAA,QAAQ,CAAC7B,CAAD,CAAR,GAAcI,eAAe,CAACoB,IAAI,CAACxB,CAAD,CAAL,CAA7B;AACH;;AAED9B,IAAAA,mBAAmB,CAAC2D,QAAD,CAAnB;AAEAtC,IAAAA,GAAG,CAACsB,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,OADV,EACmB1C,WADnB,EAEK0C,IAFL,CAEU,WAFV,EAEuB,iBAAiBhC,aAAjB,GAAiC,GAFxD,EAGKgD,IAHL,CAGUhE,EAAE,CAACiE,UAAH,CAAcZ,UAAd,CAHV;AAIA5B,IAAAA,GAAG,CAACsB,MAAJ,CAAW,GAAX,EACIC,IADJ,CACS,OADT,EACkB1C,WADlB,EAEI0D,IAFJ,CAEShE,EAAE,CAACkE,QAAH,CAAYN,UAAZ,CAFT,EAxB2B,CA4BxB;;AACHnC,IAAAA,GAAG,CAACE,SAAJ,CAAc,MAAd,EACIY,IADJ,CACSmB,IADT,EAEIS,KAFJ,GAGIpB,MAHJ,CAGW,MAHX,EAISC,IAJT,CAIc,OAJd,EAIuB1C,WAJvB,EAKS0C,IALT,CAKc,GALd,EAKmB,CALnB,EAMSA,IANT,CAMc,WANd,EAM2B,UAASN,CAAT,EAAY;AAAE,aAAO,eAAeW,UAAU,CAACX,CAAC,CAAC0B,EAAH,CAAzB,GAAkC,GAAlC,GAAwCR,UAAU,CAAClB,CAAC,CAACX,MAAH,CAAlD,GAA+D,GAAtE;AAA4E,KANrH,EAOSiB,IAPT,CAOc,OAPd,EAOuB,UAASN,CAAT,EAAY;AAAE,aAAOW,UAAU,CAACX,CAAC,CAAC2B,EAAH,CAAV,GAAmBhB,UAAU,CAACX,CAAC,CAAC0B,EAAH,CAA7B,GAAqC,CAA5C;AAAiD,KAPtF,EAQSpB,IART,CAQc,QARd,EAQwB,UAASN,CAAT,EAAY;AAAE,aAAO1B,aAAa,GAAG4C,UAAU,CAAClB,CAAC,CAACX,MAAH,CAAjC;AAA8C,KARpF,EASSmB,KATT,CASe,MATf,EASuB,SATvB,EAUSoB,EAVT,CAUY,WAVZ,EAUyBC,eAVzB,EAWSD,EAXT,CAWY,UAXZ,EAWwBE,gBAXxB,EAYSF,EAZT,CAYY,WAZZ,EAYyBG,eAZzB;AAaH,GA1CD;;AA4CA,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC1B,QAAIC,cAAc,GAAGC,IAAI,CAACC,YAAL,CAAkB,OAAlB,EAA2B;AAC5C5B,MAAAA,KAAK,EAAE,UADqC;AAE5C6B,MAAAA,QAAQ,EAAE;AAFkC,KAA3B,CAArB;AAIA,WAAOH,cAAc,CAACI,MAAf,CAAsBL,GAAtB,CAAP;AACH,GAND;;AAQA,QAAMM,OAAO,GAAIN,GAAD,IAAS;AACrB,WAAOO,MAAM,CAAEP,GAAG,GAAG,GAAR,CAAN,CAAmBQ,OAAnB,CAA2B,CAA3B,IAAgC,GAAvC;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrB,WAAOpF,EAAE,CAACqF,MAAH,CAAU,MAAMpE,WAAhB,CAAP;AACH,GAFD;;AAIA,QAAMqE,eAAe,GAAG,MAAM;AAC1B,WAAOtF,EAAE,CAACqF,MAAH,CAAU,MAAMlE,YAAhB,CAAP;AACH,GAFD;;AAIA,QAAMoE,aAAa,GAAG,MAAM;AACxB,WAAOvF,EAAE,CAACqF,MAAH,CAAU,MAAMjE,UAAhB,CAAP;AACH,GAFD;;AAIA,QAAMmD,eAAe,GAAIiB,CAAD,IAAO;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAN,IAAAA,UAAU,GAAGlC,KAAb,CAAmB,SAAnB,EAA8B,CAA9B;AACH,GAHD;;AAKA,QAAMuB,eAAe,GAAIe,CAAD,IAAO;AAC3B,UAAMG,MAAM,GAAG3F,EAAE,CAAC4F,OAAH,CAAWJ,CAAX,CAAf;AACA,UAAMK,OAAO,GAAGL,CAAC,CAACM,UAAF,CAAaC,QAA7B;AACA,UAAMC,OAAO,GAAG1D,eAAe,CAACuD,OAAD,CAA/B,CAH2B,CAK3B;;AACA,UAAMI,EAAE,GAAGb,UAAU,EAArB;AACA,UAAMc,WAAW,GAAGxB,YAAY,CAAC,CAAEsB,OAAO,CAACG,MAAR,CAAe,CAAf,CAAH,CAAZ,GACA,GADA,GACMzB,YAAY,CAAC,CAAEsB,OAAO,CAACG,MAAR,CAAe,CAAf,CAAH,CADtC;AAEA,UAAMC,aAAa,GAAG,MAAMnB,OAAO,CAACY,OAAO,CAAC9D,MAAR,GAAiB7B,KAAK,CAACyD,QAAN,CAAe5B,MAAjC,CAAb,GACA,aADtB;AAEA,UAAMsE,SAAS,GAAGH,WAAW,GAAGE,aAAhC;AACAd,IAAAA,eAAe,GAAGtC,IAAlB,CAAuB,MAAvB,EAA+BqD,SAA/B,EAZ2B,CAa3B;AAEA;;AACAJ,IAAAA,EAAE,CAAC/C,KAAH,CAAS,MAAT,EAAiByC,MAAM,CAAC,CAAD,CAAN,GAAY,IAA7B,EACGzC,KADH,CACS,KADT,EACgByC,MAAM,CAAC,CAAD,CAAN,GAAY,IAD5B;AAEH,GAlBD;;AAoBA,QAAMnB,gBAAgB,GAAG,MAAM;AAC3BiB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAN,IAAAA,UAAU,GAAGlC,KAAb,CAAmB,SAAnB,EAA8B,CAA9B;AACH,GAHD;;AAKApD,EAAAA,KAAK,CAACwG,SAAN,CAAgB,MAAM;AAElB,UAAMC,SAAS,GAAG,MAAMlG,KAAxB;AACA,UAAMoB,GAAG,GAAGzB,EAAE,CAACqF,MAAH,CAAUkB,SAAV,EACGxD,MADH,CACU,GADV,EAEGC,IAFH,CAEQ,WAFR,EAEqBlC,eAFrB,CAAZ;AAIA+B,IAAAA,WAAW,CAACpB,GAAD,CAAX;AACA2B,IAAAA,aAAa,CAAC3B,GAAD,CAAb;AACH,GATD,EASG,CAACvB,KAAD,CATH;AAWA,sBACI;AAAA,2BACI;AAAK,MAAA,EAAE,EAAEG,KAAT;AACI,MAAA,KAAK,EAAEO,UADX;AAEI,MAAA,MAAM,EAAEC,WAFZ;AAAA,6BAII;AACI,QAAA,KAAK,EAAE;AAAE2F,UAAAA,OAAO,EAAC;AAAV,SADX;AAEI,QAAA,KAAK,EAAEzF,YAFX;AAGI,QAAA,MAAM,EAAEC,aAHZ;AAII,QAAA,SAAS,EAAEF,eAJf;AAKI,QAAA,IAAI,EAAC;AALT;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GApNQb,a;;KAAAA,a;AAoNR;AAED,eAAeA,aAAf","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport * as d3 from \"d3\";\n\nfunction EndValueChart (props) {\n\n    const [binMetadataState, setBinMetadataState] = useState([]);\n\n    const svgID = 'endvaluechartsvg';\n    const perRunClass = 'perrunevdata';\n    const margin = { top: 40, right: 65, bottom: 40, left: 65 };\n    const totalWidth = 960;\n    const totalHeight = 300;\n    const marginTranslate = \"translate(\" + margin.left + \",\" + margin.top + \")\";\n    const boundedWidth = totalWidth - margin.left - margin.right;\n    const boundedHeight = totalHeight - margin.top - margin.bottom;\n    const ttBinWrapID = 'ttevwrap';\n    const ttBinBackID = 'ttevback';\n    const ttBinRangeID = 'ttevrange';\n    const ttBinPctID = 'ttevpct';\n    const tooltipWidth = 75;\n    const tooltipHeight = 75;\n    const thresholdValues = [0, 0.25, 0.5, 1, 3, 5, 10, 50];\n\n    const cleanupPrev = (svg) => {\n        const perRunSelect = '.' + perRunClass;\n        d3.selectAll(perRunSelect).remove();\n    }\n\n    const getXScaleForAxis = () => {\n        const numThresholds = thresholdValues.length;\n        var thresholdRange = [];\n        var thresholdInc = boundedWidth / (numThresholds + 1);\n\n        for (var i = 0; i <= thresholdValues.length; i++) {\n            thresholdRange[i] = i * thresholdInc;\n        }\n\n        return d3.scaleThreshold()\n                 .domain(thresholdValues)\n                 .range(thresholdRange);\n    }\n\n    const calcBinMetadata = (data) => {\n        const oneBinMetadata = {\n            'binData': data,\n            'extBin': d3.extent(data, (d) => d.adjEndCycleValue),\n            'extPctStartValue': d3.extent(data, (d) => d.pctOfStart),\n            'binCount': data.length,\n        }\n\n        return oneBinMetadata;\n    }\n\n    const prepTooltip = (svg) => {\n        // wrapper\n        // background\n        // text element\n        //  tspan for each line\n        //  x0, x1, % of start, % of results\n\n        const tooltipWrapper = svg.append('g')\n                                  .attr('id', ttBinWrapID)\n                                  .attr('display', 'none');\n        const tooltipBack = tooltipWrapper.append('rect')\n                                          .style('opacity', 0.70)\n                                          .attr('id', ttBinBackID)\n                                          .attr('width', tooltipWidth)\n                                          .attr('height', tooltipHeight)\n                                          .attr(\"pointer-events\", \"none\")\n                                          .attr(\"fill\", \"#e8e8e8\"); \n        const tooltipText = tooltipWrapper.append('g').append('text')\n                                          .attr(\"pointer-events\", \"none\")\n                                          .attr('font-weight', 900)\n                                          .attr('text-anchor', 'left');\n        tooltipText.append('tspan')\n                   .attr('id', ttBinRangeID)\n                   .attr('x', '5')\n                   .attr('y', '5')\n                   .attr('dy', '15px')\n                   .attr(\"pointer-events\", \"none\");\n        tooltipText.append('tspan')\n                   .attr('id', ttBinPctID)\n                   .attr('x', '5')\n                   .attr('y', '5')\n                   .attr('dy', '30px')\n                   .attr(\"pointer-events\", \"none\");\n                              \n}\n\n    const drawHistogram = (svg) => {\n        cleanupPrev(svg);\n\n        const xScaleBins = getXScaleForAxis();\n        const binFunc = d3.bin()\n                          .value(function(d) { return d.pctOfStart; })   \n                          .domain([thresholdValues[0], thresholdValues[thresholdValues.length - 1]])\n                          .thresholds(thresholdValues); \n        const bins = binFunc(props.metadata);\n        const yScaleBins = d3.scaleLinear()\n                             .domain([0, d3.max(bins, function(d) { return d.length; })])\n                             .range([boundedHeight, 0]);\n\n        var binsMeta = [];\n        for (var i = 0; i < bins.length; i++) {\n            binsMeta[i] = calcBinMetadata(bins[i]);\n        }\n\n        setBinMetadataState(binsMeta);\n\n        svg.append(\"g\")\n            .attr(\"class\", perRunClass)\n            .attr(\"transform\", \"translate(0,\" + boundedHeight + \")\")\n            .call(d3.axisBottom(xScaleBins));\n        svg.append(\"g\")\n           .attr(\"class\", perRunClass)\n           .call(d3.axisLeft(yScaleBins));\n\n           // draw the histogram bars \n        svg.selectAll(\"rect\")\n           .data(bins)\n           .enter()\n           .append(\"rect\")\n                .attr(\"class\", perRunClass)\n                .attr(\"x\", 1)\n                .attr(\"transform\", function(d) { return \"translate(\" + xScaleBins(d.x0) + \",\" + yScaleBins(d.length) + \")\"; })\n                .attr(\"width\", function(d) { return xScaleBins(d.x1) - xScaleBins(d.x0) -1 ; })\n                .attr(\"height\", function(d) { return boundedHeight - yScaleBins(d.length); })\n                .style(\"fill\", \"#69b3a2\")\n                .on(\"mouseover\", handleMouseOver)\n                .on(\"mouseout\", handleMouseLeave)                \n                .on('mousemove', handleMouseMove);\n    }\n\n    const makeCurrency = (num) => {\n        let dollarUSLocale = Intl.NumberFormat('en-US', {\n            style: \"currency\",\n            currency: \"USD\",\n        });\n        return dollarUSLocale.format(num);\n    }\n\n    const makePct = (num) => {\n        return Number( num * 100).toFixed(2) + '%';\n    }\n\n    const getTooltip = () => {\n        return d3.select('#' + ttBinWrapID);\n    }\n\n    const getBinRangeSpan = () => {\n        return d3.select('#' + ttBinRangeID);\n    }\n\n    const getBinPctSpan = () => {\n        return d3.select('#' + ttBinPctID);\n    }\n    \n    const handleMouseOver = (e) => {\n        console.log('over');\n        getTooltip().style('opacity', 1);\n    }\n\n    const handleMouseMove = (e) => {\n        const coords = d3.pointer(e);\n        const binData = e.srcElement.__data__;\n        const binMeta = calcBinMetadata(binData);\n        \n        // set the tt content\n        const tt = getTooltip();\n        const rangeString = makeCurrency(+(binMeta.extBin[0])) + \n                            '-' + makeCurrency(+(binMeta.extBin[1]));\n        const binSizeString = '(' + makePct(binData.length / props.metadata.length) +\n                              ' of cycles)';\n        const ttContent = rangeString + binSizeString;\n        getBinRangeSpan().attr('text', ttContent);\n        // console.log('move : ' + binData[0].adjEndCycleValue + ' ' + ttContent);\n\n        // place the tt\n        tt.style('left', coords[0] + 'px')   \n          .style('top', coords[1] + 'px');\n    };\n    \n    const handleMouseLeave = () => {\n        console.log('leave');\n        getTooltip().style('opacity', 0);\n    };\n\n    React.useEffect(() => {\n\n        const svgSelect = '#' + svgID;\n        const svg = d3.select(svgSelect)\n                      .append(\"g\")\n                      .attr(\"transform\", marginTranslate);\n\n        prepTooltip(svg);\n        drawHistogram(svg);\n    }, [props] );\n\n    return (\n        <div>\n            <svg id={svgID}  \n                width={totalWidth}\n                height={totalHeight} \n             >\n                <rect\n                    style={{ opacity:0 }}\n                    width={boundedWidth}\n                    height={boundedHeight}\n                    transform={marginTranslate}\n                    fill='LightGrey'\n                 >\n                </rect>\n            </svg>\n        </div>\n    );\n};\n\nexport default EndValueChart;\n"]},"metadata":{},"sourceType":"module"}