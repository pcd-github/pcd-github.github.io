{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\"; // d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HistoricalChart() {\n  _s();\n\n  const [activeIndex, setActiveIndex] = React.useState(null);\n  const [histData, setData] = React.useState([]);\n\n  const getX = (dataIn, widthIn) => {\n    // BUG - use extent to avoid two trips thru the data\n    var xMin = d3.min(dataIn, d => d.year);\n    var xMax = d3.max(dataIn, d => d.year);\n    return d3.scaleLinear().domain(xMin, xMax).range([0, widthIn]);\n  };\n\n  const getY = (dataIn, heightIn) => {\n    // BUG - use extent to avoid two trips thru the data\n    var yMin = d3.min(dataIn, d => d.equity);\n    var yMax = d3.max(dataIn, d => d.equity);\n    return d3.scaleLinear().domain(yMin, yMax).range([heightIn, 0]);\n  };\n\n  const setupAxes = (svg, x, y, heightIn) => {\n    var pctFormat = d3.format(\"4.2%\");\n    var yearFormat = d3.format(\"d\");\n    var xGen = d3.axisBottom(x).tickFormat(yearFormat);\n    var yGen = d3.axisLeft(y).tickFormat(pctFormat);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + heightIn + \")\").call(xGen);\n    svg.append(\"g\").call(yGen);\n  };\n  /*\n  const handleMouseMove = (e) => {\n      console.log(\"handleMouseMove\");\n      const bisect = d3.bisector((d) => d.date).left,\n          x0 = getX.invert(d3.pointer(e, this)[0]),\n          index = bisect(histData, x0, 1);\n      setActiveIndex(index);\n  };\n  \n  const handleMouseLeave = () => {\n      console.log(\"handleMouseMove\");\n      setActiveIndex(null);\n  };\n  */\n\n\n  React.useEffect(() => {\n    const margin = {\n      top: 40,\n      right: 80,\n      bottom: 60,\n      left: 50\n    },\n          width = 960 - margin.left - margin.right,\n          height = 600 - margin.top - margin.bottom;\n    const equityColor = \"OrangeRed\";\n    var svg = d3.select(\"#d3target\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    d3.csv(hist, function (d) {\n      return {\n        year: d.year,\n        inflation: +d.inflation,\n        equity: +d.equity,\n        bond: +d.bond\n      };\n    }).then(function (dataset) {\n      setData(dataset);\n      var x = getX(dataset, width);\n      var y = getY(dataset, height); // xy axes\n\n      setupAxes(svg, x, y, height); // Add the equity line\n\n      svg.append(\"path\").datum(dataset).attr(\"fill\", \"none\").attr(\"stroke\", equityColor).attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n        return x(d.year);\n      }).y(function (d) {\n        return y(d.equity);\n      }));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"d3target\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HistoricalChart, \"w7aL4YtEYJwAmzJRcT/B00Op1P8=\");\n\n_c = HistoricalChart;\nexport default HistoricalChart;\n/*\n                \n                <g className=\"axis xAxis\"\n                    ref={getXAxis}\n                    transform={`translate(0,${height})`} />\n                <g className=\"axis\" ref={getYAxis} />    \n                \n                              onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave} \n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoricalChart\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js"],"names":["React","d3","hist","HistoricalChart","activeIndex","setActiveIndex","useState","histData","setData","getX","dataIn","widthIn","xMin","min","d","year","xMax","max","scaleLinear","domain","range","getY","heightIn","yMin","equity","yMax","setupAxes","svg","x","y","pctFormat","format","yearFormat","xGen","axisBottom","tickFormat","yGen","axisLeft","append","attr","call","useEffect","margin","top","right","bottom","left","width","height","equityColor","select","csv","inflation","bond","then","dataset","datum","line"],"mappings":"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","sourcesContent":["\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\";\n\n// d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nfunction HistoricalChart () {\n    const [activeIndex, setActiveIndex] = React.useState(null);\n    const [histData, setData] = React.useState([]);\n\n    const getX = (dataIn, widthIn) => { \n        // BUG - use extent to avoid two trips thru the data\n        var xMin = d3.min(dataIn, (d) => d.year);\n        var xMax = d3.max(dataIn, (d) => d.year);\n        return d3.scaleLinear()\n                 .domain(xMin, xMax)\n                 .range([ 0, widthIn ]);\n    }\n\n    const getY = (dataIn, heightIn) => {\n        // BUG - use extent to avoid two trips thru the data\n        var yMin = d3.min(dataIn, (d) => d.equity);\n        var yMax = d3.max(dataIn, (d) => d.equity);\n        return d3.scaleLinear()\n                 .domain(yMin, yMax)\n                 .range([ heightIn, 0 ]);\n    }\n\n    const setupAxes = (svg, x, y, heightIn) => {\n        var pctFormat = d3.format(\"4.2%\");\n        var yearFormat = d3.format(\"d\");\n        var xGen = d3.axisBottom(x)\n                     .tickFormat(yearFormat);\n        var yGen = d3.axisLeft(y)\n                     .tickFormat(pctFormat);    \n\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + heightIn + \")\")\n            .call(xGen);\n\n        svg.append(\"g\")\n           .call(yGen);\n    };\n\n    /*\n    const handleMouseMove = (e) => {\n        console.log(\"handleMouseMove\");\n        const bisect = d3.bisector((d) => d.date).left,\n            x0 = getX.invert(d3.pointer(e, this)[0]),\n            index = bisect(histData, x0, 1);\n        setActiveIndex(index);\n    };\n    \n    const handleMouseLeave = () => {\n        console.log(\"handleMouseMove\");\n        setActiveIndex(null);\n    };\n    */\n\n    React.useEffect(() => {\n        const margin = { top: 40, right: 80, bottom: 60, left: 50 },\n              width = 960 - margin.left - margin.right,\n              height = 600 - margin.top - margin.bottom;\n        const equityColor = \"OrangeRed\";\n\n        var svg = d3.select(\"#d3target\")\n                    .append(\"svg\")\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom)\n                    .append(\"g\")\n                    .attr(\"transform\",\n                          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        d3.csv(hist,function(d) {\n            return { year: d.year, inflation: +d.inflation, equity: +d.equity, bond: +d.bond };\n        })\n        .then (function(dataset) {\n            setData(dataset);\n            var x = getX(dataset, width);\n            var y = getY(dataset, height);\n\n            // xy axes\n            setupAxes(svg, x, y, height);\n\n            // Add the equity line\n            svg.append(\"path\")\n               .datum(dataset)\n               .attr(\"fill\", \"none\")\n               .attr(\"stroke\", equityColor)\n               .attr(\"stroke-width\", 1.5)\n               .attr(\"d\", d3.line()\n                            .x(function(d) { return x(d.year) })\n                            .y(function(d) { return y(d.equity) })\n                );\n          \n        })\n    }, []);\n\n    return (\n        <div id=\"d3target\">\n        </div>\n    );\n}\n\nexport default HistoricalChart;\n/*\n                \n                <g className=\"axis xAxis\"\n                    ref={getXAxis}\n                    transform={`translate(0,${height})`} />\n                <g className=\"axis\" ref={getYAxis} />    \n                \n                              onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave} \n*/"]},"metadata":{},"sourceType":"module"}