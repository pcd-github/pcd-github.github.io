{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/chart.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { Stack } from \"@mui/material\";\nimport { Card } from \"@mui/material\";\nimport { CardContent } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst histData = [{\n  year: 1871,\n  cpi: 12.46,\n  dividends: 0.05855856,\n  bonds: 0.0532,\n  gold: 0.02656043,\n  equity: 0.09459459\n}, {\n  year: 1872,\n  cpi: 12.65,\n  dividends: 0.05417695,\n  bonds: 0.0536,\n  gold: -0.01940492,\n  equity: 0.05144033\n}, {\n  year: 1873,\n  cpi: 12.94,\n  dividends: 0.05919765,\n  bonds: 0.0558,\n  gold: 0.01539138,\n  equity: -0.08806262\n}, {\n  year: 1874,\n  cpi: 12.37,\n  dividends: 0.07081545,\n  bonds: 0.0547,\n  gold: 0.01948896,\n  equity: -0.02575107\n}, {\n  year: 1875,\n  cpi: 11.51,\n  dividends: 0.07213656,\n  bonds: 0.0507,\n  gold: -0.0526763,\n  equity: -0.01762115\n}, {\n  year: 1876,\n  cpi: 10.85,\n  dividends: 0.06726457,\n  bonds: 0.0459,\n  gold: -0.0470852,\n  equity: -0.20403587\n}, {\n  year: 1877,\n  cpi: 10.94,\n  dividends: 0.08191549,\n  bonds: 0.0445,\n  gold: -0.02635294,\n  equity: -0.08450704\n}, {\n  year: 1878,\n  cpi: 9.23,\n  dividends: 0.05821538,\n  bonds: 0.0434,\n  gold: -0.00096665,\n  equity: 0.10153846\n}, {\n  year: 1879,\n  cpi: 8.28,\n  dividends: 0.05075419,\n  bonds: 0.0422,\n  gold: 0,\n  equity: 0.4273743\n}, {\n  year: 1880,\n  cpi: 9.99,\n  dividends: 0.04011742,\n  bonds: 0.0402,\n  gold: 0,\n  equity: 0.21135029\n}, {\n  year: 1881,\n  cpi: 9.42,\n  dividends: 0.04281099,\n  bonds: 0.037,\n  gold: 0,\n  equity: -0.04361874,\n  cape: 18.45\n}, {\n  year: 1882,\n  cpi: 10.18,\n  dividends: 0.05405405,\n  bonds: 0.0362,\n  gold: 0,\n  equity: -0.01858108,\n  cape: 15.66\n}, {\n  year: 1883,\n  cpi: 9.99,\n  dividends: 0.05521515,\n  bonds: 0.0363,\n  gold: 0,\n  equity: -0.10843373,\n  cape: 15.25\n}, {\n  year: 1884,\n  cpi: 9.23,\n  dividends: 0.06337838,\n  bonds: 0.0362,\n  gold: 0,\n  equity: -0.18146718,\n  cape: 14.41\n}, {\n  year: 1885,\n  cpi: 8.28,\n  dividends: 0.07174528,\n  bonds: 0.0352,\n  gold: 0,\n  equity: 0.22641509,\n  cape: 13.1\n}, {\n  year: 1886,\n  cpi: 7.99,\n  dividends: 0.04582692,\n  bonds: 0.0337,\n  gold: 0,\n  equity: 0.07307692,\n  cape: 16.67\n}, {\n  year: 1887,\n  cpi: 7.99,\n  dividends: 0.03987455,\n  bonds: 0.0352,\n  gold: 0,\n  equity: -0.0483871,\n  cape: 17.48\n}, {\n  year: 1888,\n  cpi: 8.37,\n  dividends: 0.04676083,\n  bonds: 0.0367,\n  gold: 0,\n  equity: -0.01318267,\n  cape: 15.33\n}, {\n  year: 1889,\n  cpi: 7.99,\n  dividends: 0.04374046,\n  bonds: 0.0345,\n  gold: 0,\n  equity: 0.02671756,\n  cape: 15.77\n}, {\n  year: 1890,\n  cpi: 7.61,\n  dividends: 0.04089219,\n  bonds: 0.0342,\n  gold: 0,\n  equity: -0.10037175,\n  cape: 17.18\n}, {\n  year: 1891,\n  cpi: 7.8,\n  dividends: 0.04545455,\n  bonds: 0.0362,\n  gold: 0,\n  equity: 0.13842975,\n  cape: 15.4\n}, {\n  year: 1892,\n  cpi: 7.33,\n  dividends: 0.04023593,\n  bonds: 0.036,\n  gold: 0,\n  equity: 0.01814882,\n  cape: 18.96\n}, {\n  year: 1893,\n  cpi: 7.9,\n  dividends: 0.04292335,\n  bonds: 0.0375,\n  gold: 0,\n  equity: -0.22994652,\n  cape: 17.6\n}, {\n  year: 1894,\n  cpi: 6.85,\n  dividends: 0.05710648,\n  bonds: 0.037,\n  gold: 0,\n  equity: -0.0162037,\n  cape: 15.7\n}, {\n  year: 1895,\n  cpi: 6.57,\n  dividends: 0.04901176,\n  bonds: 0.0346,\n  gold: 0,\n  equity: 0.00470588,\n  cape: 16.47\n}, {\n  year: 1896,\n  cpi: 6.66,\n  dividends: 0.04430913,\n  bonds: 0.036,\n  gold: 0,\n  equity: -0.0117096,\n  cape: 16.53\n}, {\n  year: 1897,\n  cpi: 6.47,\n  dividends: 0.04265403,\n  bonds: 0.034,\n  gold: 0,\n  equity: 0.1563981,\n  cape: 16.99\n}, {\n  year: 1898,\n  cpi: 6.66,\n  dividends: 0.03723361,\n  bonds: 0.0335,\n  gold: 0,\n  equity: 0.24590164,\n  cape: 19.21\n}, {\n  year: 1899,\n  cpi: 6.76,\n  dividends: 0.03302632,\n  bonds: 0.031,\n  gold: 0,\n  equity: 0.00328947,\n  cape: 22.87\n}, {\n  year: 1900,\n  cpi: 7.9,\n  dividends: 0.03565574,\n  bonds: 0.0315,\n  gold: 0,\n  equity: 0.15901639,\n  cape: 18.63\n}, {\n  year: 1901,\n  cpi: 7.71,\n  dividends: 0.04267327,\n  bonds: 0.031,\n  gold: 0,\n  equity: 0.14851485,\n  cape: 20.94\n}, {\n  year: 1902,\n  cpi: 7.9,\n  dividends: 0.03950739,\n  bonds: 0.0318,\n  gold: 0,\n  equity: 0.04187192,\n  cape: 22.3\n}, {\n  year: 1903,\n  cpi: 8.66,\n  dividends: 0.03920804,\n  bonds: 0.033,\n  gold: 0,\n  equity: -0.21040189,\n  cape: 20.29\n}, {\n  year: 1904,\n  cpi: 8.28,\n  dividends: 0.0519012,\n  bonds: 0.034,\n  gold: 0,\n  equity: 0.26197605,\n  cape: 15.84\n}, {\n  year: 1905,\n  cpi: 8.47,\n  dividends: 0.03697509,\n  bonds: 0.0348,\n  gold: 0,\n  equity: 0.17081851,\n  cape: 18.44\n}, {\n  year: 1906,\n  cpi: 8.47,\n  dividends: 0.03402229,\n  bonds: 0.0343,\n  gold: 0,\n  equity: -0.03140831,\n  cape: 20.1\n}, {\n  year: 1907,\n  cpi: 8.85,\n  dividends: 0.04218619,\n  bonds: 0.0367,\n  gold: 0,\n  equity: -0.2834728,\n  cape: 17.19\n}, {\n  year: 1908,\n  cpi: 8.66,\n  dividends: 0.06375182,\n  bonds: 0.0387,\n  gold: 0,\n  equity: 0.32262774,\n  cape: 11.89\n}, {\n  year: 1909,\n  cpi: 8.94,\n  dividends: 0.04451435,\n  bonds: 0.0376,\n  gold: 0,\n  equity: 0.11258278,\n  cape: 14.75\n}, {\n  year: 1910,\n  cpi: 9.9,\n  dividends: 0.04389881,\n  bonds: 0.0391,\n  gold: 0,\n  equity: -0.08035714,\n  cape: 14.52\n}, {\n  year: 1911,\n  cpi: 9.23,\n  dividends: 0.05070119,\n  bonds: 0.0398,\n  gold: 0,\n  equity: -0.01618123,\n  cape: 14.02\n}, {\n  year: 1912,\n  cpi: 9.13,\n  dividends: 0.05162281,\n  bonds: 0.0401,\n  gold: 0,\n  equity: 0.01973684,\n  cape: 13.78\n}, {\n  year: 1913,\n  cpi: 9.8,\n  dividends: 0.0516129,\n  bonds: 0.0445,\n  gold: 0,\n  equity: -0.1,\n  cape: 13.13\n}, {\n  year: 1914,\n  cpi: 10,\n  dividends: 0.0567503,\n  bonds: 0.0416,\n  gold: 0,\n  equity: -0.10633214,\n  cape: 11.62\n}, {\n  year: 1915,\n  cpi: 10.1,\n  dividends: 0.05625668,\n  bonds: 0.0424,\n  gold: 0,\n  equity: 0.2473262,\n  cape: 10.34\n}, {\n  year: 1916,\n  cpi: 10.4,\n  dividends: 0.04724544,\n  bonds: 0.0405,\n  gold: 0,\n  equity: 0.02572347,\n  cape: 12.53\n}, {\n  year: 1917,\n  cpi: 11.7,\n  dividends: 0.05964472,\n  bonds: 0.0423,\n  gold: 0,\n  equity: -0.24660397,\n  cape: 10.98\n}, {\n  year: 1918,\n  cpi: 14,\n  dividends: 0.09431345,\n  bonds: 0.0457,\n  gold: 0,\n  equity: 0.0887656,\n  cape: 6.63\n}, {\n  year: 1919,\n  cpi: 16.5,\n  dividends: 0.07219108,\n  bonds: 0.045,\n  gold: 0,\n  equity: 0.12484076,\n  cape: 6.09\n}, {\n  year: 1920,\n  cpi: 19.3,\n  dividends: 0.05983012,\n  bonds: 0.0497,\n  gold: 0,\n  equity: -0.19479049,\n  cape: 5.99\n}, {\n  year: 1921,\n  cpi: 19,\n  dividends: 0.07113924,\n  bonds: 0.0509,\n  gold: 0,\n  equity: 0.02672293,\n  cape: 5.12\n}, {\n  year: 1922,\n  cpi: 16.9,\n  dividends: 0.06358904,\n  bonds: 0.043,\n  gold: 0,\n  equity: 0.21917808,\n  cape: 6.28\n}, {\n  year: 1923,\n  cpi: 16.8,\n  dividends: 0.05749438,\n  bonds: 0.0436,\n  gold: 0,\n  equity: -0.00786517,\n  cape: 8.15\n}, {\n  year: 1924,\n  cpi: 17.3,\n  dividends: 0.06021518,\n  bonds: 0.0406,\n  gold: 0,\n  equity: 0.198188,\n  cape: 8.07\n}, {\n  year: 1925,\n  cpi: 17.3,\n  dividends: 0.05238185,\n  bonds: 0.0386,\n  gold: 0,\n  equity: 0.19565217,\n  cape: 9.69\n}, {\n  year: 1926,\n  cpi: 17.9,\n  dividends: 0.04802372,\n  bonds: 0.0368,\n  gold: 0,\n  equity: 0.05928854,\n  cape: 11.33\n}, {\n  year: 1927,\n  cpi: 17.5,\n  dividends: 0.05199254,\n  bonds: 0.0334,\n  gold: 0,\n  equity: 0.30820896,\n  cape: 13.18\n}, {\n  year: 1928,\n  cpi: 17.3,\n  dividends: 0.0443069,\n  bonds: 0.0333,\n  gold: 0,\n  equity: 0.41814033,\n  cape: 18.79\n}, {\n  year: 1929,\n  cpi: 17.1,\n  dividends: 0.03459372,\n  bonds: 0.036,\n  gold: 0,\n  equity: -0.12670957,\n  cape: 27.06\n}, {\n  year: 1930,\n  cpi: 17.1,\n  dividends: 0.04471672,\n  bonds: 0.0329,\n  gold: 0,\n  equity: -0.26393367,\n  cape: 22.3\n}, {\n  year: 1931,\n  cpi: 15.9,\n  dividends: 0.06049437,\n  bonds: 0.0334,\n  gold: 0,\n  equity: -0.48060075,\n  cape: 16.7\n}, {\n  year: 1932,\n  cpi: 14.3,\n  dividends: 0.09557831,\n  bonds: 0.0368,\n  gold: 0.56361877,\n  equity: -0.14578313,\n  cape: 9.31\n}, {\n  year: 1933,\n  cpi: 12.9,\n  dividends: 0.06981664,\n  bonds: 0.0331,\n  gold: 0.08292079,\n  equity: 0.48660085,\n  cape: 8.73\n}, {\n  year: 1934,\n  cpi: 13.2,\n  dividends: 0.04182163,\n  bonds: 0.0312,\n  gold: 0,\n  equity: -0.12144213,\n  cape: 13.02\n}, {\n  year: 1935,\n  cpi: 13.6,\n  dividends: 0.04859611,\n  bonds: 0.0279,\n  gold: 0,\n  equity: 0.48596112,\n  cape: 11.49\n}, {\n  year: 1936,\n  cpi: 13.8,\n  dividends: 0.03488372,\n  bonds: 0.0265,\n  gold: 0,\n  equity: 0.27834302,\n  cape: 17.08\n}, {\n  year: 1937,\n  cpi: 14.1,\n  dividends: 0.04150085,\n  bonds: 0.0268,\n  gold: 0,\n  equity: -0.35702103,\n  cape: 21.61\n}, {\n  year: 1938,\n  cpi: 14.2,\n  dividends: 0.07014439,\n  bonds: 0.0256,\n  gold: 0,\n  equity: 0.10521662,\n  cape: 13.51\n}, {\n  year: 1939,\n  cpi: 14,\n  dividends: 0.04106664,\n  bonds: 0.0236,\n  gold: -0.01428571,\n  equity: -0.016,\n  cape: 15.6\n}, {\n  year: 1940,\n  cpi: 13.9,\n  dividends: 0.05067748,\n  bonds: 0.0221,\n  gold: 0.02898551,\n  equity: -0.14227642,\n  cape: 16.37\n}, {\n  year: 1941,\n  cpi: 14.1,\n  dividends: 0.06382303,\n  bonds: 0.0195,\n  gold: 0,\n  equity: -0.1535545,\n  cape: 13.9\n}, {\n  year: 1942,\n  cpi: 15.7,\n  dividends: 0.07876069,\n  bonds: 0.0246,\n  gold: 0.02816901,\n  equity: 0.12989922,\n  cape: 10.1\n}, {\n  year: 1943,\n  cpi: 16.9,\n  dividends: 0.05847374,\n  bonds: 0.0247,\n  gold: -0.00684932,\n  equity: 0.17443013,\n  cape: 10.15\n}, {\n  year: 1944,\n  cpi: 17.4,\n  dividends: 0.05175806,\n  bonds: 0.0248,\n  gold: 0.02758621,\n  equity: 0.13839662,\n  cape: 11.05\n}, {\n  year: 1945,\n  cpi: 17.8,\n  dividends: 0.04768962,\n  bonds: 0.0237,\n  gold: 0.02684564,\n  equity: 0.3358043,\n  cape: 11.96\n}, {\n  year: 1946,\n  cpi: 18.2,\n  dividends: 0.03699595,\n  bonds: 0.0219,\n  gold: 0.12418301,\n  equity: -0.15593785,\n  cape: 15.62\n}, {\n  year: 1947,\n  cpi: 21.5,\n  dividends: 0.04689895,\n  bonds: 0.0225,\n  gold: -0.02325581,\n  equity: -0.02498356,\n  cape: 11.47\n}, {\n  year: 1948,\n  cpi: 23.7,\n  dividends: 0.05686669,\n  bonds: 0.0244,\n  gold: -0.03571429,\n  equity: 0.03573837,\n  cape: 10.42\n}, {\n  year: 1949,\n  cpi: 24,\n  dividends: 0.06163197,\n  bonds: 0.0231,\n  gold: -0.00617284,\n  equity: 0.09895833,\n  cape: 10.25\n}, {\n  year: 1950,\n  cpi: 23.5,\n  dividends: 0.06812796,\n  bonds: 0.0232,\n  gold: -0.00621118,\n  equity: 0.25651659,\n  cape: 10.75\n}, {\n  year: 1951,\n  cpi: 25.4,\n  dividends: 0.07009288,\n  bonds: 0.0257,\n  gold: -0.0325,\n  equity: 0.14049976,\n  cape: 11.9\n}, {\n  year: 1952,\n  cpi: 26.5,\n  dividends: 0.05842621,\n  bonds: 0.0268,\n  gold: -0.08268734,\n  equity: 0.0822654,\n  cape: 12.53\n}, {\n  year: 1953,\n  cpi: 26.6,\n  dividends: 0.05385791,\n  bonds: 0.0283,\n  gold: -0.00704225,\n  equity: -0.02750191,\n  cape: 13.01\n}, {\n  year: 1954,\n  cpi: 26.9,\n  dividends: 0.05721406,\n  bonds: 0.0248,\n  gold: -0.00283688,\n  equity: 0.3982718,\n  cape: 12\n}, {\n  year: 1955,\n  cpi: 26.7,\n  dividends: 0.04344579,\n  bonds: 0.0261,\n  gold: 0.00142248,\n  equity: 0.24016854,\n  cape: 15.99\n}, {\n  year: 1956,\n  cpi: 26.8,\n  dividends: 0.03782559,\n  bonds: 0.029,\n  gold: 0.00142046,\n  equity: 0.02899207,\n  cape: 18.29\n}, {\n  year: 1957,\n  cpi: 27.6,\n  dividends: 0.03822738,\n  bonds: 0.0346,\n  gold: 0,\n  equity: -0.09487123,\n  cape: 16.72\n}, {\n  year: 1958,\n  cpi: 28.6,\n  dividends: 0.04336892,\n  bonds: 0.0309,\n  gold: 0,\n  equity: 0.35262646,\n  cape: 13.79\n}, {\n  year: 1959,\n  cpi: 29,\n  dividends: 0.03158342,\n  bonds: 0.0402,\n  gold: 0.03546099,\n  equity: 0.04332974,\n  cape: 17.98\n}, {\n  year: 1960,\n  cpi: 29.3,\n  dividends: 0.03216733,\n  bonds: 0.0472,\n  gold: -0.02739726,\n  equity: 0.02912287,\n  cape: 18.34\n}, {\n  year: 1961,\n  cpi: 29.8,\n  dividends: 0.03259662,\n  bonds: 0.0384,\n  gold: -0.00422535,\n  equity: 0.15656397,\n  cape: 18.47\n}, {\n  year: 1962,\n  cpi: 30,\n  dividends: 0.02934226,\n  bonds: 0.0408,\n  gold: -0.00282885,\n  equity: -0.05805704,\n  cape: 21.2\n}, {\n  year: 1963,\n  cpi: 30.4,\n  dividends: 0.03284153,\n  bonds: 0.0383,\n  gold: 0.00283688,\n  equity: 0.17506917,\n  cape: 19.26\n}, {\n  year: 1964,\n  cpi: 30.9,\n  dividends: 0.03004147,\n  bonds: 0.0417,\n  gold: 0.00424328,\n  equity: 0.1264879,\n  cape: 21.63\n}, {\n  year: 1965,\n  cpi: 31.2,\n  dividends: 0.02922283,\n  bonds: 0.0419,\n  gold: -0.0028169,\n  equity: 0.08360427,\n  cape: 23.27\n}, {\n  year: 1966,\n  cpi: 31.8,\n  dividends: 0.02936134,\n  bonds: 0.0461,\n  gold: 0.00282486,\n  equity: -0.09504929,\n  cape: 24.06\n}, {\n  year: 1967,\n  cpi: 32.9,\n  dividends: 0.03410302,\n  bonds: 0.0458,\n  gold: 0.22535211,\n  equity: 0.12539964,\n  cape: 20.43\n}, {\n  year: 1968,\n  cpi: 34.1,\n  dividends: 0.03082912,\n  bonds: 0.0553,\n  gold: -0.05747126,\n  equity: 0.07323232,\n  cape: 21.51\n}, {\n  year: 1969,\n  cpi: 35.6,\n  dividends: 0.03019608,\n  bonds: 0.0604,\n  gold: -0.05121951,\n  equity: -0.11460784,\n  cape: 21.19\n}, {\n  year: 1970,\n  cpi: 37.8,\n  dividends: 0.03502746,\n  bonds: 0.0779,\n  gold: 0.14652956,\n  equity: 0.03521205,\n  cape: 17.09\n}, {\n  year: 1971,\n  cpi: 39.8,\n  dividends: 0.03347952,\n  bonds: 0.0624,\n  gold: 0.43139014,\n  equity: 0.10493101,\n  cape: 16.46\n}, {\n  year: 1972,\n  cpi: 41.1,\n  dividends: 0.02971926,\n  bonds: 0.0595,\n  gold: 0.6679198,\n  equity: 0.14617619,\n  cape: 17.26\n}, {\n  year: 1973,\n  cpi: 42.6,\n  dividends: 0.02666106,\n  bonds: 0.0646,\n  gold: 0.72586401,\n  equity: -0.18826014,\n  cape: 18.71\n}, {\n  year: 1974,\n  cpi: 46.6,\n  dividends: 0.03537613,\n  bonds: 0.0699,\n  gold: -0.24204168,\n  equity: -0.24503173,\n  cape: 13.53\n}, {\n  year: 1975,\n  cpi: 52.1,\n  dividends: 0.04993564,\n  bonds: 0.075,\n  gold: -0.03962955,\n  equity: 0.33489526,\n  cape: 8.92\n}, {\n  year: 1976,\n  cpi: 55.6,\n  dividends: 0.03802736,\n  bonds: 0.0774,\n  gold: 0.2043059,\n  equity: 0.0716498,\n  cape: 11.19\n}, {\n  year: 1977,\n  cpi: 58.5,\n  dividends: 0.03946696,\n  bonds: 0.0721,\n  gold: 0.29174426,\n  equity: -0.1305395,\n  cape: 11.44\n}, {\n  year: 1978,\n  cpi: 62.5,\n  dividends: 0.05222526,\n  bonds: 0.0796,\n  gold: 0.99999999,\n  equity: 0.10481994,\n  cape: 9.24\n}, {\n  year: 1979,\n  cpi: 68.3,\n  dividends: 0.05128202,\n  bonds: 0.091,\n  gold: 0.29607843,\n  equity: 0.11222545,\n  cape: 9.26\n}, {\n  year: 1980,\n  cpi: 77.8,\n  dividends: 0.05139766,\n  bonds: 0.108,\n  gold: -0.32761809,\n  equity: 0.19927863,\n  cape: 8.85\n}, {\n  year: 1981,\n  cpi: 87,\n  dividends: 0.04661654,\n  bonds: 0.1257,\n  gold: 0.1175,\n  equity: -0.11804511,\n  cape: 9.26\n}, {\n  year: 1982,\n  cpi: 94.3,\n  dividends: 0.05677749,\n  bonds: 0.1459,\n  gold: -0.14988814,\n  equity: 0.23017903,\n  cape: 7.39\n}, {\n  year: 1983,\n  cpi: 97.8,\n  dividends: 0.04770152,\n  bonds: 0.1046,\n  gold: -0.18947368,\n  equity: 0.15315315,\n  cape: 8.76\n}, {\n  year: 1984,\n  cpi: 101.9,\n  dividends: 0.04278846,\n  bonds: 0.1167,\n  gold: 0.06168831,\n  equity: 0.03125,\n  cape: 9.89\n}, {\n  year: 1985,\n  cpi: 105.5,\n  dividends: 0.04413362,\n  bonds: 0.1138,\n  gold: 0.19541284,\n  equity: 0.21328671,\n  cape: 10\n}, {\n  year: 1986,\n  cpi: 109.6,\n  dividends: 0.03813641,\n  bonds: 0.0919,\n  gold: 0.24456383,\n  equity: 0.27041306,\n  cape: 11.72\n}, {\n  year: 1987,\n  cpi: 111.2,\n  dividends: 0.03137996,\n  bonds: 0.0708,\n  gold: -0.15693731,\n  equity: -0.05293006,\n  cape: 14.92\n}, {\n  year: 1988,\n  cpi: 115.7,\n  dividends: 0.03535597,\n  bonds: 0.0867,\n  gold: -0.02230891,\n  equity: 0.13932136,\n  cape: 13.9\n}, {\n  year: 1989,\n  cpi: 121.1,\n  dividends: 0.03438448,\n  bonds: 0.0909,\n  gold: -0.03690773,\n  equity: 0.19120533,\n  cape: 15.09\n}, {\n  year: 1990,\n  cpi: 127.4,\n  dividends: 0.0327676,\n  bonds: 0.0821,\n  gold: -0.08557742,\n  equity: -0.04259199,\n  cape: 17.05\n}, {\n  year: 1991,\n  cpi: 134.6,\n  dividends: 0.03719531,\n  bonds: 0.0809,\n  gold: -0.05705791,\n  equity: 0.27831884,\n  cape: 15.61\n}, {\n  year: 1992,\n  cpi: 138.1,\n  dividends: 0.02941742,\n  bonds: 0.0703,\n  gold: 0.17642643,\n  equity: 0.0460248,\n  cape: 19.77\n}, {\n  year: 1993,\n  cpi: 142.6,\n  dividends: 0.02852124,\n  bonds: 0.066,\n  gold: -0.02169751,\n  equity: 0.08675873,\n  cape: 20.32\n}, {\n  year: 1994,\n  cpi: 146.2,\n  dividends: 0.0266883,\n  bonds: 0.0575,\n  gold: 0.00978474,\n  equity: -0.01636398,\n  cape: 21.41\n}, {\n  year: 1995,\n  cpi: 150.3,\n  dividends: 0.02832886,\n  bonds: 0.0778,\n  gold: -0.04651163,\n  equity: 0.32062332,\n  cape: 20.22\n}, {\n  year: 1996,\n  cpi: 154.4,\n  dividends: 0.02261206,\n  bonds: 0.0565,\n  gold: -0.22208672,\n  equity: 0.24706227,\n  cape: 24.76\n}, {\n  year: 1997,\n  cpi: 159.1,\n  dividends: 0.01951567,\n  bonds: 0.0658,\n  gold: 0.00574813,\n  equity: 0.25728903,\n  cape: 28.33\n}, {\n  year: 1998,\n  cpi: 161.6,\n  dividends: 0.01614142,\n  bonds: 0.0554,\n  gold: 0.0053689,\n  equity: 0.29626516,\n  cape: 32.86\n}, {\n  year: 1999,\n  cpi: 164.3,\n  dividends: 0.0130395,\n  bonds: 0.0472,\n  gold: -0.06063738,\n  equity: 0.14159533,\n  cape: 40.57\n}, {\n  year: 2000,\n  cpi: 168.8,\n  dividends: 0.0116256,\n  bonds: 0.0666,\n  gold: 0.01412067,\n  equity: -0.0631037,\n  cape: 43.77\n}, {\n  year: 2001,\n  cpi: 175.1,\n  dividends: 0.01210665,\n  bonds: 0.0516,\n  gold: 0.23960217,\n  equity: -0.14631298,\n  cape: 36.98\n}, {\n  year: 2002,\n  cpi: 177.1,\n  dividends: 0.01380155,\n  bonds: 0.0504,\n  gold: 0.21735959,\n  equity: -0.21432017,\n  cape: 30.28\n}, {\n  year: 2003,\n  cpi: 181.7,\n  dividends: 0.01799428,\n  bonds: 0.0405,\n  gold: 0.04397843,\n  equity: 0.26419896,\n  cape: 22.9\n}, {\n  year: 2004,\n  cpi: 185.2,\n  dividends: 0.01554056,\n  bonds: 0.0415,\n  gold: 0.17768595,\n  equity: 0.04316922,\n  cape: 27.66\n}, {\n  year: 2005,\n  cpi: 190.7,\n  dividends: 0.01667781,\n  bonds: 0.0422,\n  gold: 0.23918129,\n  equity: 0.08237614,\n  cape: 26.59\n}, {\n  year: 2006,\n  cpi: 198.3,\n  dividends: 0.0175252,\n  bonds: 0.0442,\n  gold: 0.31587227,\n  equity: 0.11373003,\n  cape: 26.47\n}, {\n  year: 2007,\n  cpi: 202.416,\n  dividends: 0.01761272,\n  bonds: 0.0476,\n  gold: 0.03974895,\n  equity: -0.03187844,\n  cape: 27.21\n}, {\n  year: 2008,\n  cpi: 211.08,\n  dividends: 0.02025008,\n  bonds: 0.0374,\n  gold: 0.2503593,\n  equity: -0.37220401,\n  cape: 24.02\n}, {\n  year: 2009,\n  cpi: 211.143,\n  dividends: 0.0323598,\n  bonds: 0.0252,\n  gold: 0.30597701,\n  equity: 0.29806604,\n  cape: 15.17\n}, {\n  year: 2010,\n  cpi: 216.687,\n  dividends: 0.01979684,\n  bonds: 0.0373,\n  gold: 0.07797923,\n  equity: 0.14154755,\n  cape: 20.53\n}, {\n  year: 2011,\n  cpi: 220.223,\n  dividends: 0.01790346,\n  bonds: 0.0339,\n  gold: 0.08687133,\n  equity: 0.01400259,\n  cape: 22.98\n}, {\n  year: 2012,\n  cpi: 226.665,\n  dividends: 0.02055749,\n  bonds: 0.0197,\n  gold: -0.27614183,\n  equity: 0.13826139,\n  cape: 21.21\n}, {\n  year: 2013,\n  cpi: 230.28,\n  dividends: 0.0213028,\n  bonds: 0.0191,\n  gold: -0.00435866,\n  equity: 0.22114293,\n  cape: 21.9\n}, {\n  year: 2014,\n  cpi: 233.916,\n  dividends: 0.01942536,\n  bonds: 0.0286,\n  gold: -0.11611424,\n  equity: 0.1369433,\n  cape: 24.86\n}, {\n  year: 2015,\n  cpi: 233.707,\n  dividends: 0.019671167,\n  bonds: 0.0188,\n  gold: 0.17994340,\n  equity: -0.054028735,\n  cape: 26.49229542\n}, {\n  year: 2016,\n  cpi: 236.916,\n  dividends: 0.02270058,\n  bonds: 0.0209,\n  gold: 0.00510098,\n  equity: 0.185822996,\n  cape: 24.2061672\n}, {\n  year: 2017,\n  cpi: 242.839,\n  dividends: 0.020186481,\n  bonds: 0.0243,\n  gold: 0.00904448,\n  equity: 0.226221034,\n  cape: 28.06357374\n}, {\n  year: 2018,\n  cpi: 247.867,\n  dividends: 0.017666738,\n  bonds: 0.0258,\n  gold: 0.09784074,\n  equity: -0.065384615,\n  cape: 33.30734383\n}, {\n  year: 2019,\n  cpi: 251.712,\n  dividends: 0.020766616,\n  bonds: 0.0271,\n  gold: 0,\n  equity: 0.257273694,\n  cape: 28.38016446\n}];\n\nfunction Chart(props) {\n  _s();\n\n  const [allCycleDataState, setAllCycleDataState] = useState([]);\n  const [avgEndValueState, setAvgEndValueState] = useState(0);\n  const [medianEndValueState, setMedianEndValueState] = useState(0);\n  const [minEndValueState, setMinEndValueState] = useState(0);\n  const [maxEndValueState, setMaxEndValueState] = useState(0);\n  const [avgSpendState, setAvgSpendState] = useState(0);\n  const [medianSpendState, setMedianSpendState] = useState(0);\n  const [minSpendState, setMinSpendState] = useState(0);\n  const [maxSpendState, setMaxSpendState] = useState(0);\n  const [avgReturnsState, setAvgReturnsState] = useState(0);\n  const [medianReturnsState, setMedianReturnsState] = useState(0);\n  const [minReturnsState, setMinReturnsState] = useState(0);\n  const [maxReturnsState, setMaxReturnsState] = useState(0);\n  const [avgApprState, setAvgAppreciationState] = useState(0);\n  const [medianApprState, setMedianAppreciationState] = useState(0);\n  const [minApprState, setMinAppreciationState] = useState(0);\n  const [maxApprState, setMaxAppreciationState] = useState(0);\n  const [numCyclesState, setNumCyclesState] = useState(0);\n  const [numFailsState, setNumFailsState] = useState(0);\n  const [minFailAgeState, setMinFailAgeState] = useState(0);\n  const [medianFailAgeState, setMedianFailAgeState] = useState(0);\n  const svgID = 'd3target';\n  const perRunClass = 'perrundata';\n  const hoverLineID = 'hoverLine';\n  const ttWrapID = 'ttwrapper';\n  const ttBackID = 'ttbackground';\n  const ttAgeID = 'ttage';\n  const margin = {\n    top: 40,\n    right: 80,\n    bottom: 60,\n    left: 100\n  };\n  const totalWidth = 960;\n  const totalHeight = 700;\n  const boundedWidth = totalWidth - margin.left - margin.right;\n  const boundedHeight = totalHeight - margin.top - margin.bottom;\n  const tooltipWidth = 75;\n  const tooltipHeight = 75;\n  const marginTranslate = \"translate(\" + margin.left + \",\" + margin.top + \")\";\n  const plotTranslate = \"translate(\" + margin.left + \",\" + totalHeight + \")\";\n  const portfolioLineColor = \"Blue\";\n  const portfolioFailedLineColor = \"OrangeRed\";\n  const normalStrokeWidth = 1.5;\n  var allCycleMeta = [];\n\n  const getXScale = () => {\n    var xExt = [props.currentage, props.lifeexpectancy];\n    return d3.scaleLinear().domain(xExt).range([0, boundedWidth]);\n  };\n\n  const getYScale = (rangeMin, rangeMax) => {\n    var yExt = [rangeMin, rangeMax];\n    return d3.scaleLinear().domain(yExt).range([boundedHeight, 0]);\n  };\n\n  const drawAxes = (svg, xScaleIn, yScaleIn, rangeMin, rangeMax) => {\n    svg.append(\"g\").attr(\"class\", perRunClass).attr(\"transform\", \"translate(0,\" + boundedHeight + \")\").call(d3.axisBottom(xScaleIn));\n    svg.append(\"g\").attr(\"class\", perRunClass).call(d3.axisLeft(yScaleIn)); // draw line at zero y\n\n    var yScale = getYScale(rangeMin, rangeMax);\n    const zeroY = yScale(0.0);\n    svg.append(\"g\").attr(\"class\", perRunClass).append(\"rect\").attr(\"pointer-events\", \"none\").attr(\"stroke-width\", \"2.5px\").attr(\"stroke\", \"DarkRed\").attr('x', 0.0).attr('y', zeroY).attr(\"height\", \".25px\").attr(\"width\", boundedWidth);\n  };\n\n  const drawPortfolioLine = (svg, xScaleIn, yScaleIn, oneCycleMeta, oneCycle) => {\n    // Add the equity line\n    svg.append(\"path\").datum(oneCycle).attr('class', perRunClass).attr(\"fill\", \"none\").attr(\"pointer-events\", \"none\").style(\"opacity\", 1).attr(\"stroke\", oneCycleMeta.lineColor).attr(\"stroke-width\", normalStrokeWidth).attr(\"d\", d3.line().x(function (d) {\n      return xScaleIn(d.age);\n    }).y(function (d) {\n      return yScaleIn(d.endValue);\n    }));\n  };\n\n  const prepHoverStuff = svg => {\n    const tooltipWrapper = svg.append('g').attr('id', ttWrapID).attr('display', 'none');\n    tooltipWrapper.append('rect').style('opacity', 0.70).attr('id', ttBackID).attr('width', tooltipWidth).attr('height', tooltipHeight).attr(\"pointer-events\", \"none\").attr(\"fill\", \"#e8e8e8\");\n    const tooltipText = tooltipWrapper.append('g').append('text');\n    tooltipText.attr(\"pointer-events\", \"none\").attr('font-weight', 900).attr('text-anchor', 'left');\n    const ageTT = tooltipText.append('tspan').attr('id', ttAgeID).attr('x', '5').attr('y', '5').attr('dy', '15px').attr(\"pointer-events\", \"none\");\n    const hoverLine = svg.append(\"g\").append(\"rect\").style('opacity', 0).attr('id', hoverLineID).attr(\"pointer-events\", \"none\").attr(\"class\", \"dotted\").attr(\"stroke-width\", \"1px\").attr(\"width\", \".5px\").attr(\"height\", boundedHeight);\n  };\n\n  const getHoverLine = () => {\n    return d3.select('#' + hoverLineID);\n  };\n\n  const getTooltipWrapper = () => {\n    return d3.select('#' + ttWrapID);\n  };\n\n  const getTooltipBackground = () => {\n    return d3.select('#' + ttBackID);\n  };\n\n  const getTooltipAgeSpan = () => {\n    return d3.select('#' + ttAgeID);\n  };\n\n  const handleMouseOver = e => {\n    console.log('handleMouseOver');\n    getHoverLine().style('opacity', 1);\n    getTooltipWrapper().attr('display', null);\n  };\n\n  const handleMouseMove = e => {\n    console.log('handleMouseMove');\n    const bisect = d3.bisector(d => d.age).left;\n    var xScaleIn = getXScale();\n    const coords = d3.pointer(e);\n    const x0 = xScaleIn.invert(coords[0]);\n    const oneCycleData = allCycleDataState[0];\n    const i = bisect(oneCycleData, x0, 1);\n    const selectedData = oneCycleData[i];\n    const clientX = xScaleIn(selectedData.age);\n    var tooltipX = clientX; // prevent the tooltip from getting clipped.\n\n    const tooltipWidth = 75;\n\n    if (boundedWidth <= clientX + tooltipWidth) {\n      tooltipX = clientX - tooltipWidth;\n    }\n\n    getTooltipAgeSpan().text('age: ' + selectedData.age);\n    const ttBounds = getTooltipWrapper().node().getBBox();\n    getTooltipBackground().attr('width', ttBounds.width).attr('height', ttBounds.height);\n    getTooltipWrapper().attr(\"transform\", \"translate(\" + tooltipX + \",\" + coords[1] + \")\");\n    getHoverLine().attr('x', clientX);\n    getTooltipWrapper().attr('x', tooltipX);\n  };\n\n  const handleMouseLeave = () => {\n    console.log('handleMouseLeave');\n    getHoverLine().style('opacity', 0);\n    getTooltipWrapper().attr('display', 'none');\n  };\n\n  const makeCurrency = num => {\n    let dollarUSLocale = Intl.NumberFormat('en-US', {\n      style: \"currency\",\n      currency: \"USD\"\n    });\n    return dollarUSLocale.format(num);\n  };\n\n  const makePct = num => {\n    return Number(num * 100).toFixed(2) + '%';\n  };\n\n  const cleanupPrev = svg => {\n    const perRunSelect = '.' + perRunClass;\n    d3.selectAll(perRunSelect).remove();\n  };\n\n  const dumpCycleData = oneCycle => {\n    for (var i = 0; i < oneCycle.length; i++) {\n      console.log(oneCycle[i].year + ' st:' + makeCurrency(oneCycle[i].beginValue) + ' cpi:' + Number(oneCycle[i].cumulativeCPI).toFixed(2) + ' sp:' + makeCurrency(oneCycle[i].actualSpend) + ' e$:' + makeCurrency(oneCycle[i].equityAppr) + ' d$:' + makeCurrency(oneCycle[i].divAppr) + ' b$:' + makeCurrency(oneCycle[i].bondAppr) + ' f: ' + makeCurrency(oneCycle[i].fees) + ' e: ' + makeCurrency(oneCycle[i].endValue));\n    }\n  };\n\n  const runCycle = (startIndex, numYears) => {\n    var cycleData = [];\n    const stockPct = +props.stockallocation / 100;\n    const bondPct = +props.bondallocation / 100;\n    const feePct = +props.feepct / 100;\n    const ssAge = +props.ssage;\n    const ssIncome = +props.ssincome; // calc cumulative CPI relative to beginning of cycle CPI per year\n\n    const startCPI = histData[startIndex].cpi; // TODO : capture end port with and without cumulative CPI \n\n    for (var i = 0; i < numYears; i++) {\n      var obj = {\n        \"year\": histData[startIndex + i].year,\n        \"age\": +props.currentage + i,\n        \"beginValue\": i > 0 ? cycleData[i - 1].endValue : +props.portfoliovalue,\n        \"equityReturn\": histData[startIndex + i].equity,\n        \"equityAppr\": 0,\n        \"divAppr\": 0,\n        \"bondReturn\": histData[startIndex + i].bonds,\n        \"bondAppr\": 0,\n        \"aggReturn\": histData[startIndex + i].equity * stockPct + histData[startIndex + i].bonds * bondPct,\n        \"cumulativeCPI\": histData[startIndex + i].cpi / startCPI,\n        \"spend\": +props.spendvalue,\n        \"actualSpend\": +props.spendvalue,\n        \"fees\": 0,\n        \"endValue\": 0,\n        \"adjEndValue\": 0,\n        \"appr\": 0\n      }; // adjust spend for cumultative cpi\n\n      obj.actualSpend = obj.spend * obj.cumulativeCPI; // apply ss adjustment if applicable\n\n      var adjustment = ssAge <= obj.age ? ssIncome * obj.cumulativeCPI : 0;\n      obj.actualSpend -= adjustment; // port1 = subtract spend from start port\n\n      obj.endValue = obj.beginValue - obj.actualSpend;\n      var startStockValue = obj.endValue * stockPct; // e growth = port1 * e-share * e-growth\n\n      obj.equityAppr = startStockValue * obj.equityReturn; // calc dividends\n\n      obj.divAppr = startStockValue * histData[startIndex + i].dividends; // b growth = port1 * b=share * b-growth\n\n      obj.bondAppr = obj.endValue * bondPct * obj.bondReturn; // port2 = port1 + e-growth + b-growth\n\n      obj.appr = obj.equityAppr + obj.divAppr + obj.bondAppr;\n      obj.endValue += obj.appr; // end port = port2 - (fees (based on cpi-adj value))\n\n      obj.fees = (obj.beginValue + obj.appr) * feePct;\n      obj.endValue -= obj.fees;\n      obj.adjEndValue = obj.endValue * obj.cumulativeCPI;\n      cycleData.push(obj);\n\n      if (0 >= obj.endValue) {\n        obj.endValue = obj.adjEndValue = 0;\n        break;\n      } // DBG\n\n\n      if (0) {\n        dumpCycleData(cycleData);\n        console.log(obj.year + ' st:' + makeCurrency(obj.beginValue) + ' cpi:' + Number(obj.cumulativeCPI).toFixed(2) + ' sp:' + makeCurrency(obj.actualSpend) + ' e$:' + makeCurrency(obj.equityAppr) + ' d$:' + makeCurrency(obj.divAppr) + ' b$:' + makeCurrency(obj.bondAppr) + ' a$: ' + makeCurrency(obj.appr) + ' f: ' + makeCurrency(fees) + ' e: ' + makeCurrency(obj.endValue));\n      }\n    }\n\n    return cycleData;\n  };\n\n  const getAggReturns = () => {\n    var retVal = [];\n    var stockPct = props.stockallocation / 100;\n    var bondPct = props.bondallocation / 100;\n\n    for (var i = 0; i < histData.length; i++) {\n      retVal[i] = histData[i].equity * stockPct + histData[i].bonds * bondPct;\n    }\n\n    return retVal;\n  };\n\n  const calcCycleMeta = (oneCycle, lifetime) => {\n    var ext = d3.extent(oneCycle, d => d.endValue);\n    var avg = d3.mean(oneCycle, d => d.endValue);\n    var med = d3.median(oneCycle, d => d.endValue);\n    var totalSpend = d3.sum(oneCycle, d => d.actualSpend);\n    var totalAppr = d3.sum(oneCycle, d => d.appr);\n    var oneMeta = {\n      'startCycleValue': props.portfoliovalue,\n      'endCycleValue': oneCycle[oneCycle.length - 1].endValue,\n      'extent': ext,\n      'mean': avg,\n      'median': med,\n      'totalSpend': totalSpend,\n      'totalAppreciation': totalAppr,\n      'fail': oneCycle.length < lifetime,\n      'failAge': oneCycle.length < lifetime ? oneCycle.length + props.currentage : 0,\n      'lineColor': oneCycle.length === lifetime ? portfolioLineColor : portfolioFailedLineColor\n    };\n    return oneMeta;\n  };\n\n  const showSummaryData = allCycles => {\n    var ext = d3.extent(allCycleMeta, d => d.endCycleValue);\n    var avg = d3.mean(allCycleMeta, d => d.endCycleValue);\n    var med = d3.median(allCycleMeta, d => d.endCycleValue);\n    var avgSpend = d3.mean(allCycleMeta, d => d.totalSpend);\n    var medianSpend = d3.median(allCycleMeta, d => d.totalSpend);\n    var extSpend = d3.extent(allCycleMeta, d => d.totalSpend);\n    var aggReturns = getAggReturns();\n    var avgReturns = d3.mean(aggReturns);\n    var medianReturns = d3.median(aggReturns);\n    var extReturns = d3.extent(aggReturns);\n    var avgAppr = d3.mean(allCycleMeta, d => d.totalAppreciation);\n    var medianAppr = d3.median(allCycleMeta, d => d.totalAppreciation);\n    var extAppr = d3.extent(allCycleMeta, d => d.totalAppreciation);\n    var numFails = 0;\n    var minFailAge = props.lifeexpectancy + 1;\n    var failAges = [];\n\n    for (var i = 0; i < allCycleMeta.length; i++) {\n      if (allCycleMeta[i].fail) {\n        minFailAge = Math.min(allCycleMeta[i].failAge, minFailAge);\n        failAges[numFails] = allCycleMeta[i].failAge;\n        numFails++;\n      }\n    }\n\n    setAvgEndValueState(avg);\n    setMedianEndValueState(med);\n    setMinEndValueState(ext[0]);\n    setMaxEndValueState(ext[1]);\n    setAvgSpendState(avgSpend);\n    setMedianSpendState(medianSpend);\n    setMinSpendState(extSpend[0]);\n    setMaxSpendState(extSpend[1]);\n    setAvgReturnsState(avgReturns);\n    setMedianReturnsState(medianReturns);\n    setMinReturnsState(extReturns[0]);\n    setMaxReturnsState(extReturns[1]);\n    setAvgAppreciationState(avgAppr);\n    setMedianAppreciationState(medianAppr);\n    setMinAppreciationState(extAppr[0]);\n    setMaxAppreciationState(extAppr[1]);\n    setNumCyclesState(allCycleMeta.length);\n    setNumFailsState(numFails);\n    setMinFailAgeState(minFailAge);\n    setMedianFailAgeState(d3.median(failAges));\n  };\n\n  const calcCycles = svg => {\n    // TODO : double-check for off-by-one here - should the lifetime or numCycles get +1?\n    const lifetime = props.lifeexpectancy - props.currentage + 1;\n    const numCycles = histData.length - lifetime;\n    const startIndex = 0;\n    var portMin = Number.POSITIVE_INFINITY;\n    var portMax = Number.NEGATIVE_INFINITY;\n    var allCycles = [];\n    cleanupPrev();\n\n    for (var i = 0; i < numCycles; i++) {\n      var oneCycle = runCycle(startIndex + i, lifetime);\n      var cycleMeta = calcCycleMeta(oneCycle, lifetime);\n      allCycleMeta[i] = cycleMeta;\n      allCycles[i] = oneCycle;\n      portMin = Math.min(portMin, cycleMeta.extent[0]);\n      portMax = Math.max(portMax, cycleMeta.extent[1]);\n\n      if (1) {\n        console.log(i + ': ' + oneCycle[0].year + ' end:' + makeCurrency(cycleMeta.endCycleValue));\n\n        if (78 === i) {\n          dumpCycleData(oneCycle);\n        }\n      }\n    }\n\n    setAllCycleDataState(allCycles);\n    showSummaryData(allCycles);\n    const xScale = getXScale();\n    const yScale = getYScale(portMin, portMax);\n    drawAxes(svg, xScale, yScale, portMin, portMax);\n\n    for (i = 0; i < numCycles; i++) {\n      drawPortfolioLine(svg, xScale, yScale, allCycleMeta[i], allCycles[i]);\n    }\n  };\n\n  React.useEffect(() => {\n    const svgSelect = '#' + svgID;\n    const svg = d3.select(svgSelect).append(\"g\").attr(\"transform\", marginTranslate);\n    calcCycles(svg);\n    prepHoverStuff(svg);\n    console.log('effect');\n  }, [props]);\n  console.log('render');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1815,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [makePct(1 - numFailsState / numCyclesState), \" success\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1818,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [numFailsState, \" failure of \", numCyclesState, \" cycles\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1821,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"Median failure age : \", medianFailAgeState]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1824,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"Minimum failure age : \", minFailAgeState]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1827,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1814,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1813,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"$ End Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1834,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"median : \", makeCurrency(medianEndValueState)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1837,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"mean : \", makeCurrency(avgEndValueState)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1840,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"max : \", makeCurrency(maxEndValueState)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1843,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"min : \", makeCurrency(minEndValueState)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1846,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1833,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1832,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"% Returns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1853,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"median : \", makePct(medianReturnsState)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1856,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"mean : \", makePct(avgReturnsState)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1859,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"max : \", makePct(maxReturnsState)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1862,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"min : \", makePct(minReturnsState)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1865,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1852,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1851,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"$ Appreciation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1872,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"median : \", makeCurrency(medianApprState)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1875,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"mean : \", makeCurrency(avgApprState)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1878,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"max : \", makeCurrency(maxApprState)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1881,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"min : \", makeCurrency(minApprState)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1884,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1871,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1870,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"Total Spend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1891,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"median : \", makeCurrency(medianSpendState)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1894,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"mean : \", makeCurrency(avgSpendState)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1897,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"max : \", makeCurrency(maxSpendState)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1900,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"min : \", makeCurrency(minSpendState)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1903,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1890,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1889,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1812,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: svgID,\n      width: totalWidth,\n      height: totalHeight,\n      children: /*#__PURE__*/_jsxDEV(\"rect\", {\n        id: \"trackingRect\",\n        style: {\n          opacity: 0\n        },\n        width: boundedWidth,\n        height: boundedHeight,\n        transform: marginTranslate,\n        fill: \"LightGrey\",\n        onMouseEnter: handleMouseOver,\n        onMouseMove: handleMouseMove,\n        onMouseLeave: handleMouseLeave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1913,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1909,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1811,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"55miDhuQTG1tdHAHSF/B2i4B4Gw=\");\n\n_c = Chart;\n;\nexport default Chart; // d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n// tooltip example : https://observablehq.com/@connor-roche/multi-line-chart-focus-context-w-mouseover-tooltip\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/chart.js"],"names":["React","useState","Stack","Card","CardContent","Typography","d3","histData","year","cpi","dividends","bonds","gold","equity","cape","Chart","props","allCycleDataState","setAllCycleDataState","avgEndValueState","setAvgEndValueState","medianEndValueState","setMedianEndValueState","minEndValueState","setMinEndValueState","maxEndValueState","setMaxEndValueState","avgSpendState","setAvgSpendState","medianSpendState","setMedianSpendState","minSpendState","setMinSpendState","maxSpendState","setMaxSpendState","avgReturnsState","setAvgReturnsState","medianReturnsState","setMedianReturnsState","minReturnsState","setMinReturnsState","maxReturnsState","setMaxReturnsState","avgApprState","setAvgAppreciationState","medianApprState","setMedianAppreciationState","minApprState","setMinAppreciationState","maxApprState","setMaxAppreciationState","numCyclesState","setNumCyclesState","numFailsState","setNumFailsState","minFailAgeState","setMinFailAgeState","medianFailAgeState","setMedianFailAgeState","svgID","perRunClass","hoverLineID","ttWrapID","ttBackID","ttAgeID","margin","top","right","bottom","left","totalWidth","totalHeight","boundedWidth","boundedHeight","tooltipWidth","tooltipHeight","marginTranslate","plotTranslate","portfolioLineColor","portfolioFailedLineColor","normalStrokeWidth","allCycleMeta","getXScale","xExt","currentage","lifeexpectancy","scaleLinear","domain","range","getYScale","rangeMin","rangeMax","yExt","drawAxes","svg","xScaleIn","yScaleIn","append","attr","call","axisBottom","axisLeft","yScale","zeroY","drawPortfolioLine","oneCycleMeta","oneCycle","datum","style","lineColor","line","x","d","age","y","endValue","prepHoverStuff","tooltipWrapper","tooltipText","ageTT","hoverLine","getHoverLine","select","getTooltipWrapper","getTooltipBackground","getTooltipAgeSpan","handleMouseOver","e","console","log","handleMouseMove","bisect","bisector","coords","pointer","x0","invert","oneCycleData","i","selectedData","clientX","tooltipX","text","ttBounds","node","getBBox","width","height","handleMouseLeave","makeCurrency","num","dollarUSLocale","Intl","NumberFormat","currency","format","makePct","Number","toFixed","cleanupPrev","perRunSelect","selectAll","remove","dumpCycleData","length","beginValue","cumulativeCPI","actualSpend","equityAppr","divAppr","bondAppr","fees","runCycle","startIndex","numYears","cycleData","stockPct","stockallocation","bondPct","bondallocation","feePct","feepct","ssAge","ssage","ssIncome","ssincome","startCPI","obj","portfoliovalue","spendvalue","spend","adjustment","startStockValue","equityReturn","bondReturn","appr","adjEndValue","push","getAggReturns","retVal","calcCycleMeta","lifetime","ext","extent","avg","mean","med","median","totalSpend","sum","totalAppr","oneMeta","showSummaryData","allCycles","endCycleValue","avgSpend","medianSpend","extSpend","aggReturns","avgReturns","medianReturns","extReturns","avgAppr","totalAppreciation","medianAppr","extAppr","numFails","minFailAge","failAges","fail","Math","min","failAge","calcCycles","numCycles","portMin","POSITIVE_INFINITY","portMax","NEGATIVE_INFINITY","cycleMeta","max","xScale","useEffect","svgSelect","opacity"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {useState} from \"react\";\nimport { Stack } from \"@mui/material\";\nimport { Card } from \"@mui/material\";\nimport { CardContent } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\n\nconst histData = [\n    {\n        year: 1871,\n        cpi: 12.46,\n        dividends: 0.05855856,\n        bonds: 0.0532,\n        gold: 0.02656043,\n        equity: 0.09459459\n    },\n    {\n        year: 1872,\n        cpi: 12.65,\n        dividends: 0.05417695,\n        bonds: 0.0536,\n        gold: -0.01940492,\n        equity: 0.05144033\n    },\n    {\n        year: 1873,\n        cpi: 12.94,\n        dividends: 0.05919765,\n        bonds: 0.0558,\n        gold: 0.01539138,\n        equity: -0.08806262\n    },\n    {\n        year:1874,\n        cpi: 12.37,\n        dividends: 0.07081545,\n        bonds: 0.0547,\n        gold: 0.01948896,\n        equity: -0.02575107\n    },\n    {\n        year:1875,\n        cpi: 11.51,\n        dividends: 0.07213656,\n        bonds: 0.0507,\n        gold: -0.0526763,\n        equity: -0.01762115\n    },\n    {\n        year:1876,\n        cpi: 10.85,\n        dividends: 0.06726457,\n        bonds: 0.0459,\n        gold: -0.0470852,\n        equity: -0.20403587\n    },\n    {\n        year:1877,\n        cpi: 10.94,\n        dividends: 0.08191549,\n        bonds: 0.0445,\n        gold: -0.02635294,\n        equity: -0.08450704\n    },\n    {\n        year:1878,\n        cpi: 9.23,\n        dividends: 0.05821538,\n        bonds: 0.0434,\n        gold: -0.00096665,\n        equity: 0.10153846\n    },\n    {\n        year:1879,\n        cpi: 8.28,\n        dividends: 0.05075419,\n        bonds: 0.0422,\n        gold: 0,\n        equity: 0.4273743\n    },\n    {\n        year:1880,\n        cpi: 9.99,\n        dividends: 0.04011742,\n        bonds: 0.0402,\n        gold: 0,\n        equity: 0.21135029\n    },\n    {\n        year:1881,\n        cpi: 9.42,\n        dividends: 0.04281099,\n        bonds: 0.037,\n        gold: 0,\n        equity: -0.04361874,\n        cape: 18.45\n    },\n    {\n        year:1882,\n        cpi: 10.18,\n        dividends: 0.05405405,\n        bonds: 0.0362,\n        gold: 0,\n        equity: -0.01858108,\n        cape: 15.66\n    },\n    {\n        year:1883,\n        cpi: 9.99,\n        dividends: 0.05521515,\n        bonds: 0.0363,\n        gold: 0,\n        equity: -0.10843373,\n        cape: 15.25\n    },\n    {\n        year:1884,\n        cpi: 9.23,\n        dividends: 0.06337838,\n        bonds: 0.0362,\n        gold: 0,\n        equity: -0.18146718,\n        cape: 14.41\n    },\n    {\n        year:1885,\n        cpi: 8.28,\n        dividends: 0.07174528,\n        bonds: 0.0352,\n        gold: 0,\n        equity: 0.22641509,\n        cape: 13.1\n    },\n    {\n        year:1886,\n        cpi: 7.99,\n        dividends: 0.04582692,\n        bonds: 0.0337,\n        gold: 0,\n        equity: 0.07307692,\n        cape: 16.67\n    },\n    {\n        year:1887,\n        cpi: 7.99,\n        dividends: 0.03987455,\n        bonds: 0.0352,\n        gold: 0,\n        equity: -0.0483871,\n        cape: 17.48\n    },\n    {\n        year:1888,\n        cpi: 8.37,\n        dividends: 0.04676083,\n        bonds: 0.0367,\n        gold: 0,\n        equity: -0.01318267,\n        cape: 15.33\n    },\n    {\n        year:1889,\n        cpi: 7.99,\n        dividends: 0.04374046,\n        bonds: 0.0345,\n        gold: 0,\n        equity: 0.02671756,\n        cape: 15.77\n    },\n    {\n        year:1890,\n        cpi: 7.61,\n        dividends: 0.04089219,\n        bonds: 0.0342,\n        gold: 0,\n        equity: -0.10037175,\n        cape: 17.18\n    },\n    {\n        year:1891,\n        cpi: 7.8,\n        dividends: 0.04545455,\n        bonds: 0.0362,\n        gold: 0,\n        equity: 0.13842975,\n        cape: 15.4\n    },\n    {\n        year:1892,\n        cpi: 7.33,\n        dividends: 0.04023593,\n        bonds: 0.036,\n        gold: 0,\n        equity: 0.01814882,\n        cape: 18.96\n    },\n    {\n        year:1893,\n        cpi: 7.9,\n        dividends: 0.04292335,\n        bonds: 0.0375,\n        gold: 0,\n        equity: -0.22994652,\n        cape: 17.6\n    },\n    {\n        year:1894,\n        cpi: 6.85,\n        dividends: 0.05710648,\n        bonds: 0.037,\n        gold: 0,\n        equity: -0.0162037,\n        cape: 15.7\n    },\n    {\n        year:1895,\n        cpi: 6.57,\n        dividends: 0.04901176,\n        bonds: 0.0346,\n        gold: 0,\n        equity: 0.00470588,\n        cape: 16.47\n    },\n    {\n        year:1896,\n        cpi: 6.66,\n        dividends: 0.04430913,\n        bonds: 0.036,\n        gold: 0,\n        equity: -0.0117096,\n        cape: 16.53\n    },\n    {\n        year:1897,\n        cpi: 6.47,\n        dividends: 0.04265403,\n        bonds: 0.034,\n        gold: 0,\n        equity: 0.1563981,\n        cape: 16.99\n    },\n    {\n        year:1898,\n        cpi: 6.66,\n        dividends: 0.03723361,\n        bonds: 0.0335,\n        gold: 0,\n        equity: 0.24590164,\n        cape: 19.21\n    },\n    {\n        year:1899,\n        cpi: 6.76,\n        dividends: 0.03302632,\n        bonds: 0.031,\n        gold: 0,\n        equity: 0.00328947,\n        cape: 22.87\n    },\n    {\n        year:1900,\n        cpi: 7.9,\n        dividends: 0.03565574,\n        bonds: 0.0315,\n        gold: 0,\n        equity: 0.15901639,\n        cape: 18.63\n    },\n    {\n        year:1901,\n        cpi: 7.71,\n        dividends: 0.04267327,\n        bonds: 0.031,\n        gold: 0,\n        equity: 0.14851485,\n        cape: 20.94\n    },\n    {\n        year:1902,\n        cpi: 7.9,\n        dividends: 0.03950739,\n        bonds: 0.0318,\n        gold: 0,\n        equity: 0.04187192,\n        cape: 22.3\n    },\n    {\n        year:1903,\n        cpi: 8.66,\n        dividends: 0.03920804,\n        bonds: 0.033,\n        gold: 0,\n        equity: -0.21040189,\n        cape: 20.29\n    },\n    {\n        year:1904,\n        cpi: 8.28,\n        dividends: 0.0519012,\n        bonds: 0.034,\n        gold: 0,\n        equity: 0.26197605,\n        cape: 15.84\n    },\n    {\n        year:1905,\n        cpi: 8.47,\n        dividends: 0.03697509,\n        bonds: 0.0348,\n        gold: 0,\n        equity: 0.17081851,\n        cape: 18.44\n    },\n    {\n        year:1906,\n        cpi: 8.47,\n        dividends: 0.03402229,\n        bonds: 0.0343,\n        gold: 0,\n        equity: -0.03140831,\n        cape: 20.1\n    },\n    {\n        year:1907,\n        cpi: 8.85,\n        dividends: 0.04218619,\n        bonds: 0.0367,\n        gold: 0,\n        equity: -0.2834728,\n        cape: 17.19\n    },\n    {\n        year:1908,\n        cpi: 8.66,\n        dividends: 0.06375182,\n        bonds: 0.0387,\n        gold: 0,\n        equity: 0.32262774,\n        cape: 11.89\n    },\n    {\n        year:1909,\n        cpi: 8.94,\n        dividends: 0.04451435,\n        bonds: 0.0376,\n        gold: 0,\n        equity: 0.11258278,\n        cape: 14.75\n    },\n    {\n        year:1910,\n        cpi: 9.9,\n        dividends: 0.04389881,\n        bonds: 0.0391,\n        gold: 0,\n        equity: -0.08035714,\n        cape: 14.52\n    },\n    {\n        year:1911,\n        cpi: 9.23,\n        dividends: 0.05070119,\n        bonds: 0.0398,\n        gold: 0,\n        equity: -0.01618123,\n        cape: 14.02\n    },\n    {\n        year:1912,\n        cpi: 9.13,\n        dividends: 0.05162281,\n        bonds: 0.0401,\n        gold: 0,\n        equity: 0.01973684,\n        cape: 13.78\n    },\n    {\n        year:1913,\n        cpi: 9.8,\n        dividends: 0.0516129,\n        bonds: 0.0445,\n        gold: 0,\n        equity: -0.1,\n        cape: 13.13\n    },\n    {\n        year:1914,\n        cpi: 10,\n        dividends: 0.0567503,\n        bonds: 0.0416,\n        gold: 0,\n        equity: -0.10633214,\n        cape: 11.62\n    },\n    {\n        year:1915,\n        cpi: 10.1,\n        dividends: 0.05625668,\n        bonds: 0.0424,\n        gold: 0,\n        equity: 0.2473262,\n        cape: 10.34\n    },\n    {\n        year:1916,\n        cpi: 10.4,\n        dividends: 0.04724544,\n        bonds: 0.0405,\n        gold: 0,\n        equity: 0.02572347,\n        cape: 12.53\n    },\n    {\n        year:1917,\n        cpi: 11.7,\n        dividends: 0.05964472,\n        bonds: 0.0423,\n        gold: 0,\n        equity: -0.24660397,\n        cape: 10.98\n    },\n    {\n        year:1918,\n        cpi: 14,\n        dividends: 0.09431345,\n        bonds: 0.0457,\n        gold: 0,\n        equity: 0.0887656,\n        cape: 6.63\n    },\n    {\n        year:1919,\n        cpi: 16.5,\n        dividends: 0.07219108,\n        bonds: 0.045,\n        gold: 0,\n        equity: 0.12484076,\n        cape: 6.09\n    },\n    {\n        year:1920,\n        cpi: 19.3,\n        dividends: 0.05983012,\n        bonds: 0.0497,\n        gold: 0,\n        equity: -0.19479049,\n        cape: 5.99\n    },\n    {\n        year:1921,\n        cpi: 19,\n        dividends: 0.07113924,\n        bonds: 0.0509,\n        gold: 0,\n        equity: 0.02672293,\n        cape: 5.12\n    },\n    {\n        year:1922,\n        cpi: 16.9,\n        dividends: 0.06358904,\n        bonds: 0.043,\n        gold: 0,\n        equity: 0.21917808,\n        cape: 6.28\n    },\n    {\n        year:1923,\n        cpi: 16.8,\n        dividends: 0.05749438,\n        bonds: 0.0436,\n        gold: 0,\n        equity: -0.00786517,\n        cape: 8.15\n    },\n    {\n        year:1924,\n        cpi: 17.3,\n        dividends: 0.06021518,\n        bonds: 0.0406,\n        gold: 0,\n        equity: 0.198188,\n        cape: 8.07\n    },\n    {\n        year:1925,\n        cpi: 17.3,\n        dividends: 0.05238185,\n        bonds: 0.0386,\n        gold: 0,\n        equity: 0.19565217,\n        cape: 9.69\n    },\n    {\n        year:1926,\n        cpi: 17.9,\n        dividends: 0.04802372,\n        bonds: 0.0368,\n        gold: 0,\n        equity: 0.05928854,\n        cape: 11.33\n    },\n    {\n        year:1927,\n        cpi: 17.5,\n        dividends: 0.05199254,\n        bonds: 0.0334,\n        gold: 0,\n        equity: 0.30820896,\n        cape: 13.18\n    },\n    {\n        year:1928,\n        cpi: 17.3,\n        dividends: 0.0443069,\n        bonds: 0.0333,\n        gold: 0,\n        equity: 0.41814033,\n        cape: 18.79\n    },\n    {\n        year:1929,\n        cpi: 17.1,\n        dividends: 0.03459372,\n        bonds: 0.036,\n        gold: 0,\n        equity: -0.12670957,\n        cape: 27.06\n    },\n    {\n        year:1930,\n        cpi: 17.1,\n        dividends: 0.04471672,\n        bonds: 0.0329,\n        gold: 0,\n        equity: -0.26393367,\n        cape: 22.3\n    },\n    {\n        year:1931,\n        cpi: 15.9,\n        dividends: 0.06049437,\n        bonds: 0.0334,\n        gold: 0,\n        equity: -0.48060075,\n        cape: 16.7\n    },\n    {\n        year:1932,\n        cpi: 14.3,\n        dividends: 0.09557831,\n        bonds: 0.0368,\n        gold: 0.56361877,\n        equity: -0.14578313,\n        cape: 9.31\n    },\n    {\n        year:1933,\n        cpi: 12.9,\n        dividends: 0.06981664,\n        bonds: 0.0331,\n        gold: 0.08292079,\n        equity: 0.48660085,\n        cape: 8.73\n    },\n    {\n        year:1934,\n        cpi: 13.2,\n        dividends: 0.04182163,\n        bonds: 0.0312,\n        gold: 0,\n        equity: -0.12144213,\n        cape: 13.02\n    },\n    {\n        year:1935,\n        cpi: 13.6,\n        dividends: 0.04859611,\n        bonds: 0.0279,\n        gold: 0,\n        equity: 0.48596112,\n        cape: 11.49\n    },\n    {\n        year:1936,\n        cpi: 13.8,\n        dividends: 0.03488372,\n        bonds: 0.0265,\n        gold: 0,\n        equity: 0.27834302,\n        cape: 17.08\n    },\n    {\n        year:1937,\n        cpi: 14.1,\n        dividends: 0.04150085,\n        bonds: 0.0268,\n        gold: 0,\n        equity: -0.35702103,\n        cape: 21.61\n    },\n    {\n        year:1938,\n        cpi: 14.2,\n        dividends: 0.07014439,\n        bonds: 0.0256,\n        gold: 0,\n        equity: 0.10521662,\n        cape: 13.51\n    },\n    {\n        year:1939,\n        cpi: 14,\n        dividends: 0.04106664,\n        bonds: 0.0236,\n        gold: -0.01428571,\n        equity: -0.016,\n        cape: 15.6\n    },\n    {\n        year:1940,\n        cpi: 13.9,\n        dividends: 0.05067748,\n        bonds: 0.0221,\n        gold: 0.02898551,\n        equity: -0.14227642,\n        cape: 16.37\n    },\n    {\n        year:1941,\n        cpi: 14.1,\n        dividends: 0.06382303,\n        bonds: 0.0195,\n        gold: 0,\n        equity: -0.1535545,\n        cape: 13.9\n    },\n    {\n        year:1942,\n        cpi: 15.7,\n        dividends: 0.07876069,\n        bonds: 0.0246,\n        gold: 0.02816901,\n        equity: 0.12989922,\n        cape: 10.1\n    },\n    {\n        year:1943,\n        cpi: 16.9,\n        dividends: 0.05847374,\n        bonds: 0.0247,\n        gold: -0.00684932,\n        equity: 0.17443013,\n        cape: 10.15\n    },\n    {\n        year:1944,\n        cpi: 17.4,\n        dividends: 0.05175806,\n        bonds: 0.0248,\n        gold: 0.02758621,\n        equity: 0.13839662,\n        cape: 11.05\n    },\n    {\n        year:1945,\n        cpi: 17.8,\n        dividends: 0.04768962,\n        bonds: 0.0237,\n        gold: 0.02684564,\n        equity: 0.3358043,\n        cape: 11.96\n    },\n    {\n        year:1946,\n        cpi: 18.2,\n        dividends: 0.03699595,\n        bonds: 0.0219,\n        gold: 0.12418301,\n        equity: -0.15593785,\n        cape: 15.62\n    },\n    {\n        year:1947,\n        cpi: 21.5,\n        dividends: 0.04689895,\n        bonds: 0.0225,\n        gold: -0.02325581,\n        equity: -0.02498356,\n        cape: 11.47\n    },\n    {\n        year:1948,\n        cpi: 23.7,\n        dividends: 0.05686669,\n        bonds: 0.0244,\n        gold: -0.03571429,\n        equity: 0.03573837,\n        cape: 10.42\n    },\n    {\n        year:1949,\n        cpi: 24,\n        dividends: 0.06163197,\n        bonds: 0.0231,\n        gold: -0.00617284,\n        equity: 0.09895833,\n        cape: 10.25\n    },\n    {\n        year:1950,\n        cpi: 23.5,\n        dividends: 0.06812796,\n        bonds: 0.0232,\n        gold: -0.00621118,\n        equity: 0.25651659,\n        cape: 10.75\n    },\n    {\n        year:1951,\n        cpi: 25.4,\n        dividends: 0.07009288,\n        bonds: 0.0257,\n        gold: -0.0325,\n        equity: 0.14049976,\n        cape: 11.9\n    },\n    {\n        year:1952,\n        cpi: 26.5,\n        dividends: 0.05842621,\n        bonds: 0.0268,\n        gold: -0.08268734,\n        equity: 0.0822654,\n        cape: 12.53\n    },\n    {\n        year:1953,\n        cpi: 26.6,\n        dividends: 0.05385791,\n        bonds: 0.0283,\n        gold: -0.00704225,\n        equity: -0.02750191,\n        cape: 13.01\n    },\n    {\n        year:1954,\n        cpi: 26.9,\n        dividends: 0.05721406,\n        bonds: 0.0248,\n        gold: -0.00283688,\n        equity: 0.3982718,\n        cape: 12\n    },\n    {\n        year:1955,\n        cpi: 26.7,\n        dividends: 0.04344579,\n        bonds: 0.0261,\n        gold: 0.00142248,\n        equity: 0.24016854,\n        cape: 15.99\n    },\n    {\n        year:1956,\n        cpi: 26.8,\n        dividends: 0.03782559,\n        bonds: 0.029,\n        gold: 0.00142046,\n        equity: 0.02899207,\n        cape: 18.29\n    },\n    {\n        year:1957,\n        cpi: 27.6,\n        dividends: 0.03822738,\n        bonds: 0.0346,\n        gold: 0,\n        equity: -0.09487123,\n        cape: 16.72\n    },\n    {\n        year:1958,\n        cpi: 28.6,\n        dividends: 0.04336892,\n        bonds: 0.0309,\n        gold: 0,\n        equity: 0.35262646,\n        cape: 13.79\n    },\n    {\n        year:1959,\n        cpi: 29,\n        dividends: 0.03158342,\n        bonds: 0.0402,\n        gold: 0.03546099,\n        equity: 0.04332974,\n        cape: 17.98\n    },\n    {\n        year:1960,\n        cpi: 29.3,\n        dividends: 0.03216733,\n        bonds: 0.0472,\n        gold: -0.02739726,\n        equity: 0.02912287,\n        cape: 18.34\n    },\n    {\n        year:1961,\n        cpi: 29.8,\n        dividends: 0.03259662,\n        bonds: 0.0384,\n        gold: -0.00422535,\n        equity: 0.15656397,\n        cape: 18.47\n    },\n    {\n        year:1962,\n        cpi: 30,\n        dividends: 0.02934226,\n        bonds: 0.0408,\n        gold: -0.00282885,\n        equity: -0.05805704,\n        cape: 21.2\n    },\n    {\n        year:1963,\n        cpi: 30.4,\n        dividends: 0.03284153,\n        bonds: 0.0383,\n        gold: 0.00283688,\n        equity: 0.17506917,\n        cape: 19.26\n    },\n    {\n        year:1964,\n        cpi: 30.9,\n        dividends: 0.03004147,\n        bonds: 0.0417,\n        gold: 0.00424328,\n        equity: 0.1264879,\n        cape: 21.63\n    },\n    {\n        year:1965,\n        cpi: 31.2,\n        dividends: 0.02922283,\n        bonds: 0.0419,\n        gold: -0.0028169,\n        equity: 0.08360427,\n        cape: 23.27\n    },\n    {\n        year:1966,\n        cpi: 31.8,\n        dividends: 0.02936134,\n        bonds: 0.0461,\n        gold: 0.00282486,\n        equity: -0.09504929,\n        cape: 24.06\n    },\n    {\n        year:1967,\n        cpi: 32.9,\n        dividends: 0.03410302,\n        bonds: 0.0458,\n        gold: 0.22535211,\n        equity: 0.12539964,\n        cape: 20.43\n    },\n    {\n        year:1968,\n        cpi: 34.1,\n        dividends: 0.03082912,\n        bonds: 0.0553,\n        gold: -0.05747126,\n        equity: 0.07323232,\n        cape: 21.51\n    },\n    {\n        year:1969,\n        cpi: 35.6,\n        dividends: 0.03019608,\n        bonds: 0.0604,\n        gold: -0.05121951,\n        equity: -0.11460784,\n        cape: 21.19\n    },\n    {\n        year:1970,\n        cpi: 37.8,\n        dividends: 0.03502746,\n        bonds: 0.0779,\n        gold: 0.14652956,\n        equity: 0.03521205,\n        cape: 17.09\n    },\n    {\n        year:1971,\n        cpi: 39.8,\n        dividends: 0.03347952,\n        bonds: 0.0624,\n        gold: 0.43139014,\n        equity: 0.10493101,\n        cape: 16.46\n    },\n    {\n        year:1972,\n        cpi: 41.1,\n        dividends: 0.02971926,\n        bonds: 0.0595,\n        gold: 0.6679198,\n        equity: 0.14617619,\n        cape: 17.26\n    },\n    {\n        year:1973,\n        cpi: 42.6,\n        dividends: 0.02666106,\n        bonds: 0.0646,\n        gold: 0.72586401,\n        equity: -0.18826014,\n        cape: 18.71\n    },\n    {\n        year:1974,\n        cpi: 46.6,\n        dividends: 0.03537613,\n        bonds: 0.0699,\n        gold: -0.24204168,\n        equity: -0.24503173,\n        cape: 13.53\n    },\n    {\n        year:1975,\n        cpi: 52.1,\n        dividends: 0.04993564,\n        bonds: 0.075,\n        gold: -0.03962955,\n        equity: 0.33489526,\n        cape: 8.92\n    },\n    {\n        year:1976,\n        cpi: 55.6,\n        dividends: 0.03802736,\n        bonds: 0.0774,\n        gold: 0.2043059,\n        equity: 0.0716498,\n        cape: 11.19\n    },\n    {\n        year:1977,\n        cpi: 58.5,\n        dividends: 0.03946696,\n        bonds: 0.0721,\n        gold: 0.29174426,\n        equity: -0.1305395,\n        cape: 11.44\n    },\n    {\n        year:1978,\n        cpi: 62.5,\n        dividends: 0.05222526,\n        bonds: 0.0796,\n        gold: 0.99999999,\n        equity: 0.10481994,\n        cape: 9.24\n    },\n    {\n        year:1979,\n        cpi: 68.3,\n        dividends: 0.05128202,\n        bonds: 0.091,\n        gold: 0.29607843,\n        equity: 0.11222545,\n        cape: 9.26\n    },\n    {\n        year:1980,\n        cpi: 77.8,\n        dividends: 0.05139766,\n        bonds: 0.108,\n        gold: -0.32761809,\n        equity: 0.19927863,\n        cape: 8.85\n    },\n    {\n        year:1981,\n        cpi: 87,\n        dividends: 0.04661654,\n        bonds: 0.1257,\n        gold: 0.1175,\n        equity: -0.11804511,\n        cape: 9.26\n    },\n    {\n        year:1982,\n        cpi: 94.3,\n        dividends: 0.05677749,\n        bonds: 0.1459,\n        gold: -0.14988814,\n        equity: 0.23017903,\n        cape: 7.39\n    },\n    {\n        year:1983,\n        cpi: 97.8,\n        dividends: 0.04770152,\n        bonds: 0.1046,\n        gold: -0.18947368,\n        equity: 0.15315315,\n        cape: 8.76\n    },\n    {\n        year:1984,\n        cpi: 101.9,\n        dividends: 0.04278846,\n        bonds: 0.1167,\n        gold: 0.06168831,\n        equity: 0.03125,\n        cape: 9.89\n    },\n    {\n        year:1985,\n        cpi: 105.5,\n        dividends: 0.04413362,\n        bonds: 0.1138,\n        gold: 0.19541284,\n        equity: 0.21328671,\n        cape: 10\n    },\n    {\n        year:1986,\n        cpi: 109.6,\n        dividends: 0.03813641,\n        bonds: 0.0919,\n        gold: 0.24456383,\n        equity: 0.27041306,\n        cape: 11.72\n    },\n    {\n        year:1987,\n        cpi: 111.2,\n        dividends: 0.03137996,\n        bonds: 0.0708,\n        gold: -0.15693731,\n        equity: -0.05293006,\n        cape: 14.92\n    },\n    {\n        year:1988,\n        cpi: 115.7,\n        dividends: 0.03535597,\n        bonds: 0.0867,\n        gold: -0.02230891,\n        equity: 0.13932136,\n        cape: 13.9\n    },\n    {\n        year:1989,\n        cpi: 121.1,\n        dividends: 0.03438448,\n        bonds: 0.0909,\n        gold: -0.03690773,\n        equity: 0.19120533,\n        cape: 15.09\n    },\n    {\n        year:1990,\n        cpi: 127.4,\n        dividends: 0.0327676,\n        bonds: 0.0821,\n        gold: -0.08557742,\n        equity: -0.04259199,\n        cape: 17.05\n    },\n    {\n        year:1991,\n        cpi: 134.6,\n        dividends: 0.03719531,\n        bonds: 0.0809,\n        gold: -0.05705791,\n        equity: 0.27831884,\n        cape: 15.61\n    },\n    {\n        year:1992,\n        cpi: 138.1,\n        dividends: 0.02941742,\n        bonds: 0.0703,\n        gold: 0.17642643,\n        equity: 0.0460248,\n        cape: 19.77\n    },\n    {\n        year:1993,\n        cpi: 142.6,\n        dividends: 0.02852124,\n        bonds: 0.066,\n        gold: -0.02169751,\n        equity: 0.08675873,\n        cape: 20.32\n    },\n    {\n        year:1994,\n        cpi: 146.2,\n        dividends: 0.0266883,\n        bonds: 0.0575,\n        gold: 0.00978474,\n        equity: -0.01636398,\n        cape: 21.41\n    },\n    {\n        year:1995,\n        cpi: 150.3,\n        dividends: 0.02832886,\n        bonds: 0.0778,\n        gold: -0.04651163,\n        equity: 0.32062332,\n        cape: 20.22\n    },\n    {\n        year:1996,\n        cpi: 154.4,\n        dividends: 0.02261206,\n        bonds: 0.0565,\n        gold: -0.22208672,\n        equity: 0.24706227,\n        cape: 24.76\n    },\n    {\n        year:1997,\n        cpi: 159.1,\n        dividends: 0.01951567,\n        bonds: 0.0658,\n        gold: 0.00574813,\n        equity: 0.25728903,\n        cape: 28.33\n    },\n    {\n        year:1998,\n        cpi: 161.6,\n        dividends: 0.01614142,\n        bonds: 0.0554,\n        gold: 0.0053689,\n        equity: 0.29626516,\n        cape: 32.86\n    },\n    {\n        year:1999,\n        cpi: 164.3,\n        dividends: 0.0130395,\n        bonds: 0.0472,\n        gold: -0.06063738,\n        equity: 0.14159533,\n        cape: 40.57\n    },\n    {\n        year:2000,\n        cpi: 168.8,\n        dividends: 0.0116256,\n        bonds: 0.0666,\n        gold: 0.01412067,\n        equity: -0.0631037,\n        cape: 43.77\n    },\n    {\n        year:2001,\n        cpi: 175.1,\n        dividends: 0.01210665,\n        bonds: 0.0516,\n        gold: 0.23960217,\n        equity: -0.14631298,\n        cape: 36.98\n    },\n    {\n        year:2002,\n        cpi: 177.1,\n        dividends: 0.01380155,\n        bonds: 0.0504,\n        gold: 0.21735959,\n        equity: -0.21432017,\n        cape: 30.28\n    },\n    {\n        year:2003,\n        cpi: 181.7,\n        dividends: 0.01799428,\n        bonds: 0.0405,\n        gold: 0.04397843,\n        equity: 0.26419896,\n        cape: 22.9\n    },\n    {\n        year:2004,\n        cpi: 185.2,\n        dividends: 0.01554056,\n        bonds: 0.0415,\n        gold: 0.17768595,\n        equity: 0.04316922,\n        cape: 27.66\n    },\n    {\n        year:2005,\n        cpi: 190.7,\n        dividends: 0.01667781,\n        bonds: 0.0422,\n        gold: 0.23918129,\n        equity: 0.08237614,\n        cape: 26.59\n    },\n    {\n        year:2006,\n        cpi: 198.3,\n        dividends: 0.0175252,\n        bonds: 0.0442,\n        gold: 0.31587227,\n        equity: 0.11373003,\n        cape: 26.47\n    },\n    {\n        year:2007,\n        cpi: 202.416,\n        dividends: 0.01761272,\n        bonds: 0.0476,\n        gold: 0.03974895,\n        equity: -0.03187844,\n        cape: 27.21\n    },\n    {\n        year:2008,\n        cpi: 211.08,\n        dividends: 0.02025008,\n        bonds: 0.0374,\n        gold: 0.2503593,\n        equity: -0.37220401,\n        cape: 24.02\n    },\n    {\n        year:2009,\n        cpi: 211.143,\n        dividends: 0.0323598,\n        bonds: 0.0252,\n        gold: 0.30597701,\n        equity: 0.29806604,\n        cape: 15.17\n    },\n    {\n        year:2010,\n        cpi: 216.687,\n        dividends: 0.01979684,\n        bonds: 0.0373,\n        gold: 0.07797923,\n        equity: 0.14154755,\n        cape: 20.53\n    },\n    {\n        year:2011,\n        cpi: 220.223,\n        dividends: 0.01790346,\n        bonds: 0.0339,\n        gold: 0.08687133,\n        equity: 0.01400259,\n        cape: 22.98\n    },\n    {\n        year:2012,\n        cpi: 226.665,\n        dividends: 0.02055749,\n        bonds: 0.0197,\n        gold: -0.27614183,\n        equity: 0.13826139,\n        cape: 21.21\n    },\n    {\n        year:2013,\n        cpi: 230.28,\n        dividends: 0.0213028,\n        bonds: 0.0191,\n        gold: -0.00435866,\n        equity: 0.22114293,\n        cape: 21.9\n    },\n    {\n        year:2014,\n        cpi: 233.916,\n        dividends: 0.01942536,\n        bonds: 0.0286,\n        gold: -0.11611424,\n        equity: 0.1369433,\n        cape: 24.86\n    },\n    {\n        year:2015,\n        cpi: 233.707,\n        dividends: 0.019671167,\n        bonds: 0.0188,\n        gold: 0.17994340,\n        equity: -0.054028735,\n        cape: 26.49229542\n\t\t},\n    {\n        year:2016,\n        cpi: 236.916,\n        dividends: 0.02270058,\n        bonds: 0.0209,\n        gold: 0.00510098,\n        equity: 0.185822996,\n        cape: 24.2061672\n\t\t},\n    {\n        year:2017,\n        cpi: 242.839,\n        dividends: 0.020186481,\n        bonds: 0.0243,\n        gold: 0.00904448,\n        equity: 0.226221034,\n        cape: 28.06357374\n\t\t},\n    {\n        year:2018,\n        cpi: 247.867,\n        dividends: 0.017666738,\n        bonds: 0.0258,\n        gold: 0.09784074,\n        equity: -0.065384615,\n        cape: 33.30734383\n\t\t},\n    {\n        year:2019,\n        cpi: 251.712,\n        dividends: 0.020766616,\n        bonds: 0.0271,\n        gold: 0,\n        equity: 0.257273694,\n        cape: 28.38016446\n    }\n];\n\nfunction Chart (props) {\n  \n    const [allCycleDataState, setAllCycleDataState] = useState([]);\n\n    const [avgEndValueState, setAvgEndValueState] = useState(0);\n    const [medianEndValueState, setMedianEndValueState] = useState(0);\n    const [minEndValueState, setMinEndValueState] = useState(0);\n    const [maxEndValueState, setMaxEndValueState] = useState(0);\n\n    const [avgSpendState, setAvgSpendState] = useState(0);\n    const [medianSpendState, setMedianSpendState] = useState(0);\n    const [minSpendState, setMinSpendState] = useState(0);\n    const [maxSpendState, setMaxSpendState] = useState(0);\n\n    const [avgReturnsState, setAvgReturnsState] = useState(0);\n    const [medianReturnsState, setMedianReturnsState] = useState(0);\n    const [minReturnsState, setMinReturnsState] = useState(0);\n    const [maxReturnsState, setMaxReturnsState] = useState(0);\n    \n    const [avgApprState, setAvgAppreciationState] = useState(0);\n    const [medianApprState, setMedianAppreciationState] = useState(0);\n    const [minApprState, setMinAppreciationState] = useState(0);\n    const [maxApprState, setMaxAppreciationState] = useState(0);\n    \n    const [numCyclesState, setNumCyclesState] = useState(0);\n    const [numFailsState, setNumFailsState] = useState(0);\n    const [minFailAgeState, setMinFailAgeState] = useState(0);\n    const [medianFailAgeState, setMedianFailAgeState] = useState(0);\n\n    const svgID = 'd3target';\n    const perRunClass = 'perrundata';\n    const hoverLineID = 'hoverLine';\n    const ttWrapID = 'ttwrapper';\n    const ttBackID = 'ttbackground';\n    const ttAgeID = 'ttage';\n    const margin = { top: 40, right: 80, bottom: 60, left: 100 };\n    const totalWidth = 960;\n    const totalHeight = 700;\n    const boundedWidth = totalWidth - margin.left - margin.right;\n    const boundedHeight = totalHeight - margin.top - margin.bottom;\n    const tooltipWidth = 75;\n    const tooltipHeight = 75;\n    const marginTranslate = \"translate(\" + margin.left + \",\" + margin.top + \")\";\n    const plotTranslate = \"translate(\" + margin.left + \",\" + totalHeight + \")\";\n    const portfolioLineColor = \"Blue\";\n    const portfolioFailedLineColor = \"OrangeRed\";\n    const normalStrokeWidth = 1.5;\n    var allCycleMeta = [];\n\n    const getXScale = () => { \n        var xExt = [props.currentage, props.lifeexpectancy];\n        return d3.scaleLinear()\n                    .domain(xExt)\n                    .range([ 0, boundedWidth ]);\n    }\n\n    const getYScale = (rangeMin, rangeMax) => {\n        var yExt = [rangeMin, rangeMax];\n        return d3.scaleLinear()\n                    .domain(yExt)\n                    .range([ boundedHeight, 0 ]);\n    }\n\n    const drawAxes = (svg, xScaleIn, yScaleIn, rangeMin, rangeMax) => {\n \n        svg.append(\"g\")\n            .attr(\"class\", perRunClass)\n            .attr(\"transform\", \"translate(0,\" + boundedHeight + \")\")\n            .call(d3.axisBottom(xScaleIn));\n        svg.append(\"g\")\n            .attr(\"class\", perRunClass)\n            .call(d3.axisLeft(yScaleIn));\n\n        // draw line at zero y\n        var yScale = getYScale(rangeMin, rangeMax);\n        const zeroY = yScale(0.0);\n\n        svg.append(\"g\")\n           .attr(\"class\", perRunClass)\n           .append(\"rect\")\n           .attr(\"pointer-events\", \"none\")\n           .attr(\"stroke-width\", \"2.5px\")\n           .attr(\"stroke\", \"DarkRed\")\n           .attr('x', 0.0)\n           .attr('y', zeroY)\n           .attr(\"height\", \".25px\")\n           .attr(\"width\", boundedWidth);\n    };\n\n    const drawPortfolioLine = (svg, xScaleIn, yScaleIn, oneCycleMeta, oneCycle) => {\n        // Add the equity line\n        svg.append(\"path\")\n            .datum(oneCycle)\n            .attr('class', perRunClass)\n            .attr(\"fill\", \"none\")\n            .attr(\"pointer-events\", \"none\")\n            .style(\"opacity\", 1)\n            .attr(\"stroke\", oneCycleMeta.lineColor)\n            .attr(\"stroke-width\", normalStrokeWidth)\n            .attr(\"d\", d3.line()\n                        .x(function(d) { return xScaleIn(d.age) })\n                        .y(function(d) { return yScaleIn(d.endValue) })\n            );        \n    }\n\n    const prepHoverStuff = (svg) => {\n        const tooltipWrapper = svg\n                .append('g')\n                .attr('id', ttWrapID)\n                .attr('display', 'none');\n        \n        tooltipWrapper.append('rect')\n                        .style('opacity', 0.70)\n                        .attr('id', ttBackID)\n                        .attr('width', tooltipWidth)\n                        .attr('height', tooltipHeight)\n                        .attr(\"pointer-events\", \"none\")\n                        .attr(\"fill\", \"#e8e8e8\"); \n\n        const tooltipText = tooltipWrapper.append('g').append('text');\n\n        tooltipText.attr(\"pointer-events\", \"none\")\n                    .attr('font-weight', 900)\n                    .attr('text-anchor', 'left');\n                    \n        const ageTT = tooltipText\n                .append('tspan')\n                .attr('id', ttAgeID)\n                .attr('x', '5')\n                .attr('y', '5')\n                .attr('dy', '15px')\n                .attr(\"pointer-events\", \"none\");\n\n        const hoverLine = svg\n                .append(\"g\")\n                .append(\"rect\")\n                    .style('opacity', 0)\n                    .attr('id', hoverLineID)\n                    .attr(\"pointer-events\", \"none\")\n                    .attr(\"class\", \"dotted\")\n                    .attr(\"stroke-width\", \"1px\")\n                    .attr(\"width\", \".5px\")\n                    .attr(\"height\", boundedHeight);\n        \n    }\n\n    const getHoverLine = () => {\n        return d3.select('#' + hoverLineID);\n    }\n\n    const getTooltipWrapper = () => {\n        return d3.select('#' + ttWrapID);\n    }\n\n    const getTooltipBackground = () => {\n        return d3.select('#' + ttBackID);\n    }\n\n    const getTooltipAgeSpan = () => {\n        return d3.select('#' + ttAgeID);\n    }\n\n    const handleMouseOver = (e) => {\n        console.log('handleMouseOver');\n        getHoverLine().style('opacity', 1);\n        getTooltipWrapper().attr('display', null);\n    }\n\n    const handleMouseMove = (e) => {\n        console.log('handleMouseMove');\n\n        const bisect = d3.bisector((d) => d.age).left;\n        var xScaleIn = getXScale();\n        const coords = d3.pointer(e);\n        const x0 = xScaleIn.invert(coords[0]);\n        const oneCycleData = allCycleDataState[0];\n        const i = bisect(oneCycleData, x0, 1);\n        const selectedData = oneCycleData[i];\n        const clientX = xScaleIn(selectedData.age);\n        var tooltipX = clientX;\n        \n        // prevent the tooltip from getting clipped.\n        const tooltipWidth = 75;             \n        if (boundedWidth <= (clientX + tooltipWidth)) {\n            tooltipX = clientX - tooltipWidth;\n        }\n        getTooltipAgeSpan().text('age: ' + selectedData.age);\n\n        const ttBounds = getTooltipWrapper().node().getBBox();\n        getTooltipBackground()                \n            .attr('width', ttBounds.width)\n            .attr('height', ttBounds.height);\n\n        getTooltipWrapper().attr(\"transform\", \"translate(\" + tooltipX + \",\" + coords[1] + \")\");  \n\n        getHoverLine().attr('x', clientX);\n        getTooltipWrapper().attr('x', tooltipX)\n    };\n    \n    const handleMouseLeave = () => {\n        console.log('handleMouseLeave');\n        getHoverLine().style('opacity', 0);\n        getTooltipWrapper().attr('display', 'none');\n    };\n\n    const makeCurrency = (num) => {\n        let dollarUSLocale = Intl.NumberFormat('en-US', {\n            style: \"currency\",\n            currency: \"USD\",\n        });\n        return dollarUSLocale.format(num);\n    }\n\n    const makePct = (num) => {\n        return Number( num * 100).toFixed(2) + '%';\n    }\n\n    const cleanupPrev = (svg) => {\n        const perRunSelect = '.' + perRunClass;\n        d3.selectAll(perRunSelect).remove();\n    }\n\n    const dumpCycleData = (oneCycle) => {\n\n        for (var i = 0; i < oneCycle.length; i++) {\n\n            console.log(oneCycle[i].year + \n                ' st:' + makeCurrency(oneCycle[i].beginValue) +\n                ' cpi:' + Number(oneCycle[i].cumulativeCPI).toFixed(2) + \n                ' sp:' + makeCurrency(oneCycle[i].actualSpend) + \n                ' e$:' + makeCurrency(oneCycle[i].equityAppr) +\n                ' d$:' + makeCurrency(oneCycle[i].divAppr) +\n                ' b$:' + makeCurrency(oneCycle[i].bondAppr) +\n                ' f: ' + makeCurrency(oneCycle[i].fees) + \n                ' e: ' + makeCurrency(oneCycle[i].endValue)\n                );\n                \n            }\n\n    }\n\n    const runCycle = (startIndex, numYears) => {\n        var cycleData = [];\n        const stockPct = +(props.stockallocation) / 100;\n        const bondPct = +(props.bondallocation) / 100;\n        const feePct = +(props.feepct) / 100;\n        const ssAge = +(props.ssage);\n        const ssIncome = +(props.ssincome);\n        // calc cumulative CPI relative to beginning of cycle CPI per year\n        const startCPI = histData[startIndex].cpi;\n\n        // TODO : capture end port with and without cumulative CPI \n\n        for(var i = 0; i < numYears; i++){\n            var obj = { \"year\": histData[startIndex + i].year,\n                        \"age\": +(props.currentage) + i,\n                        \"beginValue\": (i > 0) ? cycleData[i - 1].endValue : +(props.portfoliovalue),\n                        \"equityReturn\": histData[startIndex + i].equity,\n                        \"equityAppr\": 0,\n                        \"divAppr\": 0,\n                        \"bondReturn\": histData[startIndex + i].bonds,\n                        \"bondAppr\": 0,\n                        \"aggReturn\": ((histData[startIndex + i].equity * stockPct) +\n                                      (histData[startIndex + i].bonds * bondPct)),\n                        \"cumulativeCPI\": histData[startIndex + i].cpi / startCPI,\n                        \"spend\": +(props.spendvalue),\n                        \"actualSpend\": +(props.spendvalue),\n                        \"fees\": 0,\n                        \"endValue\": 0,\n                        \"adjEndValue\": 0,\n                        \"appr\": 0,\n                      };\n            // adjust spend for cumultative cpi\n            obj.actualSpend = obj.spend * obj.cumulativeCPI;\n            // apply ss adjustment if applicable\n            var adjustment = (ssAge <= obj.age) ? (ssIncome * obj.cumulativeCPI) : 0;\n            obj.actualSpend -= adjustment;\n            // port1 = subtract spend from start port\n            obj.endValue = obj.beginValue - obj.actualSpend;\n            var startStockValue = obj.endValue * stockPct;\n            // e growth = port1 * e-share * e-growth\n            obj.equityAppr = startStockValue * obj.equityReturn;\n            // calc dividends\n            obj.divAppr = startStockValue * histData[startIndex + i].dividends;\n            // b growth = port1 * b=share * b-growth\n            obj.bondAppr = (obj.endValue * bondPct) * obj.bondReturn;\n            // port2 = port1 + e-growth + b-growth\n            obj.appr = obj.equityAppr + obj.divAppr + obj.bondAppr;\n            obj.endValue += obj.appr;\n            // end port = port2 - (fees (based on cpi-adj value))\n            obj.fees = (obj.beginValue + obj.appr) * feePct;\n            obj.endValue -= obj.fees;\n            obj.adjEndValue = obj.endValue * obj.cumulativeCPI;\n\n            cycleData.push(obj);\n\n            if (0 >= obj.endValue) {\n                obj.endValue = obj.adjEndValue = 0;\n                break;\n            }\n\n            // DBG\n            if (0) {\n                dumpCycleData(cycleData);\n                console.log(obj.year + \n                            ' st:' + makeCurrency(obj.beginValue) +\n                            ' cpi:' + Number(obj.cumulativeCPI).toFixed(2) + \n                            ' sp:' + makeCurrency(obj.actualSpend) + \n                            ' e$:' + makeCurrency(obj.equityAppr) +\n                            ' d$:' + makeCurrency(obj.divAppr) +\n                            ' b$:' + makeCurrency(obj.bondAppr) +\n                            ' a$: ' + makeCurrency(obj.appr) +\n                            ' f: ' + makeCurrency(fees) + \n                            ' e: ' + makeCurrency(obj.endValue)\n                            );\n            }\n        }\n        return cycleData;\n    }\n\n    const getAggReturns = () => {\n        var retVal = [];\n        var stockPct = props.stockallocation / 100;\n        var bondPct = props.bondallocation / 100;\n        for (var i = 0; i < histData.length; i++) {\n            retVal[i] = (histData[i].equity * stockPct) +\n                        (histData[i].bonds * bondPct);\n        }\n\n        return retVal;\n    }\n\n    const calcCycleMeta = (oneCycle, lifetime) => {\n        var ext = d3.extent(oneCycle, (d) => d.endValue);\n        var avg = d3.mean(oneCycle, (d) => d.endValue);\n        var med = d3.median(oneCycle, (d) => d.endValue);\n        var totalSpend = d3.sum(oneCycle, (d) => d.actualSpend);\n        var totalAppr = d3.sum(oneCycle, (d) => d.appr);\n\n        var oneMeta = {\n            'startCycleValue': props.portfoliovalue,\n            'endCycleValue': oneCycle[oneCycle.length - 1].endValue,\n            'extent': ext,\n            'mean': avg,\n            'median': med,\n            'totalSpend': totalSpend,\n            'totalAppreciation': totalAppr,\n            'fail': (oneCycle.length < lifetime),\n            'failAge': (oneCycle.length < lifetime) ? \n                       (oneCycle.length + props.currentage) :\n                       0,\n            'lineColor': (oneCycle.length === lifetime) ? portfolioLineColor : portfolioFailedLineColor,\n        };\n\n        return oneMeta;\n    }\n\n    const showSummaryData = (allCycles) => {\n        var ext = d3.extent(allCycleMeta, (d) => d.endCycleValue);\n        var avg = d3.mean(allCycleMeta, (d) => d.endCycleValue);\n        var med = d3.median(allCycleMeta, (d) => d.endCycleValue);\n        var avgSpend = d3.mean(allCycleMeta, (d) => d.totalSpend);        \n        var medianSpend = d3.median(allCycleMeta, (d) => d.totalSpend);\n        var extSpend = d3.extent(allCycleMeta, (d) => d.totalSpend);\n        var aggReturns = getAggReturns();\n        var avgReturns = d3.mean(aggReturns);\n        var medianReturns = d3.median(aggReturns);\n        var extReturns = d3.extent(aggReturns);\n        var avgAppr = d3.mean(allCycleMeta, (d) => d.totalAppreciation);\n        var medianAppr = d3.median(allCycleMeta, (d) => d.totalAppreciation);\n        var extAppr = d3.extent(allCycleMeta, (d) => d.totalAppreciation);\n        var numFails = 0;\n        var minFailAge = props.lifeexpectancy + 1;\n        var failAges = [];\n\n        for (var i = 0; i < allCycleMeta.length; i++) {\n            if (allCycleMeta[i].fail) {\n                minFailAge = Math.min(allCycleMeta[i].failAge, minFailAge);\n                failAges[numFails] = allCycleMeta[i].failAge;\n                numFails++;\n            }\n        }\n\n        setAvgEndValueState(avg);\n        setMedianEndValueState(med);\n        setMinEndValueState(ext[0]);\n        setMaxEndValueState(ext[1]);\n\n        setAvgSpendState(avgSpend);\n        setMedianSpendState(medianSpend);\n        setMinSpendState(extSpend[0]);\n        setMaxSpendState(extSpend[1]);\n\n        setAvgReturnsState(avgReturns);\n        setMedianReturnsState(medianReturns);\n        setMinReturnsState(extReturns[0]);\n        setMaxReturnsState(extReturns[1]);\n\n        setAvgAppreciationState(avgAppr);\n        setMedianAppreciationState(medianAppr);\n        setMinAppreciationState(extAppr[0]);\n        setMaxAppreciationState(extAppr[1]);\n\n        setNumCyclesState(allCycleMeta.length);\n        setNumFailsState(numFails);\n        setMinFailAgeState(minFailAge);\n        setMedianFailAgeState(d3.median(failAges));\n    }\n\n    const calcCycles = (svg) => {\n        // TODO : double-check for off-by-one here - should the lifetime or numCycles get +1?\n        const lifetime = props.lifeexpectancy - props.currentage + 1;\n        const numCycles = (histData.length - lifetime);\n        const startIndex = 0;\n        var portMin = Number.POSITIVE_INFINITY;\n        var portMax = Number.NEGATIVE_INFINITY;\n        var allCycles = [];\n\n        cleanupPrev();\n\n        for (var i = 0; i < numCycles; i++) {\n            var oneCycle = runCycle(startIndex + i, lifetime);\n            var cycleMeta = calcCycleMeta(oneCycle, lifetime);\n            \n            allCycleMeta[i] = cycleMeta;\n            allCycles[i] = oneCycle;\n\n            portMin = Math.min(portMin, cycleMeta.extent[0]);\n            portMax = Math.max(portMax, cycleMeta.extent[1]);\n\n            if (1) {\n                console.log (\n                    i + ': ' + oneCycle[0].year + ' end:' + makeCurrency(cycleMeta.endCycleValue)\n                );\n                if (78 === i) {\n                    dumpCycleData(oneCycle);\n                }\n            }\n    \n        }\n\n        setAllCycleDataState(allCycles);\n        showSummaryData(allCycles);\n\n        const xScale = getXScale();\n        const yScale = getYScale(portMin, portMax);\n\n        drawAxes(svg, xScale, yScale, portMin, portMax);\n        for (i = 0; i < numCycles; i++) {\n            drawPortfolioLine(svg, xScale, yScale, allCycleMeta[i], allCycles[i]);\n        }\n    }\n\n    React.useEffect(() => {\n\n        const svgSelect = '#' + svgID;\n        const svg = d3.select(svgSelect)\n                      .append(\"g\")\n                      .attr(\"transform\", marginTranslate);\n        calcCycles(svg);\n\n        prepHoverStuff(svg);\n        console.log('effect');\n    }, [props] );\n\n    console.log('render');\n    return (\n        <div>\n            <Stack direction=\"row\">\n                <Card>\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                            Summary\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {makePct(1 - (numFailsState / numCyclesState))} success\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {numFailsState} failure of {numCyclesState} cycles                               \n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            Median failure age : {medianFailAgeState}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            Minimum failure age : {minFailAgeState}\n                        </Typography>\n                    </CardContent>\n                </Card>\n                <Card>\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                            $ End Value\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            median : {makeCurrency(medianEndValueState)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            mean : {makeCurrency(avgEndValueState)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            max : {makeCurrency(maxEndValueState)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            min : {makeCurrency(minEndValueState)}\n                        </Typography>\n                    </CardContent>\n                </Card>\n                <Card>\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                            % Returns\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            median : { makePct(medianReturnsState) }\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            mean : { makePct(avgReturnsState) }\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            max : { makePct(maxReturnsState) }\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            min : { makePct(minReturnsState) }\n                        </Typography>\n                    </CardContent>\n                </Card>                \n                <Card>\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                            $ Appreciation\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            median : {makeCurrency(medianApprState)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            mean : {makeCurrency(avgApprState)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            max : {makeCurrency(maxApprState)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            min : {makeCurrency(minApprState)}\n                        </Typography>\n                    </CardContent>\n                </Card>                \n                <Card>\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                            Total Spend\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            median : {makeCurrency(medianSpendState)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            mean : {makeCurrency(avgSpendState)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            max : {makeCurrency(maxSpendState)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            min : {makeCurrency(minSpendState)}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </Stack>\n            <svg id={svgID} \n                    width={totalWidth}\n                    height={totalHeight} \n            >\n                <rect id='trackingRect'\n                    style={{ opacity:0 }}\n                    width={boundedWidth}\n                    height={boundedHeight}\n                    transform={marginTranslate}\n                    fill='LightGrey'\n                    onMouseEnter={handleMouseOver}\n                    onMouseMove={handleMouseMove}\n                    onMouseLeave={handleMouseLeave}\n                />\n            </svg>   \n        </div>\n    );\n};\n\nexport default Chart;\n\n// d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n// tooltip example : https://observablehq.com/@connor-roche/multi-line-chart-focus-context-w-mouseover-tooltip\n"]},"metadata":{},"sourceType":"module"}