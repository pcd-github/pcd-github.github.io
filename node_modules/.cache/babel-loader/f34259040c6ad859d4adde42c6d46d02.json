{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/chart.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { Stack } from \"@mui/material\";\nimport { Card } from \"@mui/material\";\nimport { CardContent } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport * as d3 from \"d3\";\nimport SummaryCards from \"./summary.js\";\nimport EndValueChart from './endvaluechart.js';\nimport \"./chartdata.css\";\nimport { makeCurrency, makePct, getColorStringForRelativeValue, getPerRunClassName, getPortfolioLineClassName, cleanupPrev, findByID } from './common.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst histData = [{\n  year: 1871,\n  cpi: 12.46,\n  dividends: 0.05855856,\n  bonds: 0.0532,\n  gold: 0.02656043,\n  equity: 0.09459459\n}, {\n  year: 1872,\n  cpi: 12.65,\n  dividends: 0.05417695,\n  bonds: 0.0536,\n  gold: -0.01940492,\n  equity: 0.05144033\n}, {\n  year: 1873,\n  cpi: 12.94,\n  dividends: 0.05919765,\n  bonds: 0.0558,\n  gold: 0.01539138,\n  equity: -0.08806262\n}, {\n  year: 1874,\n  cpi: 12.37,\n  dividends: 0.07081545,\n  bonds: 0.0547,\n  gold: 0.01948896,\n  equity: -0.02575107\n}, {\n  year: 1875,\n  cpi: 11.51,\n  dividends: 0.07213656,\n  bonds: 0.0507,\n  gold: -0.0526763,\n  equity: -0.01762115\n}, {\n  year: 1876,\n  cpi: 10.85,\n  dividends: 0.06726457,\n  bonds: 0.0459,\n  gold: -0.0470852,\n  equity: -0.20403587\n}, {\n  year: 1877,\n  cpi: 10.94,\n  dividends: 0.08191549,\n  bonds: 0.0445,\n  gold: -0.02635294,\n  equity: -0.08450704\n}, {\n  year: 1878,\n  cpi: 9.23,\n  dividends: 0.05821538,\n  bonds: 0.0434,\n  gold: -0.00096665,\n  equity: 0.10153846\n}, {\n  year: 1879,\n  cpi: 8.28,\n  dividends: 0.05075419,\n  bonds: 0.0422,\n  gold: 0,\n  equity: 0.4273743\n}, {\n  year: 1880,\n  cpi: 9.99,\n  dividends: 0.04011742,\n  bonds: 0.0402,\n  gold: 0,\n  equity: 0.21135029\n}, {\n  year: 1881,\n  cpi: 9.42,\n  dividends: 0.04281099,\n  bonds: 0.037,\n  gold: 0,\n  equity: -0.04361874\n}, {\n  year: 1882,\n  cpi: 10.18,\n  dividends: 0.05405405,\n  bonds: 0.0362,\n  gold: 0,\n  equity: -0.01858108\n}, {\n  year: 1883,\n  cpi: 9.99,\n  dividends: 0.05521515,\n  bonds: 0.0363,\n  gold: 0,\n  equity: -0.10843373\n}, {\n  year: 1884,\n  cpi: 9.23,\n  dividends: 0.06337838,\n  bonds: 0.0362,\n  gold: 0,\n  equity: -0.18146718\n}, {\n  year: 1885,\n  cpi: 8.28,\n  dividends: 0.07174528,\n  bonds: 0.0352,\n  gold: 0,\n  equity: 0.22641509\n}, {\n  year: 1886,\n  cpi: 7.99,\n  dividends: 0.04582692,\n  bonds: 0.0337,\n  gold: 0,\n  equity: 0.07307692\n}, {\n  year: 1887,\n  cpi: 7.99,\n  dividends: 0.03987455,\n  bonds: 0.0352,\n  gold: 0,\n  equity: -0.0483871\n}, {\n  year: 1888,\n  cpi: 8.37,\n  dividends: 0.04676083,\n  bonds: 0.0367,\n  gold: 0,\n  equity: -0.01318267\n}, {\n  year: 1889,\n  cpi: 7.99,\n  dividends: 0.04374046,\n  bonds: 0.0345,\n  gold: 0,\n  equity: 0.02671756\n}, {\n  year: 1890,\n  cpi: 7.61,\n  dividends: 0.04089219,\n  bonds: 0.0342,\n  gold: 0,\n  equity: -0.10037175\n}, {\n  year: 1891,\n  cpi: 7.8,\n  dividends: 0.04545455,\n  bonds: 0.0362,\n  gold: 0,\n  equity: 0.13842975\n}, {\n  year: 1892,\n  cpi: 7.33,\n  dividends: 0.04023593,\n  bonds: 0.036,\n  gold: 0,\n  equity: 0.01814882\n}, {\n  year: 1893,\n  cpi: 7.9,\n  dividends: 0.04292335,\n  bonds: 0.0375,\n  gold: 0,\n  equity: -0.22994652\n}, {\n  year: 1894,\n  cpi: 6.85,\n  dividends: 0.05710648,\n  bonds: 0.037,\n  gold: 0,\n  equity: -0.0162037\n}, {\n  year: 1895,\n  cpi: 6.57,\n  dividends: 0.04901176,\n  bonds: 0.0346,\n  gold: 0,\n  equity: 0.00470588\n}, {\n  year: 1896,\n  cpi: 6.66,\n  dividends: 0.04430913,\n  bonds: 0.036,\n  gold: 0,\n  equity: -0.0117096\n}, {\n  year: 1897,\n  cpi: 6.47,\n  dividends: 0.04265403,\n  bonds: 0.034,\n  gold: 0,\n  equity: 0.1563981\n}, {\n  year: 1898,\n  cpi: 6.66,\n  dividends: 0.03723361,\n  bonds: 0.0335,\n  gold: 0,\n  equity: 0.24590164\n}, {\n  year: 1899,\n  cpi: 6.76,\n  dividends: 0.03302632,\n  bonds: 0.031,\n  gold: 0,\n  equity: 0.00328947\n}, {\n  year: 1900,\n  cpi: 7.9,\n  dividends: 0.03565574,\n  bonds: 0.0315,\n  gold: 0,\n  equity: 0.15901639\n}, {\n  year: 1901,\n  cpi: 7.71,\n  dividends: 0.04267327,\n  bonds: 0.031,\n  gold: 0,\n  equity: 0.14851485\n}, {\n  year: 1902,\n  cpi: 7.9,\n  dividends: 0.03950739,\n  bonds: 0.0318,\n  gold: 0,\n  equity: 0.04187192\n}, {\n  year: 1903,\n  cpi: 8.66,\n  dividends: 0.03920804,\n  bonds: 0.033,\n  gold: 0,\n  equity: -0.21040189\n}, {\n  year: 1904,\n  cpi: 8.28,\n  dividends: 0.0519012,\n  bonds: 0.034,\n  gold: 0,\n  equity: 0.26197605\n}, {\n  year: 1905,\n  cpi: 8.47,\n  dividends: 0.03697509,\n  bonds: 0.0348,\n  gold: 0,\n  equity: 0.17081851\n}, {\n  year: 1906,\n  cpi: 8.47,\n  dividends: 0.03402229,\n  bonds: 0.0343,\n  gold: 0,\n  equity: -0.03140831\n}, {\n  year: 1907,\n  cpi: 8.85,\n  dividends: 0.04218619,\n  bonds: 0.0367,\n  gold: 0,\n  equity: -0.2834728\n}, {\n  year: 1908,\n  cpi: 8.66,\n  dividends: 0.06375182,\n  bonds: 0.0387,\n  gold: 0,\n  equity: 0.32262774\n}, {\n  year: 1909,\n  cpi: 8.94,\n  dividends: 0.04451435,\n  bonds: 0.0376,\n  gold: 0,\n  equity: 0.11258278\n}, {\n  year: 1910,\n  cpi: 9.9,\n  dividends: 0.04389881,\n  bonds: 0.0391,\n  gold: 0,\n  equity: -0.08035714\n}, {\n  year: 1911,\n  cpi: 9.23,\n  dividends: 0.05070119,\n  bonds: 0.0398,\n  gold: 0,\n  equity: -0.01618123\n}, {\n  year: 1912,\n  cpi: 9.13,\n  dividends: 0.05162281,\n  bonds: 0.0401,\n  gold: 0,\n  equity: 0.01973684\n}, {\n  year: 1913,\n  cpi: 9.8,\n  dividends: 0.0516129,\n  bonds: 0.0445,\n  gold: 0,\n  equity: -0.1\n}, {\n  year: 1914,\n  cpi: 10,\n  dividends: 0.0567503,\n  bonds: 0.0416,\n  gold: 0,\n  equity: -0.10633214\n}, {\n  year: 1915,\n  cpi: 10.1,\n  dividends: 0.05625668,\n  bonds: 0.0424,\n  gold: 0,\n  equity: 0.2473262\n}, {\n  year: 1916,\n  cpi: 10.4,\n  dividends: 0.04724544,\n  bonds: 0.0405,\n  gold: 0,\n  equity: 0.02572347\n}, {\n  year: 1917,\n  cpi: 11.7,\n  dividends: 0.05964472,\n  bonds: 0.0423,\n  gold: 0,\n  equity: -0.24660397\n}, {\n  year: 1918,\n  cpi: 14,\n  dividends: 0.09431345,\n  bonds: 0.0457,\n  gold: 0,\n  equity: 0.0887656\n}, {\n  year: 1919,\n  cpi: 16.5,\n  dividends: 0.07219108,\n  bonds: 0.045,\n  gold: 0,\n  equity: 0.12484076\n}, {\n  year: 1920,\n  cpi: 19.3,\n  dividends: 0.05983012,\n  bonds: 0.0497,\n  gold: 0,\n  equity: -0.19479049\n}, {\n  year: 1921,\n  cpi: 19,\n  dividends: 0.07113924,\n  bonds: 0.0509,\n  gold: 0,\n  equity: 0.02672293\n}, {\n  year: 1922,\n  cpi: 16.9,\n  dividends: 0.06358904,\n  bonds: 0.043,\n  gold: 0,\n  equity: 0.21917808\n}, {\n  year: 1923,\n  cpi: 16.8,\n  dividends: 0.05749438,\n  bonds: 0.0436,\n  gold: 0,\n  equity: -0.00786517\n}, {\n  year: 1924,\n  cpi: 17.3,\n  dividends: 0.06021518,\n  bonds: 0.0406,\n  gold: 0,\n  equity: 0.198188\n}, {\n  year: 1925,\n  cpi: 17.3,\n  dividends: 0.05238185,\n  bonds: 0.0386,\n  gold: 0,\n  equity: 0.19565217\n}, {\n  year: 1926,\n  cpi: 17.9,\n  dividends: 0.04802372,\n  bonds: 0.0368,\n  gold: 0,\n  equity: 0.05928854\n}, {\n  year: 1927,\n  cpi: 17.5,\n  dividends: 0.05199254,\n  bonds: 0.0334,\n  gold: 0,\n  equity: 0.30820896\n}, {\n  year: 1928,\n  cpi: 17.3,\n  dividends: 0.0443069,\n  bonds: 0.0333,\n  gold: 0,\n  equity: 0.41814033\n}, {\n  year: 1929,\n  cpi: 17.1,\n  dividends: 0.03459372,\n  bonds: 0.036,\n  gold: 0,\n  equity: -0.12670957\n}, {\n  year: 1930,\n  cpi: 17.1,\n  dividends: 0.04471672,\n  bonds: 0.0329,\n  gold: 0,\n  equity: -0.26393367\n}, {\n  year: 1931,\n  cpi: 15.9,\n  dividends: 0.06049437,\n  bonds: 0.0334,\n  gold: 0,\n  equity: -0.48060075\n}, {\n  year: 1932,\n  cpi: 14.3,\n  dividends: 0.09557831,\n  bonds: 0.0368,\n  gold: 0.56361877,\n  equity: -0.14578313\n}, {\n  year: 1933,\n  cpi: 12.9,\n  dividends: 0.06981664,\n  bonds: 0.0331,\n  gold: 0.08292079,\n  equity: 0.48660085\n}, {\n  year: 1934,\n  cpi: 13.2,\n  dividends: 0.04182163,\n  bonds: 0.0312,\n  gold: 0,\n  equity: -0.12144213\n}, {\n  year: 1935,\n  cpi: 13.6,\n  dividends: 0.04859611,\n  bonds: 0.0279,\n  gold: 0,\n  equity: 0.48596112\n}, {\n  year: 1936,\n  cpi: 13.8,\n  dividends: 0.03488372,\n  bonds: 0.0265,\n  gold: 0,\n  equity: 0.27834302\n}, {\n  year: 1937,\n  cpi: 14.1,\n  dividends: 0.04150085,\n  bonds: 0.0268,\n  gold: 0,\n  equity: -0.35702103\n}, {\n  year: 1938,\n  cpi: 14.2,\n  dividends: 0.07014439,\n  bonds: 0.0256,\n  gold: 0,\n  equity: 0.10521662\n}, {\n  year: 1939,\n  cpi: 14,\n  dividends: 0.04106664,\n  bonds: 0.0236,\n  gold: -0.01428571,\n  equity: -0.016\n}, {\n  year: 1940,\n  cpi: 13.9,\n  dividends: 0.05067748,\n  bonds: 0.0221,\n  gold: 0.02898551,\n  equity: -0.14227642\n}, {\n  year: 1941,\n  cpi: 14.1,\n  dividends: 0.06382303,\n  bonds: 0.0195,\n  gold: 0,\n  equity: -0.1535545\n}, {\n  year: 1942,\n  cpi: 15.7,\n  dividends: 0.07876069,\n  bonds: 0.0246,\n  gold: 0.02816901,\n  equity: 0.12989922\n}, {\n  year: 1943,\n  cpi: 16.9,\n  dividends: 0.05847374,\n  bonds: 0.0247,\n  gold: -0.00684932,\n  equity: 0.17443013\n}, {\n  year: 1944,\n  cpi: 17.4,\n  dividends: 0.05175806,\n  bonds: 0.0248,\n  gold: 0.02758621,\n  equity: 0.13839662\n}, {\n  year: 1945,\n  cpi: 17.8,\n  dividends: 0.04768962,\n  bonds: 0.0237,\n  gold: 0.02684564,\n  equity: 0.3358043\n}, {\n  year: 1946,\n  cpi: 18.2,\n  dividends: 0.03699595,\n  bonds: 0.0219,\n  gold: 0.12418301,\n  equity: -0.15593785\n}, {\n  year: 1947,\n  cpi: 21.5,\n  dividends: 0.04689895,\n  bonds: 0.0225,\n  gold: -0.02325581,\n  equity: -0.02498356\n}, {\n  year: 1948,\n  cpi: 23.7,\n  dividends: 0.05686669,\n  bonds: 0.0244,\n  gold: -0.03571429,\n  equity: 0.03573837\n}, {\n  year: 1949,\n  cpi: 24,\n  dividends: 0.06163197,\n  bonds: 0.0231,\n  gold: -0.00617284,\n  equity: 0.09895833\n}, {\n  year: 1950,\n  cpi: 23.5,\n  dividends: 0.06812796,\n  bonds: 0.0232,\n  gold: -0.00621118,\n  equity: 0.25651659\n}, {\n  year: 1951,\n  cpi: 25.4,\n  dividends: 0.07009288,\n  bonds: 0.0257,\n  gold: -0.0325,\n  equity: 0.14049976\n}, {\n  year: 1952,\n  cpi: 26.5,\n  dividends: 0.05842621,\n  bonds: 0.0268,\n  gold: -0.08268734,\n  equity: 0.0822654\n}, {\n  year: 1953,\n  cpi: 26.6,\n  dividends: 0.05385791,\n  bonds: 0.0283,\n  gold: -0.00704225,\n  equity: -0.02750191\n}, {\n  year: 1954,\n  cpi: 26.9,\n  dividends: 0.05721406,\n  bonds: 0.0248,\n  gold: -0.00283688,\n  equity: 0.3982718\n}, {\n  year: 1955,\n  cpi: 26.7,\n  dividends: 0.04344579,\n  bonds: 0.0261,\n  gold: 0.00142248,\n  equity: 0.24016854\n}, {\n  year: 1956,\n  cpi: 26.8,\n  dividends: 0.03782559,\n  bonds: 0.029,\n  gold: 0.00142046,\n  equity: 0.02899207\n}, {\n  year: 1957,\n  cpi: 27.6,\n  dividends: 0.03822738,\n  bonds: 0.0346,\n  gold: 0,\n  equity: -0.09487123\n}, {\n  year: 1958,\n  cpi: 28.6,\n  dividends: 0.04336892,\n  bonds: 0.0309,\n  gold: 0,\n  equity: 0.35262646\n}, {\n  year: 1959,\n  cpi: 29,\n  dividends: 0.03158342,\n  bonds: 0.0402,\n  gold: 0.03546099,\n  equity: 0.04332974\n}, {\n  year: 1960,\n  cpi: 29.3,\n  dividends: 0.03216733,\n  bonds: 0.0472,\n  gold: -0.02739726,\n  equity: 0.02912287\n}, {\n  year: 1961,\n  cpi: 29.8,\n  dividends: 0.03259662,\n  bonds: 0.0384,\n  gold: -0.00422535,\n  equity: 0.15656397\n}, {\n  year: 1962,\n  cpi: 30,\n  dividends: 0.02934226,\n  bonds: 0.0408,\n  gold: -0.00282885,\n  equity: -0.05805704\n}, {\n  year: 1963,\n  cpi: 30.4,\n  dividends: 0.03284153,\n  bonds: 0.0383,\n  gold: 0.00283688,\n  equity: 0.17506917\n}, {\n  year: 1964,\n  cpi: 30.9,\n  dividends: 0.03004147,\n  bonds: 0.0417,\n  gold: 0.00424328,\n  equity: 0.1264879\n}, {\n  year: 1965,\n  cpi: 31.2,\n  dividends: 0.02922283,\n  bonds: 0.0419,\n  gold: -0.0028169,\n  equity: 0.08360427\n}, {\n  year: 1966,\n  cpi: 31.8,\n  dividends: 0.02936134,\n  bonds: 0.0461,\n  gold: 0.00282486,\n  equity: -0.09504929\n}, {\n  year: 1967,\n  cpi: 32.9,\n  dividends: 0.03410302,\n  bonds: 0.0458,\n  gold: 0.22535211,\n  equity: 0.12539964\n}, {\n  year: 1968,\n  cpi: 34.1,\n  dividends: 0.03082912,\n  bonds: 0.0553,\n  gold: -0.05747126,\n  equity: 0.07323232\n}, {\n  year: 1969,\n  cpi: 35.6,\n  dividends: 0.03019608,\n  bonds: 0.0604,\n  gold: -0.05121951,\n  equity: -0.11460784\n}, {\n  year: 1970,\n  cpi: 37.8,\n  dividends: 0.03502746,\n  bonds: 0.0779,\n  gold: 0.14652956,\n  equity: 0.03521205\n}, {\n  year: 1971,\n  cpi: 39.8,\n  dividends: 0.03347952,\n  bonds: 0.0624,\n  gold: 0.43139014,\n  equity: 0.10493101\n}, {\n  year: 1972,\n  cpi: 41.1,\n  dividends: 0.02971926,\n  bonds: 0.0595,\n  gold: 0.6679198,\n  equity: 0.14617619\n}, {\n  year: 1973,\n  cpi: 42.6,\n  dividends: 0.02666106,\n  bonds: 0.0646,\n  gold: 0.72586401,\n  equity: -0.18826014\n}, {\n  year: 1974,\n  cpi: 46.6,\n  dividends: 0.03537613,\n  bonds: 0.0699,\n  gold: -0.24204168,\n  equity: -0.24503173\n}, {\n  year: 1975,\n  cpi: 52.1,\n  dividends: 0.04993564,\n  bonds: 0.075,\n  gold: -0.03962955,\n  equity: 0.33489526\n}, {\n  year: 1976,\n  cpi: 55.6,\n  dividends: 0.03802736,\n  bonds: 0.0774,\n  gold: 0.2043059,\n  equity: 0.0716498\n}, {\n  year: 1977,\n  cpi: 58.5,\n  dividends: 0.03946696,\n  bonds: 0.0721,\n  gold: 0.29174426,\n  equity: -0.1305395\n}, {\n  year: 1978,\n  cpi: 62.5,\n  dividends: 0.05222526,\n  bonds: 0.0796,\n  gold: 0.99999999,\n  equity: 0.10481994\n}, {\n  year: 1979,\n  cpi: 68.3,\n  dividends: 0.05128202,\n  bonds: 0.091,\n  gold: 0.29607843,\n  equity: 0.11222545\n}, {\n  year: 1980,\n  cpi: 77.8,\n  dividends: 0.05139766,\n  bonds: 0.108,\n  gold: -0.32761809,\n  equity: 0.19927863\n}, {\n  year: 1981,\n  cpi: 87,\n  dividends: 0.04661654,\n  bonds: 0.1257,\n  gold: 0.1175,\n  equity: -0.11804511\n}, {\n  year: 1982,\n  cpi: 94.3,\n  dividends: 0.05677749,\n  bonds: 0.1459,\n  gold: -0.14988814,\n  equity: 0.23017903\n}, {\n  year: 1983,\n  cpi: 97.8,\n  dividends: 0.04770152,\n  bonds: 0.1046,\n  gold: -0.18947368,\n  equity: 0.15315315\n}, {\n  year: 1984,\n  cpi: 101.9,\n  dividends: 0.04278846,\n  bonds: 0.1167,\n  gold: 0.06168831,\n  equity: 0.03125\n}, {\n  year: 1985,\n  cpi: 105.5,\n  dividends: 0.04413362,\n  bonds: 0.1138,\n  gold: 0.19541284,\n  equity: 0.21328671\n}, {\n  year: 1986,\n  cpi: 109.6,\n  dividends: 0.03813641,\n  bonds: 0.0919,\n  gold: 0.24456383,\n  equity: 0.27041306\n}, {\n  year: 1987,\n  cpi: 111.2,\n  dividends: 0.03137996,\n  bonds: 0.0708,\n  gold: -0.15693731,\n  equity: -0.05293006\n}, {\n  year: 1988,\n  cpi: 115.7,\n  dividends: 0.03535597,\n  bonds: 0.0867,\n  gold: -0.02230891,\n  equity: 0.13932136\n}, {\n  year: 1989,\n  cpi: 121.1,\n  dividends: 0.03438448,\n  bonds: 0.0909,\n  gold: -0.03690773,\n  equity: 0.19120533\n}, {\n  year: 1990,\n  cpi: 127.4,\n  dividends: 0.0327676,\n  bonds: 0.0821,\n  gold: -0.08557742,\n  equity: -0.04259199\n}, {\n  year: 1991,\n  cpi: 134.6,\n  dividends: 0.03719531,\n  bonds: 0.0809,\n  gold: -0.05705791,\n  equity: 0.27831884\n}, {\n  year: 1992,\n  cpi: 138.1,\n  dividends: 0.02941742,\n  bonds: 0.0703,\n  gold: 0.17642643,\n  equity: 0.0460248\n}, {\n  year: 1993,\n  cpi: 142.6,\n  dividends: 0.02852124,\n  bonds: 0.066,\n  gold: -0.02169751,\n  equity: 0.08675873\n}, {\n  year: 1994,\n  cpi: 146.2,\n  dividends: 0.0266883,\n  bonds: 0.0575,\n  gold: 0.00978474,\n  equity: -0.01636398\n}, {\n  year: 1995,\n  cpi: 150.3,\n  dividends: 0.02832886,\n  bonds: 0.0778,\n  gold: -0.04651163,\n  equity: 0.32062332\n}, {\n  year: 1996,\n  cpi: 154.4,\n  dividends: 0.02261206,\n  bonds: 0.0565,\n  gold: -0.22208672,\n  equity: 0.24706227\n}, {\n  year: 1997,\n  cpi: 159.1,\n  dividends: 0.01951567,\n  bonds: 0.0658,\n  gold: 0.00574813,\n  equity: 0.25728903\n}, {\n  year: 1998,\n  cpi: 161.6,\n  dividends: 0.01614142,\n  bonds: 0.0554,\n  gold: 0.0053689,\n  equity: 0.29626516\n}, {\n  year: 1999,\n  cpi: 164.3,\n  dividends: 0.0130395,\n  bonds: 0.0472,\n  gold: -0.06063738,\n  equity: 0.14159533\n}, {\n  year: 2000,\n  cpi: 168.8,\n  dividends: 0.0116256,\n  bonds: 0.0666,\n  gold: 0.01412067,\n  equity: -0.0631037\n}, {\n  year: 2001,\n  cpi: 175.1,\n  dividends: 0.01210665,\n  bonds: 0.0516,\n  gold: 0.23960217,\n  equity: -0.14631298\n}, {\n  year: 2002,\n  cpi: 177.1,\n  dividends: 0.01380155,\n  bonds: 0.0504,\n  gold: 0.21735959,\n  equity: -0.21432017\n}, {\n  year: 2003,\n  cpi: 181.7,\n  dividends: 0.01799428,\n  bonds: 0.0405,\n  gold: 0.04397843,\n  equity: 0.26419896\n}, {\n  year: 2004,\n  cpi: 185.2,\n  dividends: 0.01554056,\n  bonds: 0.0415,\n  gold: 0.17768595,\n  equity: 0.04316922\n}, {\n  year: 2005,\n  cpi: 190.7,\n  dividends: 0.01667781,\n  bonds: 0.0422,\n  gold: 0.23918129,\n  equity: 0.08237614\n}, {\n  year: 2006,\n  cpi: 198.3,\n  dividends: 0.0175252,\n  bonds: 0.0442,\n  gold: 0.31587227,\n  equity: 0.11373003\n}, {\n  year: 2007,\n  cpi: 202.416,\n  dividends: 0.01761272,\n  bonds: 0.0476,\n  gold: 0.03974895,\n  equity: -0.03187844\n}, {\n  year: 2008,\n  cpi: 211.08,\n  dividends: 0.02025008,\n  bonds: 0.0374,\n  gold: 0.2503593,\n  equity: -0.37220401\n}, {\n  year: 2009,\n  cpi: 211.143,\n  dividends: 0.0323598,\n  bonds: 0.0252,\n  gold: 0.30597701,\n  equity: 0.29806604\n}, {\n  year: 2010,\n  cpi: 216.687,\n  dividends: 0.01979684,\n  bonds: 0.0373,\n  gold: 0.07797923,\n  equity: 0.14154755\n}, {\n  year: 2011,\n  cpi: 220.223,\n  dividends: 0.01790346,\n  bonds: 0.0339,\n  gold: 0.08687133,\n  equity: 0.01400259\n}, {\n  year: 2012,\n  cpi: 226.665,\n  dividends: 0.02055749,\n  bonds: 0.0197,\n  gold: -0.27614183,\n  equity: 0.13826139\n}, {\n  year: 2013,\n  cpi: 230.28,\n  dividends: 0.0213028,\n  bonds: 0.0191,\n  gold: -0.00435866,\n  equity: 0.22114293\n}, {\n  year: 2014,\n  cpi: 233.916,\n  dividends: 0.01942536,\n  bonds: 0.0286,\n  gold: -0.11611424,\n  equity: 0.1369433\n}, {\n  year: 2015,\n  cpi: 233.707,\n  dividends: 0.019671167,\n  bonds: 0.0188,\n  gold: 0.17994340,\n  equity: -0.054028735229542\n}, {\n  year: 2016,\n  cpi: 236.916,\n  dividends: 0.02270058,\n  bonds: 0.0209,\n  gold: 0.00510098,\n  equity: 0.18582299661672\n}, {\n  year: 2017,\n  cpi: 242.839,\n  dividends: 0.020186481,\n  bonds: 0.0243,\n  gold: 0.00904448,\n  equity: 0.226221034357374\n}, {\n  year: 2018,\n  cpi: 247.867,\n  dividends: 0.017666738,\n  bonds: 0.0258,\n  gold: 0.09784074,\n  equity: -0.065384615734383\n}, {\n  year: 2019,\n  cpi: 251.712,\n  dividends: 0.020766616,\n  bonds: 0.0271,\n  gold: 0,\n  equity: 0.257273694016446\n}, {\n  year: 2020,\n  cpi: 257.9710,\n  dividends: 0.01790,\n  bonds: 0.01760,\n  gold: 0,\n  equity: 0.157265\n}];\n\nfunction Chart(props) {\n  _s();\n\n  const [allCycleDataState, setAllCycleDataState] = useState([]);\n  const [allCycleMetaState, setAllCycleMetaState] = useState([]);\n  const [avgAdjEndValueState, setAvgAdjEndValueState] = useState(0);\n  const [medianAdjEndValueState, setMedianAdjEndValueState] = useState(0);\n  const [minAdjEndValueState, setMinAdjEndValueState] = useState(0);\n  const [maxAdjEndValueState, setMaxAdjEndValueState] = useState(0);\n  const [avgSpendState, setAvgSpendState] = useState(0);\n  const [medianSpendState, setMedianSpendState] = useState(0);\n  const [minSpendState, setMinSpendState] = useState(0);\n  const [maxSpendState, setMaxSpendState] = useState(0);\n  const [avgReturnsState, setAvgReturnsState] = useState(0);\n  const [medianReturnsState, setMedianReturnsState] = useState(0);\n  const [minReturnsState, setMinReturnsState] = useState(0);\n  const [maxReturnsState, setMaxReturnsState] = useState(0);\n  const [avgAdjApprState, setAvgAdjAppreciationState] = useState(0);\n  const [medianAdjApprState, setMedianAdjAppreciationState] = useState(0);\n  const [minAdjApprState, setMinAdjAppreciationState] = useState(0);\n  const [maxAdjApprState, setMaxAdjAppreciationState] = useState(0);\n  const [numCyclesState, setNumCyclesState] = useState(0);\n  const [numFailsState, setNumFailsState] = useState(0);\n  const [minFailAgeState, setMinFailAgeState] = useState(0);\n  const [medianFailAgeState, setMedianFailAgeState] = useState(0);\n  const svgCycleChartID = 'd3cycletarget';\n  const perRunClass = getPerRunClassName();\n  const hoverLineID = 'hoverLine';\n  const ttWrapID = 'ttwrapper';\n  const ttBackID = 'ttbackground';\n  const ttAgeID = 'ttage';\n  const margin = {\n    top: 40,\n    right: 65,\n    bottom: 40,\n    left: 65\n  };\n  const totalWidth = 960;\n  const totalHeight = 500;\n  const boundedWidth = totalWidth - margin.left - margin.right;\n  const boundedHeight = totalHeight - margin.top - margin.bottom;\n  const tooltipWidth = 75;\n  const tooltipHeight = 75;\n  const marginTranslate = \"translate(\" + margin.left + \",\" + margin.top + \")\";\n  const normalStrokeWidth = 1.5;\n  var allCycleMeta = [];\n\n  const getXScale = () => {\n    var xExt = [props.currentage, props.lifeexpectancy];\n    return d3.scaleLinear().domain(xExt).range([0, boundedWidth]);\n  };\n\n  const getYScale = (rangeMin, rangeMax) => {\n    var yExt = [rangeMin, rangeMax];\n    return d3.scaleLinear().domain(yExt).range([boundedHeight, 0]);\n  };\n\n  const drawAxes = (svg, xScaleIn, yScaleIn, rangeMin, rangeMax) => {\n    svg.append(\"g\").attr(\"class\", perRunClass).attr(\"transform\", \"translate(0,\" + boundedHeight + \")\").call(d3.axisBottom(xScaleIn));\n    svg.append(\"g\").attr(\"class\", perRunClass).call(d3.axisLeft(yScaleIn));\n  };\n\n  const drawPortfolioLine = (svg, xScaleIn, yScaleIn, oneCycleMeta, oneCycle) => {\n    // Add the equity line\n    const classNames = perRunClass + ' ' + getPortfolioLineClassName() + ' ' + oneCycleMeta.lineColor;\n    svg.append(\"path\").datum(oneCycle).attr('id', oneCycleMeta.startYear).attr('class', classNames).attr(\"fill\", \"none\").attr(\"pointer-events\", \"none\").style(\"opacity\", 1).attr(\"stroke\", oneCycleMeta.lineColor).attr(\"stroke-width\", normalStrokeWidth).attr(\"d\", d3.line().x(function (d) {\n      return xScaleIn(d.age);\n    }).y(function (d) {\n      return yScaleIn(d.adjEndValue);\n    }));\n  };\n\n  const prepHoverStuff = svg => {\n    const tooltipWrapper = svg.append('g').attr('id', ttWrapID).attr('display', 'none');\n    tooltipWrapper.append('rect').style('opacity', 0.70).attr('id', ttBackID).attr('width', tooltipWidth).attr('height', tooltipHeight).attr(\"pointer-events\", \"none\").attr(\"fill\", \"#e8e8e8\");\n    const tooltipText = tooltipWrapper.append('g').append('text');\n    tooltipText.attr(\"pointer-events\", \"none\").attr('font-weight', 900).attr('text-anchor', 'left');\n    tooltipText.append('tspan').attr('id', ttAgeID).attr('x', '5').attr('y', '5').attr('dy', '15px').attr(\"pointer-events\", \"none\");\n    svg.append(\"g\").append(\"rect\").style('opacity', 0).attr('id', hoverLineID).attr(\"pointer-events\", \"none\").attr(\"class\", \"dotted\").attr(\"stroke-width\", \"1px\").attr(\"width\", \".5px\").attr(\"height\", boundedHeight);\n  };\n\n  const getHoverLine = () => {\n    return findByID(hoverLineID);\n  };\n\n  const getTooltipWrapper = () => {\n    return findByID(ttWrapID);\n  };\n\n  const getTooltipBackground = () => {\n    return findByID(ttBackID);\n  };\n\n  const getTooltipAgeSpan = () => {\n    return findByID(ttAgeID);\n  };\n\n  const handleMouseOver = e => {\n    getHoverLine().style('opacity', 1);\n    getTooltipWrapper().attr('display', null);\n  };\n\n  const handleMouseMove = e => {\n    const bisect = d3.bisector(d => d.age).left;\n    var xScaleIn = getXScale();\n    const coords = d3.pointer(e);\n    const x0 = xScaleIn.invert(coords[0]);\n    const oneCycleData = allCycleDataState[0];\n    const i = bisect(oneCycleData, x0, 1);\n    const selectedData = oneCycleData[i];\n    const clientX = xScaleIn(selectedData.age);\n    var tooltipX = clientX; // prevent the tooltip from getting clipped.\n\n    const tooltipWidth = 75;\n\n    if (boundedWidth <= clientX + tooltipWidth) {\n      tooltipX = clientX - tooltipWidth;\n    }\n\n    getTooltipAgeSpan().text('age: ' + selectedData.age);\n    const ttBounds = getTooltipWrapper().node().getBBox();\n    getTooltipBackground().attr('width', ttBounds.width).attr('height', ttBounds.height);\n    getTooltipWrapper().attr(\"transform\", \"translate(\" + tooltipX + \",\" + coords[1] + \")\");\n    getHoverLine().attr('x', clientX);\n    getTooltipWrapper().attr('x', tooltipX);\n  };\n\n  const handleMouseLeave = () => {\n    getHoverLine().style('opacity', 0);\n    getTooltipWrapper().attr('display', 'none');\n  };\n  /*\n  const dumpCycleData = (oneCycle) => {\n      for (var i = 0; i < oneCycle.length; i++) {\n           console.log(oneCycle[i].year + \n              ' st:' + makeCurrency(oneCycle[i].beginValue) +\n              ' cpi:' + Number(oneCycle[i].cumulativeCPI).toFixed(2) + \n              ' sp:' + makeCurrency(oneCycle[i].actualSpend) + \n              ' e$:' + makeCurrency(oneCycle[i].equityAppr) +\n              ' d$:' + makeCurrency(oneCycle[i].divAppr) +\n              ' b$:' + makeCurrency(oneCycle[i].bondAppr) +\n              ' f$: ' + makeCurrency(oneCycle[i].fees) + \n              ' ae$: ' + makeCurrency(oneCycle[i].adjEndValue)\n              );\n      }\n  }\n   */\n\n\n  const calcBondYield = (bondStake, histIndex) => {\n    var retValue = 0; // if we're at the end of the cycle, use the simplified calculation\n\n    if (histData.length <= histIndex + 1) {\n      retValue = bondStake * histData[histIndex].bonds;\n    } else {\n      var bg1 = (1 - Math.pow(1 + histData[histIndex + 1].bonds, -9)) * histData[histIndex].bonds;\n      bg1 = bg1 / histData[histIndex + 1].bonds;\n      var bg2 = 1 / Math.pow(1 + histData[histIndex + 1].bonds, 9);\n      bg2 = bg2 - 1;\n      retValue = bondStake * (bg1 + bg2 + histData[histIndex].bonds);\n    }\n\n    return retValue;\n  };\n\n  const findHistStartIndex = startDataYear => {\n    const firstYear = histData[0].year;\n    const offset = startDataYear - firstYear;\n    return offset;\n  };\n\n  const runCycle = (startIndex, numYears) => {\n    var cycleData = [];\n    const stockPct = +props.stockallocation / 100;\n    const bondPct = +props.bondallocation / 100;\n    const feePct = +props.feepct / 100;\n    const ssAge = +props.ssage;\n    const ssIncome = +props.ssincome;\n    const startCPI = histData[startIndex].cpi;\n\n    for (var i = 0; i < numYears; i++) {\n      var obj = {\n        \"year\": histData[startIndex + i].year,\n        \"age\": +props.currentage + i,\n        \"beginValue\": i > 0 ? cycleData[i - 1].endValue : +props.portfoliovalue,\n        \"equityReturn\": histData[startIndex + i].equity,\n        \"equityAppr\": 0,\n        \"divAppr\": 0,\n        \"bondReturn\": 0,\n        \"bondAppr\": 0,\n        \"aggReturn\": 0,\n        \"cumulativeCPI\": histData[startIndex + i].cpi / startCPI,\n        \"spend\": +props.spendvalue,\n        \"actualSpend\": +props.spendvalue,\n        \"fees\": 0,\n        \"endValue\": 0,\n        \"adjEndValue\": 0,\n        \"appr\": 0,\n        \"adjAppr\": 0\n      }; // adjust spend for cumultative cpi\n\n      obj.actualSpend = obj.spend * obj.cumulativeCPI; // apply ss adjustment if applicable\n\n      var adjustment = ssAge <= obj.age ? ssIncome * obj.cumulativeCPI : 0;\n      obj.actualSpend -= adjustment; // port1 = subtract spend from start port\n\n      obj.endValue = obj.beginValue - obj.actualSpend;\n\n      if (0 < obj.endValue) {\n        var startStockValue = obj.endValue * stockPct; // e growth = port1 * e-share * e-growth\n\n        obj.equityAppr = startStockValue * obj.equityReturn; // calc dividends\n\n        obj.divAppr = startStockValue * histData[startIndex + i].dividends; // b growth = port1 * b=share * b-growth\n\n        obj.bondAppr = calcBondYield(obj.endValue * bondPct, startIndex + i);\n        obj.bondReturn = obj.bondAppr / (obj.beginValue * bondPct);\n        obj.aggReturn = obj.equityReturn * stockPct + obj.bondReturn * bondPct; // port2 = port1 + e-growth + b-growth\n\n        obj.appr = obj.equityAppr + obj.divAppr + obj.bondAppr;\n        obj.endValue += obj.appr; // end port = port2 - (fees (based on cpi-adj value))\n\n        obj.fees = (obj.beginValue + obj.appr) * feePct;\n        obj.endValue -= obj.fees;\n        obj.adjEndValue = obj.endValue / obj.cumulativeCPI;\n        obj.adjAppr = obj.appr / obj.cumulativeCPI;\n        cycleData.push(obj);\n      } else {\n        obj.endValue = obj.adjEndValue = 0;\n        cycleData.push(obj);\n        break;\n      }\n    }\n\n    return cycleData;\n  };\n\n  const getAggReturns = allCycles => {\n    var retVal = [];\n\n    for (var iCycle = 0; iCycle < allCycles.length; iCycle++) {\n      for (var year = 0; year < allCycles[iCycle].length; year++) {\n        const oneYear = allCycles[iCycle][year];\n        retVal.push(oneYear.aggReturn);\n      }\n    }\n\n    return retVal;\n  };\n\n  const calcCycleMeta = (oneCycle, lifetime) => {\n    var extAdjEndValue = d3.extent(oneCycle, d => d.adjEndValue);\n    var avgAdjEndValue = d3.mean(oneCycle, d => d.adjEndValue);\n    var medAdjEndValue = d3.median(oneCycle, d => d.adjEndValue);\n    var totalSpend = d3.sum(oneCycle, d => d.actualSpend);\n    var totalAppr = d3.sum(oneCycle, d => d.appr);\n    var totalAdjAppr = d3.sum(oneCycle, d => d.adjAppr);\n    var pctStart = oneCycle[oneCycle.length - 1].adjEndValue / props.portfoliovalue;\n    const thisLineColor = getColorStringForRelativeValue(pctStart);\n    var extAggReturn = d3.extent(oneCycle, d => d.aggReturn);\n    var avgAggReturn = d3.mean(oneCycle, d => d.aggReturn);\n    var medAggReturn = d3.median(oneCycle, d => d.aggReturn);\n    var oneMeta = {\n      'startCycleValue': props.portfoliovalue,\n      'endCycleValue': oneCycle[oneCycle.length - 1].endValue,\n      'adjEndCycleValue': oneCycle[oneCycle.length - 1].adjEndValue,\n      'extent': extAdjEndValue,\n      'mean': avgAdjEndValue,\n      'median': medAdjEndValue,\n      'pctOfStart': pctStart,\n      'totalSpend': totalSpend,\n      'totalAppreciation': totalAppr,\n      'totalAdjAppreciation': totalAdjAppr,\n      'extAggReturn': extAggReturn,\n      'avgAggReturn': avgAggReturn,\n      'medAggReturn': medAggReturn,\n      'fail': oneCycle.length < lifetime,\n      'failAge': oneCycle.length < lifetime ? oneCycle.length + props.currentage : 0,\n      'startYear': oneCycle[0].year,\n      'lineColor': thisLineColor\n    };\n    return oneMeta;\n  };\n\n  const showSummaryData = allCycles => {\n    var extAdjEnd = d3.extent(allCycleMeta, d => d.adjEndCycleValue);\n    var avgAdjEnd = d3.mean(allCycleMeta, d => d.adjEndCycleValue);\n    var medAdjEnd = d3.median(allCycleMeta, d => d.adjEndCycleValue);\n    var avgSpend = d3.mean(allCycleMeta, d => d.totalSpend);\n    var medianSpend = d3.median(allCycleMeta, d => d.totalSpend);\n    var extSpend = d3.extent(allCycleMeta, d => d.totalSpend);\n    var aggReturns = getAggReturns(allCycles);\n    var avgReturns = d3.mean(aggReturns);\n    var medianReturns = d3.median(aggReturns);\n    var extReturns = d3.extent(aggReturns);\n    var avgAdjAppr = d3.mean(allCycleMeta, d => d.totalAdjAppreciation);\n    var medianAdjAppr = d3.median(allCycleMeta, d => d.totalAdjAppreciation);\n    var extAdjAppr = d3.extent(allCycleMeta, d => d.totalAdjAppreciation);\n    var numFails = 0;\n    var minFailAge = props.lifeexpectancy + 1;\n    var failAges = [];\n\n    for (var i = 0; i < allCycleMeta.length; i++) {\n      if (allCycleMeta[i].fail) {\n        minFailAge = Math.min(allCycleMeta[i].failAge, minFailAge);\n        failAges[numFails] = allCycleMeta[i].failAge;\n        numFails++;\n      }\n    }\n\n    setAvgAdjEndValueState(avgAdjEnd);\n    setMedianAdjEndValueState(medAdjEnd);\n    setMinAdjEndValueState(extAdjEnd[0]);\n    setMaxAdjEndValueState(extAdjEnd[1]);\n    setAvgSpendState(avgSpend);\n    setMedianSpendState(medianSpend);\n    setMinSpendState(extSpend[0]);\n    setMaxSpendState(extSpend[1]);\n    setAvgReturnsState(avgReturns);\n    setMedianReturnsState(medianReturns);\n    setMinReturnsState(extReturns[0]);\n    setMaxReturnsState(extReturns[1]);\n    setAvgAdjAppreciationState(avgAdjAppr);\n    setMedianAdjAppreciationState(medianAdjAppr);\n    setMinAdjAppreciationState(extAdjAppr[0]);\n    setMaxAdjAppreciationState(extAdjAppr[1]);\n    setNumCyclesState(allCycleMeta.length);\n    setNumFailsState(numFails);\n    setMinFailAgeState(minFailAge);\n    setMedianFailAgeState(d3.median(failAges));\n  };\n\n  const calcCycles = svg => {\n    const lifetime = props.lifeexpectancy - props.currentage + 1;\n    const startDataYear = props.startdatayear;\n    const endDataYear = props.enddatayear; // TODO : require numCycles to be greater than zero\n\n    const numCycles = endDataYear - startDataYear + 2 - lifetime;\n    const startIndex = findHistStartIndex(startDataYear);\n    var portMin = Number.POSITIVE_INFINITY;\n    var portMax = Number.NEGATIVE_INFINITY;\n    var allCycles = [];\n    cleanupPrev();\n\n    for (var i = 0; i < numCycles; i++) {\n      var oneCycle = runCycle(startIndex + i, lifetime);\n      var cycleMeta = calcCycleMeta(oneCycle, lifetime);\n      allCycleMeta[i] = cycleMeta;\n      allCycles[i] = oneCycle;\n      portMin = Math.min(portMin, cycleMeta.extent[0]);\n      portMax = Math.max(portMax, cycleMeta.extent[1]);\n    }\n\n    setAllCycleDataState(allCycles);\n    setAllCycleMetaState(allCycleMeta);\n    showSummaryData(allCycles);\n    const xScale = getXScale();\n    const yScale = getYScale(portMin, portMax);\n    drawAxes(svg, xScale, yScale, portMin, portMax);\n\n    for (i = 0; i < numCycles; i++) {\n      drawPortfolioLine(svg, xScale, yScale, allCycleMeta[i], allCycles[i]);\n    }\n  };\n\n  React.useEffect(() => {\n    const svg = findByID(svgCycleChartID).append(\"g\").attr(\"transform\", marginTranslate);\n    calcCycles(svg);\n    prepHoverStuff(svg);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SummaryCards, {\n      fails: numFailsState,\n      cycles: numCyclesState,\n      minfailage: minFailAgeState,\n      medianfailage: medianFailAgeState,\n      medianendvalue: medianAdjEndValueState,\n      avgendvalue: avgAdjEndValueState,\n      minendvalue: minAdjEndValueState,\n      maxendvalue: maxAdjEndValueState,\n      medianreturns: medianReturnsState,\n      avgreturns: avgReturnsState,\n      minreturns: minReturnsState,\n      maxreturns: maxReturnsState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1072,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: svgCycleChartID,\n      width: totalWidth,\n      height: totalHeight,\n      children: /*#__PURE__*/_jsxDEV(\"rect\", {\n        id: \"trackingRect\",\n        style: {\n          opacity: 0\n        },\n        width: boundedWidth,\n        height: boundedHeight,\n        transform: marginTranslate,\n        fill: \"LightGrey\",\n        onMouseEnter: handleMouseOver,\n        onMouseMove: handleMouseMove,\n        onMouseLeave: handleMouseLeave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EndValueChart, {\n      startvalue: props.portfoliovalue,\n      minendvalue: minAdjEndValueState,\n      maxendvalue: maxAdjEndValueState,\n      medianendvalue: medianAdjEndValueState,\n      metadata: allCycleMetaState,\n      cyclechartid: svgCycleChartID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1095,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1071,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"8NBpq0mB72Exuzg7g16Y8gKTunk=\");\n\n_c = Chart;\n;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/chart.js"],"names":["React","useState","Stack","Card","CardContent","Typography","d3","SummaryCards","EndValueChart","makeCurrency","makePct","getColorStringForRelativeValue","getPerRunClassName","getPortfolioLineClassName","cleanupPrev","findByID","histData","year","cpi","dividends","bonds","gold","equity","Chart","props","allCycleDataState","setAllCycleDataState","allCycleMetaState","setAllCycleMetaState","avgAdjEndValueState","setAvgAdjEndValueState","medianAdjEndValueState","setMedianAdjEndValueState","minAdjEndValueState","setMinAdjEndValueState","maxAdjEndValueState","setMaxAdjEndValueState","avgSpendState","setAvgSpendState","medianSpendState","setMedianSpendState","minSpendState","setMinSpendState","maxSpendState","setMaxSpendState","avgReturnsState","setAvgReturnsState","medianReturnsState","setMedianReturnsState","minReturnsState","setMinReturnsState","maxReturnsState","setMaxReturnsState","avgAdjApprState","setAvgAdjAppreciationState","medianAdjApprState","setMedianAdjAppreciationState","minAdjApprState","setMinAdjAppreciationState","maxAdjApprState","setMaxAdjAppreciationState","numCyclesState","setNumCyclesState","numFailsState","setNumFailsState","minFailAgeState","setMinFailAgeState","medianFailAgeState","setMedianFailAgeState","svgCycleChartID","perRunClass","hoverLineID","ttWrapID","ttBackID","ttAgeID","margin","top","right","bottom","left","totalWidth","totalHeight","boundedWidth","boundedHeight","tooltipWidth","tooltipHeight","marginTranslate","normalStrokeWidth","allCycleMeta","getXScale","xExt","currentage","lifeexpectancy","scaleLinear","domain","range","getYScale","rangeMin","rangeMax","yExt","drawAxes","svg","xScaleIn","yScaleIn","append","attr","call","axisBottom","axisLeft","drawPortfolioLine","oneCycleMeta","oneCycle","classNames","lineColor","datum","startYear","style","line","x","d","age","y","adjEndValue","prepHoverStuff","tooltipWrapper","tooltipText","getHoverLine","getTooltipWrapper","getTooltipBackground","getTooltipAgeSpan","handleMouseOver","e","handleMouseMove","bisect","bisector","coords","pointer","x0","invert","oneCycleData","i","selectedData","clientX","tooltipX","text","ttBounds","node","getBBox","width","height","handleMouseLeave","calcBondYield","bondStake","histIndex","retValue","length","bg1","Math","pow","bg2","findHistStartIndex","startDataYear","firstYear","offset","runCycle","startIndex","numYears","cycleData","stockPct","stockallocation","bondPct","bondallocation","feePct","feepct","ssAge","ssage","ssIncome","ssincome","startCPI","obj","endValue","portfoliovalue","spendvalue","actualSpend","spend","cumulativeCPI","adjustment","beginValue","startStockValue","equityAppr","equityReturn","divAppr","bondAppr","bondReturn","aggReturn","appr","fees","adjAppr","push","getAggReturns","allCycles","retVal","iCycle","oneYear","calcCycleMeta","lifetime","extAdjEndValue","extent","avgAdjEndValue","mean","medAdjEndValue","median","totalSpend","sum","totalAppr","totalAdjAppr","pctStart","thisLineColor","extAggReturn","avgAggReturn","medAggReturn","oneMeta","showSummaryData","extAdjEnd","adjEndCycleValue","avgAdjEnd","medAdjEnd","avgSpend","medianSpend","extSpend","aggReturns","avgReturns","medianReturns","extReturns","avgAdjAppr","totalAdjAppreciation","medianAdjAppr","extAdjAppr","numFails","minFailAge","failAges","fail","min","failAge","calcCycles","startdatayear","endDataYear","enddatayear","numCycles","portMin","Number","POSITIVE_INFINITY","portMax","NEGATIVE_INFINITY","cycleMeta","max","xScale","yScale","useEffect","opacity"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {useState} from \"react\";\nimport { Stack } from \"@mui/material\";\nimport { Card } from \"@mui/material\";\nimport { CardContent } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport * as d3 from \"d3\";\nimport SummaryCards from \"./summary.js\";\nimport EndValueChart from './endvaluechart.js';\nimport \"./chartdata.css\";\nimport {makeCurrency, makePct, getColorStringForRelativeValue, getPerRunClassName, getPortfolioLineClassName, cleanupPrev, findByID} from './common.js';\n\nconst histData = [\n    {\n        year: 1871, cpi: 12.46, dividends: 0.05855856,\n        bonds: 0.0532, gold: 0.02656043, equity: 0.09459459\n    },\n    {\n        year: 1872, cpi: 12.65, dividends: 0.05417695,\n        bonds: 0.0536, gold: -0.01940492, equity: 0.05144033\n    },\n    {\n        year: 1873, cpi: 12.94, dividends: 0.05919765,\n        bonds: 0.0558, gold: 0.01539138, equity: -0.08806262\n    },\n    {\n        year:1874, cpi: 12.37, dividends: 0.07081545,\n        bonds: 0.0547, gold: 0.01948896, equity: -0.02575107\n    },\n    {\n        year:1875, cpi: 11.51, dividends: 0.07213656,\n        bonds: 0.0507, gold: -0.0526763, equity: -0.01762115\n    },\n    {\n        year:1876, cpi: 10.85, dividends: 0.06726457,\n        bonds: 0.0459, gold: -0.0470852, equity: -0.20403587\n    },\n    {\n        year:1877, cpi: 10.94, dividends: 0.08191549,\n        bonds: 0.0445, gold: -0.02635294, equity: -0.08450704\n    },\n    {\n        year:1878, cpi: 9.23, dividends: 0.05821538,\n        bonds: 0.0434, gold: -0.00096665, equity: 0.10153846\n    },\n    {\n        year:1879, cpi: 8.28, dividends: 0.05075419,\n        bonds: 0.0422, gold: 0, equity: 0.4273743\n    },\n    {\n        year:1880, cpi: 9.99, dividends: 0.04011742,\n        bonds: 0.0402, gold: 0, equity: 0.21135029\n    },\n    {\n        year:1881, cpi: 9.42, dividends: 0.04281099,\n        bonds: 0.037, gold: 0, equity: -0.04361874\n    },\n    {\n        year:1882, cpi: 10.18, dividends: 0.05405405,\n        bonds: 0.0362, gold: 0, equity: -0.01858108\n    },\n    {\n        year:1883, cpi: 9.99, dividends: 0.05521515,\n        bonds: 0.0363, gold: 0, equity: -0.10843373\n    },\n    {\n        year:1884, cpi: 9.23, dividends: 0.06337838,\n        bonds: 0.0362, gold: 0, equity: -0.18146718\n    },\n    {\n        year:1885, cpi: 8.28, dividends: 0.07174528,\n        bonds: 0.0352, gold: 0, equity: 0.22641509\n    },\n    {\n        year:1886, cpi: 7.99, dividends: 0.04582692,\n        bonds: 0.0337, gold: 0, equity: 0.07307692\n    },\n    {\n        year:1887, cpi: 7.99, dividends: 0.03987455,\n        bonds: 0.0352, gold: 0, equity: -0.0483871\n    },\n    {\n        year:1888, cpi: 8.37, dividends: 0.04676083,\n        bonds: 0.0367, gold: 0, equity: -0.01318267\n    },\n    {\n        year:1889, cpi: 7.99, dividends: 0.04374046,\n        bonds: 0.0345, gold: 0, equity: 0.02671756\n    },\n    {\n        year:1890, cpi: 7.61, dividends: 0.04089219,\n        bonds: 0.0342, gold: 0, equity: -0.10037175\n    },\n    {\n        year:1891, cpi: 7.8, dividends: 0.04545455,\n        bonds: 0.0362, gold: 0, equity: 0.13842975\n    },\n    {\n        year:1892, cpi: 7.33, dividends: 0.04023593,\n        bonds: 0.036, gold: 0, equity: 0.01814882\n    },\n    {\n        year:1893, cpi: 7.9, dividends: 0.04292335,\n        bonds: 0.0375, gold: 0, equity: -0.22994652\n    },\n    {\n        year:1894, cpi: 6.85, dividends: 0.05710648,\n        bonds: 0.037, gold: 0, equity: -0.0162037\n    },\n    {\n        year:1895, cpi: 6.57, dividends: 0.04901176,\n        bonds: 0.0346, gold: 0, equity: 0.00470588\n    },\n    {\n        year:1896, cpi: 6.66, dividends: 0.04430913,\n        bonds: 0.036, gold: 0, equity: -0.0117096\n    },\n    {\n        year:1897, cpi: 6.47, dividends: 0.04265403,\n        bonds: 0.034, gold: 0, equity: 0.1563981\n    },\n    {\n        year:1898, cpi: 6.66, dividends: 0.03723361,\n        bonds: 0.0335, gold: 0, equity: 0.24590164\n    },\n    {\n        year:1899, cpi: 6.76, dividends: 0.03302632,\n        bonds: 0.031, gold: 0, equity: 0.00328947\n    },\n    {\n        year:1900, cpi: 7.9, dividends: 0.03565574,\n        bonds: 0.0315, gold: 0, equity: 0.15901639\n    },\n    {\n        year:1901, cpi: 7.71, dividends: 0.04267327,\n        bonds: 0.031, gold: 0, equity: 0.14851485\n    },\n    {\n        year:1902, cpi: 7.9, dividends: 0.03950739,\n        bonds: 0.0318, gold: 0, equity: 0.04187192\n    },\n    {\n        year:1903, cpi: 8.66, dividends: 0.03920804,\n        bonds: 0.033, gold: 0, equity: -0.21040189\n    },\n    {\n        year:1904, cpi: 8.28, dividends: 0.0519012,\n        bonds: 0.034, gold: 0, equity: 0.26197605\n    },\n    {\n        year:1905, cpi: 8.47, dividends: 0.03697509,\n        bonds: 0.0348, gold: 0, equity: 0.17081851\n    },\n    {\n        year:1906, cpi: 8.47, dividends: 0.03402229,\n        bonds: 0.0343, gold: 0, equity: -0.03140831\n    },\n    {\n        year:1907, cpi: 8.85, dividends: 0.04218619,\n        bonds: 0.0367, gold: 0, equity: -0.2834728\n    },\n    {\n        year:1908, cpi: 8.66, dividends: 0.06375182,\n        bonds: 0.0387, gold: 0, equity: 0.32262774\n    },\n    {\n        year:1909, cpi: 8.94, dividends: 0.04451435,\n        bonds: 0.0376, gold: 0, equity: 0.11258278\n    },\n    {\n        year:1910, cpi: 9.9, dividends: 0.04389881,\n        bonds: 0.0391, gold: 0, equity: -0.08035714\n    },\n    {\n        year:1911, cpi: 9.23, dividends: 0.05070119,\n        bonds: 0.0398, gold: 0, equity: -0.01618123\n    },\n    {\n        year:1912, cpi: 9.13, dividends: 0.05162281,\n        bonds: 0.0401, gold: 0, equity: 0.01973684\n    },\n    {\n        year:1913, cpi: 9.8, dividends: 0.0516129,\n        bonds: 0.0445, gold: 0, equity: -0.1\n    },\n    {\n        year:1914, cpi: 10, dividends: 0.0567503,\n        bonds: 0.0416, gold: 0, equity: -0.10633214\n    },\n    {\n        year:1915, cpi: 10.1, dividends: 0.05625668,\n        bonds: 0.0424, gold: 0, equity: 0.2473262\n    },\n    {\n        year:1916, cpi: 10.4, dividends: 0.04724544,\n        bonds: 0.0405, gold: 0, equity: 0.02572347\n    },\n    {\n        year:1917, cpi: 11.7, dividends: 0.05964472,\n        bonds: 0.0423, gold: 0, equity: -0.24660397\n    },\n    {\n        year:1918, cpi: 14, dividends: 0.09431345,\n        bonds: 0.0457, gold: 0, equity: 0.0887656\n    },\n    {\n        year:1919, cpi: 16.5, dividends: 0.07219108,\n        bonds: 0.045, gold: 0, equity: 0.12484076\n    },\n    {\n        year:1920, cpi: 19.3, dividends: 0.05983012,\n        bonds: 0.0497, gold: 0, equity: -0.19479049\n    },\n    {\n        year:1921, cpi: 19, dividends: 0.07113924,\n        bonds: 0.0509, gold: 0, equity: 0.02672293\n    },\n    {\n        year:1922, cpi: 16.9, dividends: 0.06358904,\n        bonds: 0.043, gold: 0, equity: 0.21917808\n    },\n    {\n        year:1923, cpi: 16.8, dividends: 0.05749438,\n        bonds: 0.0436, gold: 0, equity: -0.00786517\n    },\n    {\n        year:1924, cpi: 17.3, dividends: 0.06021518,\n        bonds: 0.0406, gold: 0, equity: 0.198188\n    },\n    {\n        year:1925, cpi: 17.3, dividends: 0.05238185,\n        bonds: 0.0386, gold: 0, equity: 0.19565217\n    },\n    {\n        year:1926, cpi: 17.9, dividends: 0.04802372,\n        bonds: 0.0368, gold: 0, equity: 0.05928854\n    },\n    {\n        year:1927, cpi: 17.5, dividends: 0.05199254,\n        bonds: 0.0334, gold: 0, equity: 0.30820896\n    },\n    {\n        year:1928, cpi: 17.3, dividends: 0.0443069,\n        bonds: 0.0333, gold: 0, equity: 0.41814033\n    },\n    {\n        year:1929, cpi: 17.1, dividends: 0.03459372,\n        bonds: 0.036, gold: 0, equity: -0.12670957\n    },\n    {\n        year:1930, cpi: 17.1, dividends: 0.04471672,\n        bonds: 0.0329, gold: 0, equity: -0.26393367\n    },\n    {\n        year:1931, cpi: 15.9, dividends: 0.06049437,\n        bonds: 0.0334, gold: 0, equity: -0.48060075\n    },\n    {\n        year:1932, cpi: 14.3, dividends: 0.09557831,\n        bonds: 0.0368, gold: 0.56361877, equity: -0.14578313\n    },\n    {\n        year:1933, cpi: 12.9, dividends: 0.06981664,\n        bonds: 0.0331, gold: 0.08292079, equity: 0.48660085\n    },\n    {\n        year:1934, cpi: 13.2, dividends: 0.04182163,\n        bonds: 0.0312, gold: 0, equity: -0.12144213\n    },\n    {\n        year:1935, cpi: 13.6, dividends: 0.04859611,\n        bonds: 0.0279, gold: 0, equity: 0.48596112\n    },\n    {\n        year:1936, cpi: 13.8, dividends: 0.03488372,\n        bonds: 0.0265, gold: 0, equity: 0.27834302\n    },\n    {\n        year:1937, cpi: 14.1, dividends: 0.04150085,\n        bonds: 0.0268, gold: 0, equity: -0.35702103\n    },\n    {\n        year:1938, cpi: 14.2, dividends: 0.07014439,\n        bonds: 0.0256, gold: 0, equity: 0.10521662\n    },\n    {\n        year:1939, cpi: 14, dividends: 0.04106664,\n        bonds: 0.0236, gold: -0.01428571, equity: -0.016\n    },\n    {\n        year:1940, cpi: 13.9, dividends: 0.05067748,\n        bonds: 0.0221, gold: 0.02898551, equity: -0.14227642\n    },\n    {\n        year:1941, cpi: 14.1, dividends: 0.06382303,\n        bonds: 0.0195, gold: 0, equity: -0.1535545\n    },\n    {\n        year:1942, cpi: 15.7, dividends: 0.07876069,\n        bonds: 0.0246, gold: 0.02816901, equity: 0.12989922\n    },\n    {\n        year:1943, cpi: 16.9, dividends: 0.05847374,\n        bonds: 0.0247, gold: -0.00684932, equity: 0.17443013\n    },\n    {\n        year:1944, cpi: 17.4, dividends: 0.05175806,\n        bonds: 0.0248, gold: 0.02758621, equity: 0.13839662\n    },\n    {\n        year:1945, cpi: 17.8, dividends: 0.04768962,\n        bonds: 0.0237, gold: 0.02684564, equity: 0.3358043\n    },\n    {\n        year:1946, cpi: 18.2, dividends: 0.03699595,\n        bonds: 0.0219, gold: 0.12418301, equity: -0.15593785\n    },\n    {\n        year:1947, cpi: 21.5, dividends: 0.04689895,\n        bonds: 0.0225, gold: -0.02325581, equity: -0.02498356\n    },\n    {\n        year:1948, cpi: 23.7, dividends: 0.05686669,\n        bonds: 0.0244, gold: -0.03571429, equity: 0.03573837\n    },\n    {\n        year:1949, cpi: 24, dividends: 0.06163197,\n        bonds: 0.0231, gold: -0.00617284, equity: 0.09895833\n    },\n    {\n        year:1950, cpi: 23.5, dividends: 0.06812796,\n        bonds: 0.0232, gold: -0.00621118, equity: 0.25651659\n    },\n    {\n        year:1951, cpi: 25.4, dividends: 0.07009288,\n        bonds: 0.0257, gold: -0.0325, equity: 0.14049976\n    },\n    {\n        year:1952, cpi: 26.5, dividends: 0.05842621,\n        bonds: 0.0268, gold: -0.08268734, equity: 0.0822654\n    },\n    {\n        year:1953, cpi: 26.6, dividends: 0.05385791,\n        bonds: 0.0283, gold: -0.00704225, equity: -0.02750191\n    },\n    {\n        year:1954, cpi: 26.9, dividends: 0.05721406,\n        bonds: 0.0248, gold: -0.00283688, equity: 0.3982718,\n            },\n    {\n        year:1955, cpi: 26.7, dividends: 0.04344579,\n        bonds: 0.0261, gold: 0.00142248, equity: 0.24016854\n    },\n    {\n        year:1956, cpi: 26.8, dividends: 0.03782559,\n        bonds: 0.029, gold: 0.00142046, equity: 0.02899207\n    },\n    {\n        year:1957, cpi: 27.6, dividends: 0.03822738,\n        bonds: 0.0346, gold: 0, equity: -0.09487123\n    },\n    {\n        year:1958, cpi: 28.6, dividends: 0.04336892,\n        bonds: 0.0309, gold: 0, equity: 0.35262646\n    },\n    {\n        year:1959, cpi: 29, dividends: 0.03158342,\n        bonds: 0.0402, gold: 0.03546099, equity: 0.04332974\n    },\n    {\n        year:1960, cpi: 29.3, dividends: 0.03216733,\n        bonds: 0.0472, gold: -0.02739726, equity: 0.02912287\n    },\n    {\n        year:1961, cpi: 29.8, dividends: 0.03259662,\n        bonds: 0.0384, gold: -0.00422535, equity: 0.15656397\n    },\n    {\n        year:1962, cpi: 30, dividends: 0.02934226,\n        bonds: 0.0408, gold: -0.00282885, equity: -0.05805704\n    },\n    {\n        year:1963, cpi: 30.4, dividends: 0.03284153,\n        bonds: 0.0383, gold: 0.00283688, equity: 0.17506917\n    },\n    {\n        year:1964, cpi: 30.9, dividends: 0.03004147,\n        bonds: 0.0417, gold: 0.00424328, equity: 0.1264879\n    },\n    {\n        year:1965, cpi: 31.2, dividends: 0.02922283,\n        bonds: 0.0419, gold: -0.0028169, equity: 0.08360427\n    },\n    {\n        year:1966, cpi: 31.8, dividends: 0.02936134,\n        bonds: 0.0461, gold: 0.00282486, equity: -0.09504929\n    },\n    {\n        year:1967, cpi: 32.9, dividends: 0.03410302,\n        bonds: 0.0458, gold: 0.22535211, equity: 0.12539964\n    },\n    {\n        year:1968, cpi: 34.1, dividends: 0.03082912,\n        bonds: 0.0553, gold: -0.05747126, equity: 0.07323232\n    },\n    {\n        year:1969, cpi: 35.6, dividends: 0.03019608,\n        bonds: 0.0604, gold: -0.05121951, equity: -0.11460784\n    },\n    {\n        year:1970, cpi: 37.8, dividends: 0.03502746,\n        bonds: 0.0779, gold: 0.14652956, equity: 0.03521205\n    },\n    {\n        year:1971, cpi: 39.8, dividends: 0.03347952,\n        bonds: 0.0624, gold: 0.43139014, equity: 0.10493101\n    },\n    {\n        year:1972, cpi: 41.1, dividends: 0.02971926,\n        bonds: 0.0595, gold: 0.6679198, equity: 0.14617619\n    },\n    {\n        year:1973, cpi: 42.6, dividends: 0.02666106,\n        bonds: 0.0646, gold: 0.72586401, equity: -0.18826014\n    },\n    {\n        year:1974, cpi: 46.6, dividends: 0.03537613,\n        bonds: 0.0699, gold: -0.24204168, equity: -0.24503173\n    },\n    {\n        year:1975, cpi: 52.1, dividends: 0.04993564,\n        bonds: 0.075, gold: -0.03962955, equity: 0.33489526\n    },\n    {\n        year:1976, cpi: 55.6, dividends: 0.03802736,\n        bonds: 0.0774, gold: 0.2043059, equity: 0.0716498\n    },\n    {\n        year:1977, cpi: 58.5, dividends: 0.03946696,\n        bonds: 0.0721, gold: 0.29174426, equity: -0.1305395\n    },\n    {\n        year:1978, cpi: 62.5, dividends: 0.05222526,\n        bonds: 0.0796, gold: 0.99999999, equity: 0.10481994\n    },\n    {\n        year:1979, cpi: 68.3, dividends: 0.05128202,\n        bonds: 0.091, gold: 0.29607843, equity: 0.11222545\n    },\n    {\n        year:1980, cpi: 77.8, dividends: 0.05139766,\n        bonds: 0.108, gold: -0.32761809, equity: 0.19927863\n    },\n    {\n        year:1981, cpi: 87, dividends: 0.04661654,\n        bonds: 0.1257, gold: 0.1175, equity: -0.11804511\n    },\n    {\n        year:1982, cpi: 94.3, dividends: 0.05677749,\n        bonds: 0.1459, gold: -0.14988814, equity: 0.23017903\n    },\n    {\n        year:1983, cpi: 97.8, dividends: 0.04770152,\n        bonds: 0.1046, gold: -0.18947368, equity: 0.15315315\n    },\n    {\n        year:1984, cpi: 101.9, dividends: 0.04278846,\n        bonds: 0.1167, gold: 0.06168831, equity: 0.03125\n    },\n    {\n        year:1985, cpi: 105.5, dividends: 0.04413362,\n        bonds: 0.1138, gold: 0.19541284, equity: 0.21328671\n    },\n    {\n        year:1986, cpi: 109.6, dividends: 0.03813641,\n        bonds: 0.0919, gold: 0.24456383, equity: 0.27041306\n    },\n    {\n        year:1987, cpi: 111.2, dividends: 0.03137996,\n        bonds: 0.0708, gold: -0.15693731, equity: -0.05293006\n    },\n    {\n        year:1988, cpi: 115.7, dividends: 0.03535597,\n        bonds: 0.0867, gold: -0.02230891, equity: 0.13932136\n    },\n    {\n        year:1989, cpi: 121.1, dividends: 0.03438448,\n        bonds: 0.0909, gold: -0.03690773, equity: 0.19120533\n    },\n    {\n        year:1990, cpi: 127.4, dividends: 0.0327676,\n        bonds: 0.0821, gold: -0.08557742, equity: -0.04259199\n    },\n    {\n        year:1991, cpi: 134.6, dividends: 0.03719531,\n        bonds: 0.0809, gold: -0.05705791, equity: 0.27831884\n    },\n    {\n        year:1992, cpi: 138.1, dividends: 0.02941742,\n        bonds: 0.0703, gold: 0.17642643, equity: 0.0460248\n    },\n    {\n        year:1993, cpi: 142.6, dividends: 0.02852124,\n        bonds: 0.066, gold: -0.02169751, equity: 0.08675873\n    },\n    {\n        year:1994, cpi: 146.2, dividends: 0.0266883,\n        bonds: 0.0575, gold: 0.00978474, equity: -0.01636398\n    },\n    {\n        year:1995, cpi: 150.3, dividends: 0.02832886,\n        bonds: 0.0778, gold: -0.04651163, equity: 0.32062332\n    },\n    {\n        year:1996, cpi: 154.4, dividends: 0.02261206,\n        bonds: 0.0565, gold: -0.22208672, equity: 0.24706227\n    },\n    {\n        year:1997, cpi: 159.1, dividends: 0.01951567,\n        bonds: 0.0658, gold: 0.00574813, equity: 0.25728903\n    },\n    {\n        year:1998, cpi: 161.6, dividends: 0.01614142,\n        bonds: 0.0554, gold: 0.0053689, equity: 0.29626516\n    },\n    {\n        year:1999, cpi: 164.3, dividends: 0.0130395,\n        bonds: 0.0472, gold: -0.06063738, equity: 0.14159533\n    },\n    {\n        year:2000, cpi: 168.8, dividends: 0.0116256,\n        bonds: 0.0666, gold: 0.01412067, equity: -0.0631037\n    },\n    {\n        year:2001, cpi: 175.1, dividends: 0.01210665,\n        bonds: 0.0516, gold: 0.23960217, equity: -0.14631298\n    },\n    {\n        year:2002, cpi: 177.1, dividends: 0.01380155,\n        bonds: 0.0504, gold: 0.21735959, equity: -0.21432017\n    },\n    {\n        year:2003, cpi: 181.7, dividends: 0.01799428,\n        bonds: 0.0405, gold: 0.04397843, equity: 0.26419896\n    },\n    {\n        year:2004, cpi: 185.2, dividends: 0.01554056,\n        bonds: 0.0415, gold: 0.17768595, equity: 0.04316922\n    },\n    {\n        year:2005, cpi: 190.7, dividends: 0.01667781,\n        bonds: 0.0422, gold: 0.23918129, equity: 0.08237614\n    },\n    {\n        year:2006, cpi: 198.3, dividends: 0.0175252,\n        bonds: 0.0442, gold: 0.31587227, equity: 0.11373003\n    },\n    {\n        year:2007, cpi: 202.416, dividends: 0.01761272,\n        bonds: 0.0476, gold: 0.03974895, equity: -0.03187844\n    },\n    {\n        year:2008, cpi: 211.08, dividends: 0.02025008,\n        bonds: 0.0374, gold: 0.2503593, equity: -0.37220401\n    },\n    {\n        year:2009, cpi: 211.143, dividends: 0.0323598,\n        bonds: 0.0252, gold: 0.30597701, equity: 0.29806604\n    },\n    {\n        year:2010, cpi: 216.687, dividends: 0.01979684,\n        bonds: 0.0373, gold: 0.07797923, equity: 0.14154755\n    },\n    {\n        year:2011, cpi: 220.223, dividends: 0.01790346,\n        bonds: 0.0339, gold: 0.08687133, equity: 0.01400259\n    },\n    {\n        year:2012, cpi: 226.665, dividends: 0.02055749,\n        bonds: 0.0197, gold: -0.27614183, equity: 0.13826139\n    },\n    {\n        year:2013, cpi: 230.28, dividends: 0.0213028,\n        bonds: 0.0191, gold: -0.00435866, equity: 0.22114293\n    },\n    {\n        year:2014, cpi: 233.916, dividends: 0.01942536,\n        bonds: 0.0286, gold: -0.11611424, equity: 0.1369433\n    },\n    {\n        year:2015, cpi: 233.707, dividends: 0.019671167,\n        bonds: 0.0188, gold: 0.17994340, equity: -0.054028735229542\n\t\t},\n    {\n        year:2016, cpi: 236.916, dividends: 0.02270058,\n        bonds: 0.0209, gold: 0.00510098, equity: 0.18582299661672\n\t\t},\n    {\n        year:2017, cpi: 242.839, dividends: 0.020186481,\n        bonds: 0.0243, gold: 0.00904448, equity: 0.226221034357374\n\t\t},\n    {\n        year:2018, cpi: 247.867, dividends: 0.017666738,\n        bonds: 0.0258, gold: 0.09784074, equity: -0.065384615734383\n\t\t},\n    {\n        year:2019, cpi: 251.712, dividends: 0.020766616,\n        bonds: 0.0271, gold: 0, equity: 0.257273694016446\n    },\n    {\n        year:2020, cpi: 257.9710, dividends: 0.01790,\n        bonds: 0.01760, gold: 0, equity: 0.157265\n    },\n];\n\nfunction Chart (props) {\n  \n    const [allCycleDataState, setAllCycleDataState] = useState([]);\n    const [allCycleMetaState, setAllCycleMetaState] = useState([]);\n\n    const [avgAdjEndValueState, setAvgAdjEndValueState] = useState(0);\n    const [medianAdjEndValueState, setMedianAdjEndValueState] = useState(0);\n    const [minAdjEndValueState, setMinAdjEndValueState] = useState(0);\n    const [maxAdjEndValueState, setMaxAdjEndValueState] = useState(0);\n\n    const [avgSpendState, setAvgSpendState] = useState(0);\n    const [medianSpendState, setMedianSpendState] = useState(0);\n    const [minSpendState, setMinSpendState] = useState(0);\n    const [maxSpendState, setMaxSpendState] = useState(0);\n\n    const [avgReturnsState, setAvgReturnsState] = useState(0);\n    const [medianReturnsState, setMedianReturnsState] = useState(0);\n    const [minReturnsState, setMinReturnsState] = useState(0);\n    const [maxReturnsState, setMaxReturnsState] = useState(0);\n    \n    const [avgAdjApprState, setAvgAdjAppreciationState] = useState(0);\n    const [medianAdjApprState, setMedianAdjAppreciationState] = useState(0);\n    const [minAdjApprState, setMinAdjAppreciationState] = useState(0);\n    const [maxAdjApprState, setMaxAdjAppreciationState] = useState(0);\n    \n    const [numCyclesState, setNumCyclesState] = useState(0);\n    const [numFailsState, setNumFailsState] = useState(0);\n    const [minFailAgeState, setMinFailAgeState] = useState(0);\n    const [medianFailAgeState, setMedianFailAgeState] = useState(0);\n\n    const svgCycleChartID = 'd3cycletarget';\n    const perRunClass = getPerRunClassName();\n    const hoverLineID = 'hoverLine';\n    const ttWrapID = 'ttwrapper';\n    const ttBackID = 'ttbackground';\n    const ttAgeID = 'ttage';\n    const margin = { top: 40, right: 65, bottom: 40, left: 65 };\n    const totalWidth = 960;\n    const totalHeight = 500;\n    const boundedWidth = totalWidth - margin.left - margin.right;\n    const boundedHeight = totalHeight - margin.top - margin.bottom;\n    const tooltipWidth = 75;\n    const tooltipHeight = 75;\n    const marginTranslate = \"translate(\" + margin.left + \",\" + margin.top + \")\";\n    const normalStrokeWidth = 1.5;\n    var allCycleMeta = [];\n\n    const getXScale = () => { \n        var xExt = [props.currentage, props.lifeexpectancy];\n        return d3.scaleLinear()\n                    .domain(xExt)\n                    .range([ 0, boundedWidth ]);\n    }\n\n    const getYScale = (rangeMin, rangeMax) => {\n        var yExt = [rangeMin, rangeMax];\n        return d3.scaleLinear()\n                    .domain(yExt)\n                    .range([ boundedHeight, 0 ]);\n    }\n\n    const drawAxes = (svg, xScaleIn, yScaleIn, rangeMin, rangeMax) => {\n \n        svg.append(\"g\")\n            .attr(\"class\", perRunClass)\n            .attr(\"transform\", \"translate(0,\" + boundedHeight + \")\")\n            .call(d3.axisBottom(xScaleIn));\n        svg.append(\"g\")\n            .attr(\"class\", perRunClass)\n            .call(d3.axisLeft(yScaleIn));\n    };\n\n    const drawPortfolioLine = (svg, xScaleIn, yScaleIn, oneCycleMeta, oneCycle) => {\n        // Add the equity line\n\n        const classNames = perRunClass + ' ' \n                            + getPortfolioLineClassName() + ' ' \n                            + oneCycleMeta.lineColor;\n        svg.append(\"path\")\n            .datum(oneCycle)\n            .attr('id', oneCycleMeta.startYear)\n            .attr('class', classNames)\n            .attr(\"fill\", \"none\")\n            .attr(\"pointer-events\", \"none\")\n            .style(\"opacity\", 1)\n            .attr(\"stroke\", oneCycleMeta.lineColor)\n            .attr(\"stroke-width\", normalStrokeWidth)\n            .attr(\"d\", d3.line()\n                        .x(function(d) { return xScaleIn(d.age) })\n                        .y(function(d) { return yScaleIn(d.adjEndValue) })\n            );        \n    }\n\n    const prepHoverStuff = (svg) => {\n        const tooltipWrapper = svg\n                .append('g')\n                .attr('id', ttWrapID)\n                .attr('display', 'none');\n        \n        tooltipWrapper.append('rect')\n                        .style('opacity', 0.70)\n                        .attr('id', ttBackID)\n                        .attr('width', tooltipWidth)\n                        .attr('height', tooltipHeight)\n                        .attr(\"pointer-events\", \"none\")\n                        .attr(\"fill\", \"#e8e8e8\"); \n\n        const tooltipText = tooltipWrapper.append('g').append('text');\n\n        tooltipText.attr(\"pointer-events\", \"none\")\n                    .attr('font-weight', 900)\n                    .attr('text-anchor', 'left');\n                    \n        tooltipText.append('tspan')\n                    .attr('id', ttAgeID)\n                    .attr('x', '5')\n                    .attr('y', '5')\n                    .attr('dy', '15px')\n                    .attr(\"pointer-events\", \"none\");\n\n        svg.append(\"g\")\n           .append(\"rect\")\n            .style('opacity', 0)\n            .attr('id', hoverLineID)\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"class\", \"dotted\")\n            .attr(\"stroke-width\", \"1px\")\n            .attr(\"width\", \".5px\")\n            .attr(\"height\", boundedHeight);\n        \n    }\n\n    const getHoverLine = () => {\n        return findByID(hoverLineID);\n    }\n\n    const getTooltipWrapper = () => {\n        return findByID(ttWrapID);\n    }\n\n    const getTooltipBackground = () => {\n        return findByID(ttBackID);\n    }\n\n    const getTooltipAgeSpan = () => {\n        return findByID(ttAgeID);\n    }\n\n    const handleMouseOver = (e) => {\n        getHoverLine().style('opacity', 1);\n        getTooltipWrapper().attr('display', null);\n    }\n\n    const handleMouseMove = (e) => {\n        const bisect = d3.bisector((d) => d.age).left;\n        var xScaleIn = getXScale();\n        const coords = d3.pointer(e);\n        const x0 = xScaleIn.invert(coords[0]);\n        const oneCycleData = allCycleDataState[0];\n        const i = bisect(oneCycleData, x0, 1);\n        const selectedData = oneCycleData[i];\n        const clientX = xScaleIn(selectedData.age);\n        var tooltipX = clientX;\n        \n        // prevent the tooltip from getting clipped.\n        const tooltipWidth = 75;             \n        if (boundedWidth <= (clientX + tooltipWidth)) {\n            tooltipX = clientX - tooltipWidth;\n        }\n        getTooltipAgeSpan().text('age: ' + selectedData.age);\n\n        const ttBounds = getTooltipWrapper().node().getBBox();\n        getTooltipBackground()                \n            .attr('width', ttBounds.width)\n            .attr('height', ttBounds.height);\n\n        getTooltipWrapper().attr(\"transform\", \"translate(\" + tooltipX + \",\" + coords[1] + \")\");  \n\n        getHoverLine().attr('x', clientX);\n        getTooltipWrapper().attr('x', tooltipX);\n    };\n    \n    const handleMouseLeave = () => {\n        getHoverLine().style('opacity', 0);\n        getTooltipWrapper().attr('display', 'none');\n    };\n\n    /*\n    const dumpCycleData = (oneCycle) => {\n        for (var i = 0; i < oneCycle.length; i++) {\n\n            console.log(oneCycle[i].year + \n                ' st:' + makeCurrency(oneCycle[i].beginValue) +\n                ' cpi:' + Number(oneCycle[i].cumulativeCPI).toFixed(2) + \n                ' sp:' + makeCurrency(oneCycle[i].actualSpend) + \n                ' e$:' + makeCurrency(oneCycle[i].equityAppr) +\n                ' d$:' + makeCurrency(oneCycle[i].divAppr) +\n                ' b$:' + makeCurrency(oneCycle[i].bondAppr) +\n                ' f$: ' + makeCurrency(oneCycle[i].fees) + \n                ' ae$: ' + makeCurrency(oneCycle[i].adjEndValue)\n                );\n        }\n    }\n     */\n\n    const calcBondYield = (bondStake, histIndex) => {\n        \n        var retValue = 0;\n\n        // if we're at the end of the cycle, use the simplified calculation\n        if (histData.length <= (histIndex + 1)) {\n            retValue = bondStake * histData[histIndex].bonds;\n        }\n        else {\n            var bg1 = (1 - Math.pow(1 + histData[histIndex + 1].bonds, -9 ))\n                      * histData[histIndex].bonds;\n            bg1 = bg1 / histData[histIndex + 1].bonds;\n            \n            var bg2 = 1 / Math.pow(1 + histData[histIndex + 1].bonds, 9);\n            bg2 = bg2 - 1;\n\n            retValue = bondStake * (bg1 + bg2 + histData[histIndex].bonds);\n        }\n\n        return retValue;\n    }\n\n    const findHistStartIndex = (startDataYear) => {\n        const firstYear = histData[0].year;\n        const offset = startDataYear - firstYear;\n\n        return offset;\n    }\n\n    const runCycle = (startIndex, numYears) => {\n        var cycleData = [];\n        const stockPct = +(props.stockallocation) / 100;\n        const bondPct = +(props.bondallocation) / 100;\n        const feePct = +(props.feepct) / 100;\n        const ssAge = +(props.ssage);\n        const ssIncome = +(props.ssincome);\n        const startCPI = histData[startIndex].cpi;\n\n        for(var i = 0; i < numYears; i++){\n            var obj = { \"year\": histData[startIndex + i].year,\n                        \"age\": +(props.currentage) + i,\n                        \"beginValue\": (i > 0) ? cycleData[i - 1].endValue : +(props.portfoliovalue),\n                        \"equityReturn\": histData[startIndex + i].equity,\n                        \"equityAppr\": 0,\n                        \"divAppr\": 0,\n                        \"bondReturn\": 0,\n                        \"bondAppr\": 0,\n                        \"aggReturn\": 0,\n                        \"cumulativeCPI\": histData[startIndex + i].cpi / startCPI,\n                        \"spend\": +(props.spendvalue),\n                        \"actualSpend\": +(props.spendvalue),\n                        \"fees\": 0,\n                        \"endValue\": 0,\n                        \"adjEndValue\": 0,\n                        \"appr\": 0,\n                        \"adjAppr\": 0,\n                      };\n            // adjust spend for cumultative cpi\n            obj.actualSpend = obj.spend * obj.cumulativeCPI;\n            // apply ss adjustment if applicable\n            var adjustment = (ssAge <= obj.age) ? (ssIncome * obj.cumulativeCPI) : 0;\n            obj.actualSpend -= adjustment;\n            // port1 = subtract spend from start port\n            obj.endValue = obj.beginValue - obj.actualSpend;\n            if (0 < obj.endValue) {\n                var startStockValue = obj.endValue * stockPct;\n                // e growth = port1 * e-share * e-growth\n                obj.equityAppr = startStockValue * obj.equityReturn;\n                // calc dividends\n                obj.divAppr = startStockValue * histData[startIndex + i].dividends;\n                // b growth = port1 * b=share * b-growth\n                obj.bondAppr = calcBondYield(obj.endValue * bondPct, startIndex + i);\n                obj.bondReturn = obj.bondAppr / (obj.beginValue * bondPct);\n                obj.aggReturn = (obj.equityReturn * stockPct) + (obj.bondReturn * bondPct);\n                // port2 = port1 + e-growth + b-growth\n                obj.appr = obj.equityAppr + obj.divAppr + obj.bondAppr;\n                obj.endValue += obj.appr;\n                // end port = port2 - (fees (based on cpi-adj value))\n                obj.fees = (obj.beginValue + obj.appr) * feePct;\n                obj.endValue -= obj.fees;\n                obj.adjEndValue = obj.endValue / obj.cumulativeCPI;\n                obj.adjAppr = obj.appr / obj.cumulativeCPI;\n                cycleData.push(obj);\n            }\n            else {\n                obj.endValue = obj.adjEndValue = 0;\n                cycleData.push(obj);\n                break;\n            }\n        }\n        return cycleData;\n    }\n\n    const getAggReturns = (allCycles) => {\n        var retVal = [];\n\n        for (var iCycle = 0; iCycle < allCycles.length; iCycle++) {\n            for (var year = 0; year < allCycles[iCycle].length; year++) {\n                const oneYear = allCycles[iCycle][year];\n                retVal.push(oneYear.aggReturn);\n            }\n        }\n\n        return retVal;\n    }\n\n    const calcCycleMeta = (oneCycle, lifetime) => {\n        var extAdjEndValue = d3.extent(oneCycle, (d) => d.adjEndValue);\n        var avgAdjEndValue = d3.mean(oneCycle, (d) => d.adjEndValue);\n        var medAdjEndValue = d3.median(oneCycle, (d) => d.adjEndValue);\n        var totalSpend = d3.sum(oneCycle, (d) => d.actualSpend);\n        var totalAppr = d3.sum(oneCycle, (d) => d.appr);\n        var totalAdjAppr = d3.sum(oneCycle, (d) => d.adjAppr);\n        var pctStart = oneCycle[oneCycle.length - 1].adjEndValue / props.portfoliovalue;\n        const thisLineColor = getColorStringForRelativeValue(pctStart);\n        var extAggReturn = d3.extent(oneCycle, (d) => d.aggReturn);\n        var avgAggReturn = d3.mean(oneCycle, (d) => d.aggReturn);\n        var medAggReturn = d3.median(oneCycle, (d) => d.aggReturn);\n\n        var oneMeta = {\n            'startCycleValue': props.portfoliovalue,\n            'endCycleValue': oneCycle[oneCycle.length - 1].endValue,\n            'adjEndCycleValue': oneCycle[oneCycle.length - 1].adjEndValue,\n            'extent': extAdjEndValue,\n            'mean': avgAdjEndValue,\n            'median': medAdjEndValue,\n            'pctOfStart': pctStart,\n            'totalSpend': totalSpend,\n            'totalAppreciation': totalAppr,\n            'totalAdjAppreciation': totalAdjAppr,\n            'extAggReturn': extAggReturn,\n            'avgAggReturn': avgAggReturn,\n            'medAggReturn': medAggReturn,\n            'fail': (oneCycle.length < lifetime),\n            'failAge': (oneCycle.length < lifetime) ? \n                       (oneCycle.length + props.currentage) :\n                       0,\n            'startYear': oneCycle[0].year,\n            'lineColor': thisLineColor,\n        };\n\n        return oneMeta;\n    }\n\n    const showSummaryData = (allCycles) => {\n\n        var extAdjEnd = d3.extent(allCycleMeta, (d) => d.adjEndCycleValue);\n        var avgAdjEnd = d3.mean(allCycleMeta, (d) => d.adjEndCycleValue);\n        var medAdjEnd = d3.median(allCycleMeta, (d) => d.adjEndCycleValue);\n\n        var avgSpend = d3.mean(allCycleMeta, (d) => d.totalSpend);        \n        var medianSpend = d3.median(allCycleMeta, (d) => d.totalSpend);\n        var extSpend = d3.extent(allCycleMeta, (d) => d.totalSpend);\n\n        var aggReturns = getAggReturns(allCycles);\n        var avgReturns = d3.mean(aggReturns);\n        var medianReturns = d3.median(aggReturns);\n        var extReturns = d3.extent(aggReturns);\n\n        var avgAdjAppr = d3.mean(allCycleMeta, (d) => d.totalAdjAppreciation);\n        var medianAdjAppr = d3.median(allCycleMeta, (d) => d.totalAdjAppreciation);\n        var extAdjAppr = d3.extent(allCycleMeta, (d) => d.totalAdjAppreciation);\n\n        var numFails = 0;\n        var minFailAge = props.lifeexpectancy + 1;\n        var failAges = [];\n\n        for (var i = 0; i < allCycleMeta.length; i++) {\n            if (allCycleMeta[i].fail) {\n                minFailAge = Math.min(allCycleMeta[i].failAge, minFailAge);\n                failAges[numFails] = allCycleMeta[i].failAge;\n                numFails++;\n            }\n        }\n\n        setAvgAdjEndValueState(avgAdjEnd);\n        setMedianAdjEndValueState(medAdjEnd);\n        setMinAdjEndValueState(extAdjEnd[0]);\n        setMaxAdjEndValueState(extAdjEnd[1]);\n\n        setAvgSpendState(avgSpend);\n        setMedianSpendState(medianSpend);\n        setMinSpendState(extSpend[0]);\n        setMaxSpendState(extSpend[1]);\n\n        setAvgReturnsState(avgReturns);\n        setMedianReturnsState(medianReturns);\n        setMinReturnsState(extReturns[0]);\n        setMaxReturnsState(extReturns[1]);\n\n        setAvgAdjAppreciationState(avgAdjAppr);\n        setMedianAdjAppreciationState(medianAdjAppr);\n        setMinAdjAppreciationState(extAdjAppr[0]);\n        setMaxAdjAppreciationState(extAdjAppr[1]);\n\n        setNumCyclesState(allCycleMeta.length);\n        setNumFailsState(numFails);\n        setMinFailAgeState(minFailAge);\n        setMedianFailAgeState(d3.median(failAges));\n    }\n\n    const calcCycles = (svg) => {\n        const lifetime = props.lifeexpectancy - props.currentage + 1;\n        const startDataYear = props.startdatayear;\n        const endDataYear = props.enddatayear;\n        // TODO : require numCycles to be greater than zero\n        const numCycles = (endDataYear - startDataYear + 2) - lifetime;\n        const startIndex = findHistStartIndex(startDataYear);\n        var portMin = Number.POSITIVE_INFINITY;\n        var portMax = Number.NEGATIVE_INFINITY;\n        var allCycles = [];\n\n        cleanupPrev();\n\n        for (var i = 0; i < numCycles; i++) {\n            var oneCycle = runCycle(startIndex + i, lifetime);\n            var cycleMeta = calcCycleMeta(oneCycle, lifetime);\n            \n            allCycleMeta[i] = cycleMeta;\n            allCycles[i] = oneCycle;\n\n            portMin = Math.min(portMin, cycleMeta.extent[0]);\n            portMax = Math.max(portMax, cycleMeta.extent[1]);\n        }\n\n        setAllCycleDataState(allCycles);\n        setAllCycleMetaState(allCycleMeta);\n\n        showSummaryData(allCycles);\n\n        const xScale = getXScale();\n        const yScale = getYScale(portMin, portMax);\n\n        drawAxes(svg, xScale, yScale, portMin, portMax);\n        for (i = 0; i < numCycles; i++) {\n            drawPortfolioLine(svg, xScale, yScale, allCycleMeta[i], allCycles[i]);\n        }\n    }\n\n    React.useEffect(() => {\n\n        const svg = findByID(svgCycleChartID)\n                      .append(\"g\")\n                      .attr(\"transform\", marginTranslate);\n        calcCycles(svg);\n\n        prepHoverStuff(svg);\n    }, [props] );\n\n    return (\n        <div>\n            <SummaryCards \n             fails={numFailsState} cycles={numCyclesState}\n             minfailage={minFailAgeState} medianfailage={medianFailAgeState} \n             medianendvalue={medianAdjEndValueState} avgendvalue={avgAdjEndValueState}\n             minendvalue={minAdjEndValueState} maxendvalue={maxAdjEndValueState}\n             medianreturns={medianReturnsState} avgreturns={avgReturnsState}\n             minreturns={minReturnsState} maxreturns={maxReturnsState}\n             />\n            <svg id={svgCycleChartID} \n                    width={totalWidth}\n                    height={totalHeight} \n            >\n                <rect id='trackingRect'\n                    style={{ opacity:0 }}\n                    width={boundedWidth}\n                    height={boundedHeight}\n                    transform={marginTranslate}\n                    fill='LightGrey'\n                    onMouseEnter={handleMouseOver}\n                    onMouseMove={handleMouseMove}\n                    onMouseLeave={handleMouseLeave}\n                />\n            </svg>  \n            <EndValueChart \n             startvalue={props.portfoliovalue} \n             minendvalue={minAdjEndValueState} \n             maxendvalue={maxAdjEndValueState} \n             medianendvalue={medianAdjEndValueState}\n             metadata={allCycleMetaState} \n             cyclechartid={svgCycleChartID} />            \n        </div>\n    );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}