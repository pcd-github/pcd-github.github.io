{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\"; // d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HistoricalChart() {\n  _s();\n\n  const [activeIndex, setActiveIndex] = React.useState(null);\n  const [histData, setData] = React.useState([]);\n  React.useEffect(() => {\n    d3.csv(hist, function (d) {\n      return {\n        year: d.year,\n        inflation: +d.inflation,\n        equity: +d.equity,\n        bond: +d.bond\n      };\n    }).then(function (dataset) {\n      setData(dataset);\n      var svg = d3.select(\"#d3target\"); // Add the equity line\n\n      svg.append(\"path\").datum(histData).attr(\"fill\", \"none\").attr(\"stroke\", equityColor).attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().getX(function (d) {\n        return x(d.year);\n      }).getY(function (d) {\n        return y(d.equity);\n      }));\n    });\n    return () => undefined;\n  }, []);\n  const margin = {\n    top: 40,\n    right: 80,\n    bottom: 60,\n    left: 50\n  },\n        width = 960 - margin.left - margin.right,\n        height = 600 - margin.top - margin.bottom;\n  const equityColor = \"OrangeRed\";\n  const getX = d3.scaleLinear().domain(d3.extent(histData, d => d.year)).range([0, width]);\n  const getY = d3.scaleLinear().domain(d3.extent(histData, d => d.equity)).range([height, 0]);\n\n  const getXAxis = ref => {\n    const xAxis = d3.axisBottom(getX);\n    d3.select(ref).call(xAxis.tickFormat(d3.format(\"d\")));\n  };\n\n  const getYAxis = ref => {\n    const yAxis = d3.axisLeft(getY);\n    d3.select(ref).call(yAxis.tickFormat(d3.format(\"4.2%\")));\n  };\n\n  const handleMouseMove = e => {\n    const bisect = d3.bisector(d => d.date).left,\n          x0 = getX.invert(d3.pointer(e, this)[0]),\n          index = bisect(histData, x0, 1);\n    setActiveIndex(index);\n  };\n\n  const handleMouseLeave = () => {\n    setActiveIndex(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"d3target\",\n      viewBox: `0 0 ${width + margin.left + margin.right} \n                                ${height + margin.top + margin.bottom}`,\n      onMouseMove: handleMouseMove,\n      onMouseLeave: handleMouseLeave,\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"axis xAxis\",\n        ref: getXAxis,\n        transform: `translate(0,${height})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"axis\",\n        ref: getYAxis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HistoricalChart, \"w7aL4YtEYJwAmzJRcT/B00Op1P8=\");\n\n_c = HistoricalChart;\nexport default HistoricalChart; //                 <path strokeWidth={3} stroke={equityColor} d={equityPath} />\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoricalChart\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js"],"names":["React","d3","hist","HistoricalChart","activeIndex","setActiveIndex","useState","histData","setData","useEffect","csv","d","year","inflation","equity","bond","then","dataset","svg","select","append","datum","attr","equityColor","line","getX","x","getY","y","undefined","margin","top","right","bottom","left","width","height","scaleLinear","domain","extent","range","getXAxis","ref","xAxis","axisBottom","call","tickFormat","format","getYAxis","yAxis","axisLeft","handleMouseMove","e","bisect","bisector","date","x0","invert","pointer","index","handleMouseLeave"],"mappings":"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","sourcesContent":["\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\";\n\n// d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nfunction HistoricalChart () {\n    const [activeIndex, setActiveIndex] = React.useState(null);\n    const [histData, setData] = React.useState([]);\n\n    React.useEffect(() => {\n        d3.csv(hist,function(d) {\n            return { year: d.year, inflation: +d.inflation, equity: +d.equity, bond: +d.bond };\n        })\n        .then (function(dataset) {\n            setData(dataset);\n            var svg = d3.select(\"#d3target\");\n\n            // Add the equity line\n            svg.append(\"path\")\n               .datum(histData)\n               .attr(\"fill\", \"none\")\n               .attr(\"stroke\", equityColor)\n               .attr(\"stroke-width\", 1.5)\n               .attr(\"d\", d3.line()\n                            .getX(function(d) { return x(d.year) })\n                            .getY(function(d) { return y(d.equity) })\n                );\n          \n        })\n\n        return () => undefined;\n    }, []);\n\n    const margin = { top: 40, right: 80, bottom: 60, left: 50 },\n          width = 960 - margin.left - margin.right,\n          height = 600 - margin.top - margin.bottom;\n    const equityColor = \"OrangeRed\";\n\n    const getX = d3\n                 .scaleLinear()\n                 .domain(d3.extent(histData, (d) => d.year))\n                 .range([ 0, width ]);\n\n    const getY = d3\n                 .scaleLinear()\n                 .domain(d3.extent(histData, (d) => d.equity))\n                 .range([ height, 0 ]);\n\n    const getXAxis = (ref) => {\n        const xAxis = d3.axisBottom(getX);\n        d3.select(ref).call(xAxis.tickFormat( d3.format(\"d\") ));\n    }\n\n    const getYAxis = (ref) => {\n        const yAxis = d3.axisLeft(getY);\n        d3.select(ref).call(yAxis.tickFormat( d3.format(\"4.2%\") ));\n    }\n\n    const handleMouseMove = (e) => {\n        const bisect = d3.bisector((d) => d.date).left,\n            x0 = getX.invert(d3.pointer(e, this)[0]),\n            index = bisect(histData, x0, 1);\n        setActiveIndex(index);\n    };\n    \n    const handleMouseLeave = () => {\n        setActiveIndex(null);\n    };\n\n    return (\n        <div>\n            <svg id=\"d3target\"\n                viewBox={`0 0 ${width + margin.left + margin.right} \n                                ${height + margin.top + margin.bottom}`}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave} >\n                \n                <g className=\"axis xAxis\"\n                    ref={getXAxis}\n                    transform={`translate(0,${height})`} />\n                <g className=\"axis\" ref={getYAxis} />                \n            </svg>\n        </div>\n    );\n}\n\nexport default HistoricalChart;\n//                 <path strokeWidth={3} stroke={equityColor} d={equityPath} />\n"]},"metadata":{},"sourceType":"module"}