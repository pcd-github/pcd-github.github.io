{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\"; // d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n// tooltip example : https://observablehq.com/@connor-roche/multi-line-chart-focus-context-w-mouseover-tooltip\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HistoricalChart() {\n  _s();\n\n  const [histDataState, setHistDataState] = useState([]);\n  const [focusState, setFocusState] = useState(null);\n  const [tooltipWrapperState, setTooltipWrapperState] = useState(null);\n  const [yearTooltipState, setYearTooltipState] = useState(null);\n  const [equityTooltipState, setEquityTooltipState] = useState(null);\n  const [bondTooltipState, setBondTooltipState] = useState(null);\n  const [inflationTooltipState, setInflationTooltipState] = useState(null);\n  const [tooltipBackground, setTooltipBackgroundState] = useState(null);\n  const [hoverLineState, setHoverLineState] = useState(null);\n  const margin = {\n    top: 40,\n    right: 80,\n    bottom: 60,\n    left: 50\n  };\n  const totalWidth = 960;\n  const totalHeight = 700;\n  const boundedWidth = totalWidth - margin.left - margin.right;\n  const boundedHeight = totalHeight - margin.top - margin.bottom;\n  const tooltipWidth = 75;\n  const tooltipHeight = 75;\n  const marginTranslate = \"translate(\" + margin.left + \",\" + margin.top + \")\";\n  const equityColor = \"Blue\";\n  const bondColor = \"Purple\";\n  const inflationColor = \"DarkGrey\";\n  const normalStrokeWidth = 1.5;\n  const normalLineOp = 0.5;\n  var pctFormat = d3.format(\"4.2%\");\n\n  const getXScale = (dataIn, widthIn) => {\n    var xExt = d3.extent(dataIn, d => d.year);\n    return d3.scaleLinear().domain(xExt).range([0, widthIn]);\n  };\n\n  const getYScale = (dataIn, heightIn) => {\n    var yExt = d3.extent(dataIn, d => d.equity);\n    return d3.scaleLinear().domain(yExt).range([heightIn, 0]);\n  };\n\n  const drawAxes = (svg, xScaleIn, yScaleIn, heightIn) => {\n    var yearFormat = d3.format(\"d\");\n    var xGen = d3.axisBottom(xScaleIn).tickFormat(yearFormat);\n    var yGen = d3.axisLeft(yScaleIn).tickFormat(pctFormat);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + heightIn + \")\").call(xGen);\n    svg.append(\"g\").call(yGen);\n  };\n\n  const drawLines = (svg, dataIn, xScaleIn, yScaleIn) => {\n    // Add the equity line\n    svg.append(\"path\").datum(dataIn).attr(\"fill\", \"none\").attr(\"pointer-events\", \"none\").style(\"opacity\", normalLineOp).attr(\"stroke\", equityColor).attr(\"stroke-width\", normalStrokeWidth).attr(\"d\", d3.line().x(function (d) {\n      return xScaleIn(d.year);\n    }).y(function (d) {\n      return yScaleIn(d.equity);\n    })); // Add the bonds line\n\n    svg.append(\"path\").datum(dataIn).attr(\"fill\", \"none\").attr(\"pointer-events\", \"none\").attr(\"stroke\", bondColor).attr(\"stroke-width\", normalStrokeWidth).attr(\"d\", d3.line().x(function (d) {\n      return xScaleIn(d.year);\n    }).y(function (d) {\n      return yScaleIn(d.bond);\n    })); // Add the inflation line\n\n    svg.append(\"path\").datum(dataIn).style(\"stroke-dasharray\", \"3, 3\").attr(\"pointer-events\", \"none\").attr(\"fill\", \"none\").attr(\"stroke\", inflationColor).attr(\"stroke-width\", normalStrokeWidth).attr(\"d\", d3.line().x(function (d) {\n      return xScaleIn(d.year);\n    }).y(function (d) {\n      return yScaleIn(d.inflation);\n    }));\n  };\n\n  const prepHoverStuff = svg => {\n    const focus = svg.append('g').append('circle').style('opacity', 0).style('fill', 'none').attr(\"pointer-events\", \"none\").attr('stroke', 'black').attr('r', 5);\n    const tooltipWrapper = svg.append('g').attr('display', 'none');\n    tooltipWrapper.append('rect').style('opacity', 0.70).attr('width', tooltipWidth).attr('height', tooltipHeight).attr(\"pointer-events\", \"none\").attr(\"fill\", \"#e8e8e8\");\n    const tooltipText = tooltipWrapper.append('g').append('text');\n    tooltipText.attr(\"pointer-events\", \"none\").attr('font-weight', 900).attr('text-anchor', 'left');\n    const yearTT = tooltipText.append('tspan').attr('x', '5').attr('y', '5').attr('dy', '15px').attr(\"pointer-events\", \"none\");\n    const equityTT = tooltipText.append('tspan').attr('x', '5').attr('y', '5').attr('dy', '30px').attr(\"pointer-events\", \"none\");\n    const bondTT = tooltipText.append('tspan').attr('x', '5').attr('y', '5').attr('dy', '45px').attr(\"pointer-events\", \"none\");\n    const inflationTT = tooltipText.append('tspan').attr('x', '5').attr('y', '5').attr('dy', '60px').attr(\"pointer-events\", \"none\");\n    const hoverLine = svg.append(\"g\").append(\"rect\").style('opacity', 0).attr(\"pointer-events\", \"none\").attr(\"class\", \"dotted\").attr(\"stroke-width\", \"1px\").attr(\"width\", \".5px\").attr(\"height\", boundedHeight);\n    setFocusState(focus);\n    setTooltipWrapperState(tooltipWrapper);\n    setYearTooltipState(yearTT);\n    setEquityTooltipState(equityTT);\n    setBondTooltipState(bondTT);\n    setInflationTooltipState(inflationTT);\n    setHoverLineState(hoverLine);\n  };\n\n  const isDataTrackingReady = () => {\n    return 0 < histDataState.length && null != focusState;\n  };\n\n  const handleMouseOver = e => {\n    if (isDataTrackingReady()) {\n      focusState.style('opacity', 1);\n      tooltipWrapperState.attr('display', null);\n      hoverLineState.style('opacity', 1);\n    }\n  };\n\n  const handleMouseMove = e => {\n    if (isDataTrackingReady()) {\n      const bisect = d3.bisector(d => d.year).left;\n      var xScaleIn = getXScale(histDataState, boundedWidth);\n      var yScaleIn = getYScale(histDataState, boundedHeight);\n      const coords = d3.pointer(e);\n      const x0 = xScaleIn.invert(coords[0]);\n      const i = bisect(histDataState, x0, 1);\n      const selectedData = histDataState[i];\n      const clientX = xScaleIn(selectedData.year);\n      const clientY = yScaleIn(selectedData.equity);\n      var tooltipX = clientX; // prevent the tooltip from getting clipped.\n\n      if (boundedWidth <= clientX + tooltipWidth) {\n        tooltipX = clientX - tooltipWidth;\n      }\n\n      focusState.attr('cx', clientX).attr('cy', clientY);\n      yearTooltipState.text(selectedData.year);\n      equityTooltipState.text('stocks: ' + pctFormat(selectedData.equity));\n      bondTooltipState.text('bonds: ' + pctFormat(selectedData.bond));\n      inflationTooltipState.text('inflation: ' + pctFormat(selectedData.inflation)); // how big is the tooltip text?\n\n      const ttBounds = tooltipWrapperState.node().getBBox();\n      tooltipWrapperState.attr('width', ttBounds.width).attr('height', ttBounds.height).attr(\"transform\", \"translate(\" + tooltipX + \",\" + coords[1] + \")\");\n      hoverLineState.attr('x', clientX); // console.log(\"invert: \" + x0 + \" year: \" + selectedData.year);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    // BUG - why are we getting mouseleave events while hovering over rect, but not over a line?\n    console.log(\"leave\");\n\n    if (isDataTrackingReady()) {\n      focusState.style('opacity', 0);\n      tooltipWrapperState.attr('display', 'none');\n      hoverLineState.style('opacity', 0);\n    }\n  };\n\n  React.useEffect(() => {\n    var svg = d3.select(\"#d3target\").attr(\"width\", totalWidth).attr(\"height\", totalHeight).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    d3.csv(hist, function (d) {\n      return {\n        year: d.year,\n        inflation: +d.inflation,\n        equity: +d.equity,\n        bond: +d.bond\n      };\n    }).then(function (dataset) {\n      var xScaleIn = getXScale(dataset, boundedWidth);\n      var yScaleIn = getYScale(dataset, boundedHeight);\n      drawAxes(svg, xScaleIn, yScaleIn, boundedHeight);\n      drawLines(svg, dataset, xScaleIn, yScaleIn);\n      prepHoverStuff(svg);\n      setHistDataState(dataset);\n    });\n  }, [setHistDataState, setFocusState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"d3target\",\n      width: totalWidth,\n      height: totalHeight,\n      children: /*#__PURE__*/_jsxDEV(\"rect\", {\n        id: \"trackingRect\",\n        style: {\n          opacity: 0\n        },\n        width: boundedWidth,\n        height: boundedHeight,\n        transform: marginTranslate,\n        fill: \"LightGray\",\n        onMouseEnter: handleMouseOver,\n        onMouseMove: handleMouseMove,\n        onMouseLeave: handleMouseLeave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HistoricalChart, \"Vp2IhIkJdTHAYbPDnQz1pt5rOeU=\");\n\n_c = HistoricalChart;\nexport default HistoricalChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoricalChart\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js"],"names":["useState","React","d3","hist","HistoricalChart","histDataState","setHistDataState","focusState","setFocusState","tooltipWrapperState","setTooltipWrapperState","yearTooltipState","setYearTooltipState","equityTooltipState","setEquityTooltipState","bondTooltipState","setBondTooltipState","inflationTooltipState","setInflationTooltipState","tooltipBackground","setTooltipBackgroundState","hoverLineState","setHoverLineState","margin","top","right","bottom","left","totalWidth","totalHeight","boundedWidth","boundedHeight","tooltipWidth","tooltipHeight","marginTranslate","equityColor","bondColor","inflationColor","normalStrokeWidth","normalLineOp","pctFormat","format","getXScale","dataIn","widthIn","xExt","extent","d","year","scaleLinear","domain","range","getYScale","heightIn","yExt","equity","drawAxes","svg","xScaleIn","yScaleIn","yearFormat","xGen","axisBottom","tickFormat","yGen","axisLeft","append","attr","call","drawLines","datum","style","line","x","y","bond","inflation","prepHoverStuff","focus","tooltipWrapper","tooltipText","yearTT","equityTT","bondTT","inflationTT","hoverLine","isDataTrackingReady","length","handleMouseOver","e","handleMouseMove","bisect","bisector","coords","pointer","x0","invert","i","selectedData","clientX","clientY","tooltipX","text","ttBounds","node","getBBox","width","height","handleMouseLeave","console","log","useEffect","select","csv","then","dataset","opacity"],"mappings":"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","sourcesContent":["\nimport { useState } from \"react\";\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\";\n\n// d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n// tooltip example : https://observablehq.com/@connor-roche/multi-line-chart-focus-context-w-mouseover-tooltip\n\nfunction HistoricalChart () {\n\n    const [histDataState, setHistDataState] = useState([]);\n    const [focusState, setFocusState] = useState(null);\n    const [tooltipWrapperState, setTooltipWrapperState] = useState(null);\n    const [yearTooltipState, setYearTooltipState] = useState(null);\n    const [equityTooltipState, setEquityTooltipState] = useState(null);\n    const [bondTooltipState, setBondTooltipState] = useState(null);\n    const [inflationTooltipState, setInflationTooltipState] = useState(null);\n    const [tooltipBackground, setTooltipBackgroundState] = useState(null);\n    const [hoverLineState, setHoverLineState] = useState(null);\n\n    const margin = { top: 40, right: 80, bottom: 60, left: 50 };\n    const totalWidth = 960;\n    const totalHeight = 700;\n    const boundedWidth = totalWidth - margin.left - margin.right;\n    const boundedHeight = totalHeight - margin.top - margin.bottom;\n    const tooltipWidth = 75;\n    const tooltipHeight = 75;\n    const marginTranslate = \"translate(\" + margin.left + \",\" + margin.top + \")\";\n    const equityColor = \"Blue\";\n    const bondColor = \"Purple\";\n    const inflationColor = \"DarkGrey\";\n    const normalStrokeWidth = 1.5;\n    const normalLineOp = 0.5;\n    var pctFormat = d3.format(\"4.2%\");\n\n    const getXScale = (dataIn, widthIn) => { \n        var xExt = d3.extent(dataIn, (d) => d.year);\n        return d3.scaleLinear()\n                 .domain(xExt)\n                 .range([ 0, widthIn ]);\n    }\n\n    const getYScale = (dataIn, heightIn) => {\n        var yExt = d3.extent(dataIn, (d) => d.equity);\n        return d3.scaleLinear()\n                 .domain(yExt)\n                 .range([ heightIn, 0 ]);\n    }\n\n    const drawAxes = (svg, xScaleIn, yScaleIn, heightIn) => {\n        var yearFormat = d3.format(\"d\");\n        var xGen = d3.axisBottom(xScaleIn)\n                     .tickFormat(yearFormat);            \n        var yGen = d3.axisLeft(yScaleIn)\n                     .tickFormat(pctFormat);    \n\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + heightIn + \")\")\n            .call(xGen);\n        svg.append(\"g\")\n           .call(yGen);\n    };\n\n    const drawLines = (svg, dataIn, xScaleIn, yScaleIn) => {\n        // Add the equity line\n        svg.append(\"path\")\n            .datum(dataIn)\n            .attr(\"fill\", \"none\")\n            .attr(\"pointer-events\", \"none\")\n            .style(\"opacity\", normalLineOp)\n            .attr(\"stroke\", equityColor)\n            .attr(\"stroke-width\", normalStrokeWidth)\n            .attr(\"d\", d3.line()\n                        .x(function(d) { return xScaleIn(d.year) })\n                        .y(function(d) { return yScaleIn(d.equity) })\n            );\n        // Add the bonds line\n        svg.append(\"path\")\n            .datum(dataIn)\n            .attr(\"fill\", \"none\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"stroke\", bondColor)\n            .attr(\"stroke-width\", normalStrokeWidth)\n            .attr(\"d\", d3.line()\n                        .x(function(d) { return xScaleIn(d.year) })\n                        .y(function(d) { return yScaleIn(d.bond) })\n            );\n        // Add the inflation line\n        svg.append(\"path\")\n            .datum(dataIn)\n            .style(\"stroke-dasharray\", (\"3, 3\")) \n            .attr(\"pointer-events\", \"none\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", inflationColor)\n            .attr(\"stroke-width\", normalStrokeWidth)\n            .attr(\"d\", d3.line()\n                        .x(function(d) { return xScaleIn(d.year) })\n                        .y(function(d) { return yScaleIn(d.inflation) })\n            );\n        \n    }\n\n    const prepHoverStuff = (svg) => {\n        const focus = svg\n                .append('g')\n                .append('circle')\n                    .style('opacity', 0)\n                    .style('fill', 'none')\n                    .attr(\"pointer-events\", \"none\")\n                    .attr('stroke', 'black')\n                    .attr('r', 5);\n\n        const tooltipWrapper = svg\n                .append('g')\n                .attr('display', 'none');\n        \n        tooltipWrapper.append('rect')\n                      .style('opacity', 0.70)\n                      .attr('width', tooltipWidth)\n                      .attr('height', tooltipHeight)\n                      .attr(\"pointer-events\", \"none\")\n                      .attr(\"fill\", \"#e8e8e8\"); \n\n        const tooltipText = tooltipWrapper.append('g').append('text');\n\n        tooltipText.attr(\"pointer-events\", \"none\")\n                   .attr('font-weight', 900)\n                   .attr('text-anchor', 'left');\n                    \n        const yearTT = tooltipText\n                .append('tspan')\n                .attr('x', '5')\n                .attr('y', '5')\n                .attr('dy', '15px')\n                .attr(\"pointer-events\", \"none\");\n        const equityTT = tooltipText\n                .append('tspan')\n                .attr('x', '5')\n                .attr('y', '5')\n                .attr('dy', '30px')\n                .attr(\"pointer-events\", \"none\");\n        const bondTT = tooltipText\n                .append('tspan')\n                .attr('x', '5')\n                .attr('y', '5')\n                .attr('dy', '45px')\n                .attr(\"pointer-events\", \"none\");\n        const inflationTT = tooltipText\n                .append('tspan')\n                .attr('x', '5')\n                .attr('y', '5')\n                .attr('dy', '60px')\n                .attr(\"pointer-events\", \"none\");                \n\n        const hoverLine = svg\n                .append(\"g\")\n                .append(\"rect\")\n                    .style('opacity', 0)\n                    .attr(\"pointer-events\", \"none\")\n                    .attr(\"class\", \"dotted\")\n                    .attr(\"stroke-width\", \"1px\")\n                    .attr(\"width\", \".5px\")\n                    .attr(\"height\", boundedHeight);\n\n        setFocusState(focus);\n        setTooltipWrapperState(tooltipWrapper); \n        setYearTooltipState(yearTT);\n        setEquityTooltipState(equityTT);\n        setBondTooltipState(bondTT);\n        setInflationTooltipState(inflationTT);\n        setHoverLineState(hoverLine);\n    }\n\n    const isDataTrackingReady = () => {\n        return ( (0 < histDataState.length) &&\n                 (null != focusState)\n               );\n    }\n\n    const handleMouseOver = (e) => {\n        if (isDataTrackingReady()) {\n            focusState.style('opacity', 1);\n            tooltipWrapperState.attr('display', null);\n            hoverLineState.style('opacity', 1)\n        }\n    }\n\n    const handleMouseMove = (e) => {\n        if (isDataTrackingReady()) {  \n            const bisect = d3.bisector((d) => d.year).left;\n            var xScaleIn = getXScale(histDataState, boundedWidth);\n            var yScaleIn = getYScale(histDataState, boundedHeight);\n\n            const coords = d3.pointer(e);\n            const x0 = xScaleIn.invert(coords[0]);\n            const i = bisect(histDataState, x0, 1);\n            const selectedData = histDataState[i];\n            const clientX = xScaleIn(selectedData.year);\n            const clientY = yScaleIn(selectedData.equity);\n            var tooltipX = clientX;\n\n            // prevent the tooltip from getting clipped.\n            if (boundedWidth <= (clientX + tooltipWidth)) {\n                tooltipX = clientX - tooltipWidth;\n            }\n\n            focusState\n                .attr('cx', clientX)\n                .attr('cy', clientY);\n\n            yearTooltipState\n                .text(selectedData.year);\n            equityTooltipState\n                .text('stocks: ' + pctFormat(selectedData.equity));\n            bondTooltipState\n                .text('bonds: ' + pctFormat(selectedData.bond));\n            inflationTooltipState\n                .text('inflation: ' + pctFormat(selectedData.inflation));\n\n            // how big is the tooltip text?\n            const ttBounds = tooltipWrapperState.node().getBBox();\n\n            tooltipWrapperState\n                .attr('width', ttBounds.width)\n                .attr('height', ttBounds.height)\n                .attr(\"transform\", \"translate(\" + tooltipX + \",\" + coords[1] + \")\");\n            \n            hoverLineState\n                .attr('x', clientX);\n\n            // console.log(\"invert: \" + x0 + \" year: \" + selectedData.year);\n        }\n    };\n    \n    const handleMouseLeave = () => {\n        // BUG - why are we getting mouseleave events while hovering over rect, but not over a line?\n        console.log(\"leave\");\n        if (isDataTrackingReady()) {\n            focusState.style('opacity', 0);\n            tooltipWrapperState.attr('display', 'none');\n            hoverLineState.style('opacity', 0)\n        }\n    };\n\n    React.useEffect(() => {\n\n        var svg = d3.select(\"#d3target\")\n                    .attr(\"width\", totalWidth)\n                    .attr(\"height\", totalHeight)\n                    .append(\"g\")\n                    .attr(\"transform\",\n                          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        d3.csv(hist,function(d) {\n            return { year: d.year, inflation: +d.inflation, equity: +d.equity, bond: +d.bond };\n        })\n        .then (function(dataset) {\n\n            var xScaleIn = getXScale(dataset, boundedWidth);\n            var yScaleIn = getYScale(dataset, boundedHeight);\n\n            drawAxes(svg, xScaleIn, yScaleIn, boundedHeight);            \n            drawLines(svg, dataset, xScaleIn, yScaleIn); \n            prepHoverStuff(svg);\n \n            setHistDataState(dataset);\n        })\n    }, [setHistDataState, setFocusState]);\n\n    return (\n        <div>\n            <svg id=\"d3target\" \n                 width={totalWidth}\n                 height={totalHeight} \n            >\n                <rect id='trackingRect'\n                    style={{ opacity:0 }}\n                    width={boundedWidth}\n                    height={boundedHeight}\n                    transform={marginTranslate}\n                    fill='LightGray'\n                    onMouseEnter={handleMouseOver}\n                    onMouseMove={handleMouseMove}\n                    onMouseLeave={handleMouseLeave}\n                >\n                </rect>\n            </svg>            \n        </div>\n    );\n}\n\nexport default HistoricalChart;\n"]},"metadata":{},"sourceType":"module"}