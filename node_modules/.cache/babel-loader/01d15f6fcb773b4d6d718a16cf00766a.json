{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js\";\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport hist from \"./data/hist-returns.csv\"; // d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImportData() {\n  // set the dimensions and margins of the graph\n  var margin = {\n    top: 10,\n    right: 30,\n    bottom: 30,\n    left: 60\n  },\n      width = 460 - margin.left - margin.right,\n      height = 400 - margin.top - margin.bottom; // append the svg object to the body of the page\n\n  var svg = d3.select(\"#my_dataviz\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  d3.csv(hist, function (d) {\n    return {\n      year: +d.year,\n      inflation: +d.inflation,\n      equity: +d.equity,\n      bonds: +d.bonds\n    };\n  }).then(function (data) {\n    var x = d3.scaleLinear().domain([d3.min(data, function (d) {\n      return d.year;\n    }), d3.max(data, function (d) {\n      return d.year;\n    })]).range([0, width]);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)); // Add Y axis\n\n    var y = d3.scaleLinear().domain([d3.min(data, function (d) {\n      return d.equity;\n    }), d3.max(data, function (d) {\n      return d.equity;\n    })]).range([height, 0]);\n    svg.append(\"g\").call(d3.axisLeft(y)); // Add the line\n\n    svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n      return x(d.year);\n    }).y(function (d) {\n      return y(d.equity);\n    }));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chartContain\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ImportData;\n\nfunction HistoricalChart() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ImportData, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"my_dataviz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n/*\n  Simple HTML Table\n  usage: <OutTable data={data} cols={cols} />\n    data:Array<Array<any> >;\n    cols:Array<{name:string, key:number|string}>;\n*/\n\n\n_c2 = HistoricalChart;\n\nfunction OutTable({\n  data,\n  cols\n}) {\n  const makePct = pctIn => {\n    pctIn = pctIn * 100;\n    pctIn = Math.round((pctIn + Number.EPSILON) * 100) / 100;\n    return pctIn;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-responsive\",\n    children: [/*#__PURE__*/_jsxDEV(HistoricalChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: cols.map(c => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [c, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((r, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: r[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [makePct(r[1]), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [makePct(r[2]), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [makePct(r[3]), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 3\n  }, this);\n}\n\n_c3 = OutTable;\nexport default HistoricalData;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ImportData\");\n$RefreshReg$(_c2, \"HistoricalChart\");\n$RefreshReg$(_c3, \"OutTable\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js"],"names":["React","d3","hist","ImportData","margin","top","right","bottom","left","width","height","svg","select","append","attr","csv","d","year","inflation","equity","bonds","then","data","x","scaleLinear","domain","min","max","range","call","axisBottom","y","axisLeft","datum","line","HistoricalChart","OutTable","cols","makePct","pctIn","Math","round","Number","EPSILON","map","c","r","i","HistoricalData"],"mappings":"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","sourcesContent":["\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport hist from \"./data/hist-returns.csv\";\n\n// d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\nfunction ImportData() {\n    \n    // set the dimensions and margins of the graph\n    var margin = {top: 10, right: 30, bottom: 30, left: 60},\n    width = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\n    // append the svg object to the body of the page\n    var svg = d3.select(\"#my_dataviz\")\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\",\n        \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    d3.csv(hist,function(d) {\n                    return { year: +d.year, inflation: +d.inflation, equity: +d.equity, bonds: +d.bonds };\n                })\n        .then (function(data) {\n                var x = d3.scaleLinear()\n                    .domain([d3.min(data, function(d) { return d.year; }),\n                             d3.max(data, function(d) { return d.year; })])\n                    .range([ 0, width ]);\n                \n                svg.append(\"g\")\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\n                    .call(d3.axisBottom(x));\n\n                // Add Y axis\n                var y = d3.scaleLinear()\n                    .domain([d3.min(data, function(d) { return d.equity; }),\n                             d3.max(data, function(d) { return d.equity; })])\n                    .range([ height, 0 ]);\n                \n                    svg.append(\"g\")\n                .call(d3.axisLeft(y));\n\n                // Add the line\n                svg.append(\"path\")\n                .datum(data)\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke\", \"steelblue\")\n                .attr(\"stroke-width\", 1.5)\n                .attr(\"d\", d3.line()\n                    .x(function(d) { return x(d.year) })\n                    .y(function(d) { return y(d.equity) })\n                    )\n\n            });\n\n    return(\n        <div id=\"chartContain\"></div>\n    );\n}\n\nfunction HistoricalChart() {\n\n    return (\n        <div>\n            <ImportData />\n            <div id=\"my_dataviz\"></div>            \n        </div>\n    );\n}\n\n/*\n  Simple HTML Table\n  usage: <OutTable data={data} cols={cols} />\n    data:Array<Array<any> >;\n    cols:Array<{name:string, key:number|string}>;\n*/\nfunction OutTable({ data, cols }) {\n\n    const makePct = (pctIn) => {\n        pctIn = pctIn * 100;\n        pctIn = Math.round((pctIn + Number.EPSILON) * 100) / 100;\n        return (pctIn);\n    }\n\n\treturn (\n\t\t<div className=\"table-responsive\">\n\t\t\t<HistoricalChart />\n            <table className=\"table table-striped\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>{cols.map((c) => <th>{c} </th>)}</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    {data.map((r,i) => <tr>\n                        <td>\n                            {r[0]}\n                        </td>\n                        <td>\n                            {makePct(r[1])}%  \n                        </td>\n                        <td>\n                            {makePct(r[2])}%                    \n                        </td>\n                        <td>\n                            {makePct(r[3])}%                                            \n                        </td>\n                    </tr>)}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n}\n\nexport default HistoricalData;\n"]},"metadata":{},"sourceType":"module"}