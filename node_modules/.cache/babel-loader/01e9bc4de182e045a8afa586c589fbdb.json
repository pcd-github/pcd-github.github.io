{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\"; // d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HistoricalChart() {\n  _s();\n\n  const [activeIndex, setActiveIndex] = React.useState(null);\n  const [histData, setData] = React.useState([]);\n  React.useEffect(() => {\n    console.log(\"React.useEffect\");\n    d3.csv(hist, function (d) {\n      return {\n        year: d.year,\n        inflation: +d.inflation,\n        equity: +d.equity,\n        bond: +d.bond\n      };\n    }).then(function (dataset) {\n      console.log(\"React.useEffect.then\");\n      setData(dataset);\n      var svg = d3.select(\"#d3target\");\n      var x = getX(dataset, width);\n      var y = getY(dataset, height);\n      setupAxes(dataset, svg, x, y, width, height); // xy axes\n\n      svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(getXAxis);\n      svg.append(\"g\").call(getYAxis); // Add the equity line\n\n      svg.append(\"path\").datum(dataset).attr(\"fill\", \"none\").attr(\"stroke\", equityColor).attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n        return getX(d.year);\n      }).y(function (d) {\n        return getY(d.equity);\n      }));\n    });\n  });\n  const margin = {\n    top: 40,\n    right: 80,\n    bottom: 60,\n    left: 50\n  },\n        width = 960 - margin.left - margin.right,\n        height = 600 - margin.top - margin.bottom;\n  const equityColor = \"OrangeRed\";\n\n  const getX = () => {\n    // console.log(\"getX\");\n    d3.scaleLinear().domain(d3.extent(histData, d => d.year)).range([0, width]);\n  };\n\n  const getY = () => {\n    d3.scaleLinear().domain(d3.extent(histData, d => d.equity)).range([height, 0]);\n  };\n\n  const setupAxes = (inData, svg, x, y, width, height) => {\n    console.log(\"setupAxes\");\n    var pctFormat = d3.format(\"4.2%\");\n    var yearFormat = d3.format(\"d\");\n    var xGen = d3.axisBottom(x).tickFormat(yearFormat);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(xGen);\n    var yGen = d3.axisLeft(y).tickFormat(pctFormat);\n    svg.append(\"g\").call(yGen);\n  };\n\n  const handleMouseMove = e => {\n    console.log(\"handleMouseMove\");\n    const bisect = d3.bisector(d => d.date).left,\n          x0 = getX.invert(d3.pointer(e, this)[0]),\n          index = bisect(histData, x0, 1);\n    setActiveIndex(index);\n  };\n\n  const handleMouseLeave = () => {\n    console.log(\"handleMouseMove\");\n    setActiveIndex(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"d3target\",\n      viewBox: `0 0 ${width + margin.left + margin.right} \n                                ${height + margin.top + margin.bottom}`,\n      onMouseMove: handleMouseMove,\n      onMouseLeave: handleMouseLeave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HistoricalChart, \"w7aL4YtEYJwAmzJRcT/B00Op1P8=\");\n\n_c = HistoricalChart;\nexport default HistoricalChart; //                 <path strokeWidth={3} stroke={equityColor} d={equityPath} />\n\n/*\n                \n                <g className=\"axis xAxis\"\n                    ref={getXAxis}\n                    transform={`translate(0,${height})`} />\n                <g className=\"axis\" ref={getYAxis} />                \n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoricalChart\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js"],"names":["React","d3","hist","HistoricalChart","activeIndex","setActiveIndex","useState","histData","setData","useEffect","console","log","csv","d","year","inflation","equity","bond","then","dataset","svg","select","x","getX","width","y","getY","height","setupAxes","append","attr","call","getXAxis","getYAxis","datum","equityColor","line","margin","top","right","bottom","left","scaleLinear","domain","extent","range","inData","pctFormat","format","yearFormat","xGen","axisBottom","tickFormat","yGen","axisLeft","handleMouseMove","e","bisect","bisector","date","x0","invert","pointer","index","handleMouseLeave"],"mappings":"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","sourcesContent":["\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\";\n\n// d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nfunction HistoricalChart () {\n    const [activeIndex, setActiveIndex] = React.useState(null);\n    const [histData, setData] = React.useState([]);\n\n    React.useEffect(() => {\n        console.log(\"React.useEffect\");\n        d3.csv(hist,function(d) {\n            return { year: d.year, inflation: +d.inflation, equity: +d.equity, bond: +d.bond };\n        })\n        .then (function(dataset) {\n            console.log(\"React.useEffect.then\");\n            setData(dataset);\n            var svg = d3.select(\"#d3target\");\n\n            var x = getX(dataset, width);\n            var y = getY(dataset, height);\n            setupAxes(dataset, svg, x, y, width, height);\n\n            // xy axes\n            svg.append(\"g\")\n               .attr(\"transform\", \"translate(0,\" + height + \")\")\n               .call(getXAxis);\n            svg.append(\"g\")\n               .call(getYAxis);\n\n            // Add the equity line\n            svg.append(\"path\")\n               .datum(dataset)\n               .attr(\"fill\", \"none\")\n               .attr(\"stroke\", equityColor)\n               .attr(\"stroke-width\", 1.5)\n               .attr(\"d\", d3.line()\n                            .x(function(d) { return getX(d.year) })\n                            .y(function(d) { return getY(d.equity) })\n                );\n          \n        })\n    });\n\n    const margin = { top: 40, right: 80, bottom: 60, left: 50 },\n          width = 960 - margin.left - margin.right,\n          height = 600 - margin.top - margin.bottom;\n    const equityColor = \"OrangeRed\";\n\n    const getX = () => { \n        // console.log(\"getX\");\n        d3.scaleLinear()\n          .domain(d3.extent(histData, (d) => d.year))\n          .range([ 0, width ]);\n    }\n\n    const getY = () => {\n        d3.scaleLinear()\n          .domain(d3.extent(histData, (d) => d.equity))\n          .range([ height, 0 ]);\n    }\n\n    const setupAxes = (inData, svg, x, y, width, height) => {\n        console.log(\"setupAxes\");\n        var pctFormat = d3.format(\"4.2%\");\n        var yearFormat = d3.format(\"d\");\n\n        var xGen = d3.axisBottom(x)\n                     .tickFormat(yearFormat);\n        \n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xGen);\n\n        var yGen = d3.axisLeft(y)\n                     .tickFormat(pctFormat);\n        \n        svg.append(\"g\")\n            .call(yGen);\n    };\n\n    const handleMouseMove = (e) => {\n        console.log(\"handleMouseMove\");\n        const bisect = d3.bisector((d) => d.date).left,\n            x0 = getX.invert(d3.pointer(e, this)[0]),\n            index = bisect(histData, x0, 1);\n        setActiveIndex(index);\n    };\n    \n    const handleMouseLeave = () => {\n        console.log(\"handleMouseMove\");\n        setActiveIndex(null);\n    };\n\n    return (\n        <div>\n            <svg id=\"d3target\"\n                viewBox={`0 0 ${width + margin.left + margin.right} \n                                ${height + margin.top + margin.bottom}`}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave} >\n            </svg>\n        </div>\n    );\n}\n\nexport default HistoricalChart;\n//                 <path strokeWidth={3} stroke={equityColor} d={equityPath} />\n/*\n                \n                <g className=\"axis xAxis\"\n                    ref={getXAxis}\n                    transform={`translate(0,${height})`} />\n                <g className=\"axis\" ref={getYAxis} />                \n*/"]},"metadata":{},"sourceType":"module"}