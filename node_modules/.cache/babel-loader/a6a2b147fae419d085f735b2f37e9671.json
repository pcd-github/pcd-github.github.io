{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\"; // d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HistoricalChart() {\n  _s();\n\n  const [activeIndex, setActiveIndex] = React.useState(null);\n  const [histData, setData] = React.useState([]);\n  const margin = {\n    top: 40,\n    right: 80,\n    bottom: 60,\n    left: 50\n  },\n        width = 960 - margin.left - margin.right,\n        height = 600 - margin.top - margin.bottom;\n  const equityColor = \"OrangeRed\";\n\n  const getX = (inData, width) => {\n    return d3.scaleLinear().domain([d3.min(inData, function (d) {\n      return d.year;\n    }), d3.max(inData, function (d) {\n      return d.year;\n    })]).range([0, width]);\n  };\n\n  const getY = (inData, height) => {\n    return d3.scaleLinear().domain([d3.min(inData, function (d) {\n      return d.equity;\n    }), d3.max(inData, function (d) {\n      return d.equity;\n    })]).range([height, 0]);\n  };\n\n  const getXAxis = ref => {\n    var yearFormat = d3.format(\"d\");\n    const xAxis = d3.axisBottom(getX);\n    d3.select(ref).call(xAxis.tickFormat(yearFormat));\n  };\n\n  const getYAxis = ref => {\n    var pctFormat = d3.format(\"4.2%\");\n    const yAxis = d3.axisLeft(getY);\n    d3.select(ref).call(yAxis.tickFormat(pctFormat));\n  };\n\n  const equityPath = d3.line().x(d => getX(d.date)).y(d => getY(d.equity)).curve(d3.curveMonotoneX)(histData);\n\n  const handleMouseMove = e => {\n    const bisect = d3.bisector(d => d.date).left,\n          x0 = getX.invert(d3.pointer(e, this)[0]),\n          index = bisect(histData, x0, 1);\n    setActiveIndex(index);\n  };\n\n  const handleMouseLeave = () => {\n    setActiveIndex(null);\n  };\n  /*\n  const setupLines = (inData, svg, x, y) => {\n          // Add the equity line\n          svg.append(\"path\")\n             .datum(inData)\n             .attr(\"fill\", \"none\")\n             .attr(\"stroke\", \"steelblue\")\n             .attr(\"stroke-width\", 1.5)\n             .attr(\"d\", d3.line()\n                  .x(function(d) { return x(d.year) })\n                  .y(function(d) { return y(d.equity) })\n              );\n          \n          // Add the bonds line\n          svg.append(\"path\")\n             .datum(inData)\n             .attr(\"fill\", \"none\")\n             .attr(\"stroke\", \"cyan\")\n             .attr(\"stroke-width\", 1.5)\n             .attr(\"d\", d3.line()\n                  .x(function(d) { return x(d.year) })\n                  .y(function(d) { return y(d.bond) })\n              );\n  \n          // Add the inflation line\n          svg.append(\"path\")\n             .datum(inData)\n             .attr(\"fill\", \"none\")\n             .attr(\"stroke\", \"red\")\n             .attr(\"stroke-width\", 1.5)\n             .style(\"stroke-dasharray\", (\"5, 5\"))\n             .attr(\"d\", d3.line()\n                  .x(function(d) { return x(d.year) })\n                  .y(function(d) { return y(d.inflation) })\n              );        \n  }\n  */\n\n\n  React.useEffect(() => {\n    d3.csv(hist, function (d) {\n      return {\n        year: d.year,\n        inflation: +d.inflation,\n        equity: +d.equity,\n        bond: +d.bond\n      };\n    }).then(function (dataset) {\n      setData(dataset);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: `0 0 ${width + margin.left + margin.right} \n                                    ${height + margin.top + margin.bottom}`,\n      onMouseMove: handleMouseMove,\n      onMouseLeave: handleMouseLeave,\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"axis\",\n        ref: getYAxis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"axis xAxis\",\n        ref: getXAxis,\n        transform: `translate(0,${height})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        strokeWidth: 3,\n        stroke: equityColor,\n        d: equityPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HistoricalChart, \"w7aL4YtEYJwAmzJRcT/B00Op1P8=\");\n\n_c = HistoricalChart;\nexport default HistoricalChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoricalChart\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js"],"names":["React","d3","hist","HistoricalChart","activeIndex","setActiveIndex","useState","histData","setData","margin","top","right","bottom","left","width","height","equityColor","getX","inData","scaleLinear","domain","min","d","year","max","range","getY","equity","getXAxis","ref","yearFormat","format","xAxis","axisBottom","select","call","tickFormat","getYAxis","pctFormat","yAxis","axisLeft","equityPath","line","x","date","y","curve","curveMonotoneX","handleMouseMove","e","bisect","bisector","x0","invert","pointer","index","handleMouseLeave","useEffect","csv","inflation","bond","then","dataset"],"mappings":"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","sourcesContent":["\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\";\n\n// d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nfunction HistoricalChart () {\n    const [activeIndex, setActiveIndex] = React.useState(null);\n    const [histData, setData] = React.useState([]);\n    const margin = { top: 40, right: 80, bottom: 60, left: 50 },\n          width = 960 - margin.left - margin.right,\n          height = 600 - margin.top - margin.bottom;\n    const equityColor = \"OrangeRed\";\n\n    const getX = (inData, width) => {\n        return (d3.scaleLinear()\n                    .domain([d3.min(inData, function(d) { return d.year; }),\n                             d3.max(inData, function(d) { return d.year; })])\n                    .range([ 0, width ]));\n    }\n\n    const getY = (inData, height) => {\n        return (d3.scaleLinear()\n                    .domain([d3.min(inData, function(d) { return d.equity; }),\n                             d3.max(inData, function(d) { return d.equity; })])\n                    .range([ height, 0 ]));\n    }\n\n    const getXAxis = (ref) => {\n        var yearFormat = d3.format(\"d\");\n        const xAxis = d3.axisBottom(getX);\n        d3.select(ref).call(xAxis.tickFormat(yearFormat));\n    }\n\n    const getYAxis = (ref) => {\n        var pctFormat = d3.format(\"4.2%\");\n        const yAxis = d3.axisLeft(getY);\n        d3.select(ref).call(yAxis.tickFormat(pctFormat));\n    }\n\n    const equityPath = d3.line()\n                         .x((d) => getX(d.date))\n                         .y((d) => getY(d.equity))\n                         .curve(d3.curveMonotoneX)(histData);\n\n    const handleMouseMove = (e) => {\n        const bisect = d3.bisector((d) => d.date).left,\n            x0 = getX.invert(d3.pointer(e, this)[0]),\n            index = bisect(histData, x0, 1);\n        setActiveIndex(index);\n    };\n    \n    const handleMouseLeave = () => {\n        setActiveIndex(null);\n    };\n\n    /*\n    const setupLines = (inData, svg, x, y) => {\n            // Add the equity line\n            svg.append(\"path\")\n               .datum(inData)\n               .attr(\"fill\", \"none\")\n               .attr(\"stroke\", \"steelblue\")\n               .attr(\"stroke-width\", 1.5)\n               .attr(\"d\", d3.line()\n                    .x(function(d) { return x(d.year) })\n                    .y(function(d) { return y(d.equity) })\n                );\n            \n            // Add the bonds line\n            svg.append(\"path\")\n               .datum(inData)\n               .attr(\"fill\", \"none\")\n               .attr(\"stroke\", \"cyan\")\n               .attr(\"stroke-width\", 1.5)\n               .attr(\"d\", d3.line()\n                    .x(function(d) { return x(d.year) })\n                    .y(function(d) { return y(d.bond) })\n                );\n    \n            // Add the inflation line\n            svg.append(\"path\")\n               .datum(inData)\n               .attr(\"fill\", \"none\")\n               .attr(\"stroke\", \"red\")\n               .attr(\"stroke-width\", 1.5)\n               .style(\"stroke-dasharray\", (\"5, 5\"))\n               .attr(\"d\", d3.line()\n                    .x(function(d) { return x(d.year) })\n                    .y(function(d) { return y(d.inflation) })\n                );        \n    }\n    */\n\n    React.useEffect(() => {\n        d3.csv(hist,function(d) {\n            return { year: d.year, inflation: +d.inflation, equity: +d.equity, bond: +d.bond };\n        })\n        .then (function(dataset) {\n            setData(dataset);\n        })\n    });\n\n      return (\n        <div>\n                <svg\n                    viewBox={`0 0 ${width + margin.left + margin.right} \n                                    ${height + margin.top + margin.bottom}`}\n                    onMouseMove={handleMouseMove}\n                    onMouseLeave={handleMouseLeave}\n                >\n                    <g className=\"axis\" ref={getYAxis} />\n                    <g className=\"axis xAxis\"\n                       ref={getXAxis}\n                       transform={`translate(0,${height})`}/>\n\n                    <path strokeWidth={3} stroke={equityColor} d={equityPath} />\n                </svg>\n        </div>\n      );\n}\n\nexport default HistoricalChart;\n"]},"metadata":{},"sourceType":"module"}