{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\"; // d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HistoricalChart() {\n  _s();\n\n  const [histDataState, setHistDataState] = useState([]);\n  const margin = {\n    top: 40,\n    right: 80,\n    bottom: 60,\n    left: 50\n  };\n  const width = 960 - margin.left - margin.right;\n  const height = 600 - margin.top - margin.bottom;\n  const equityColor = \"OrangeRed\";\n  var focus = null;\n\n  const getXScale = (dataIn, widthIn) => {\n    var xExt = d3.extent(dataIn, d => d.year);\n    return d3.scaleLinear().domain(xExt).range([0, widthIn]);\n  };\n\n  const getYScale = (dataIn, heightIn) => {\n    var yExt = d3.extent(dataIn, d => d.equity);\n    return d3.scaleLinear().domain(yExt).range([heightIn, 0]);\n  };\n\n  const drawAxes = (svg, xScaleIn, yScaleIn, heightIn) => {\n    var pctFormat = d3.format(\"4.2%\");\n    var yearFormat = d3.format(\"d\");\n    var xGen = d3.axisBottom(xScaleIn).tickFormat(yearFormat);\n    var yGen = d3.axisLeft(yScaleIn).tickFormat(pctFormat);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + heightIn + \")\").call(xGen);\n    svg.append(\"g\").call(yGen);\n  };\n\n  const drawLines = (svg, dataIn, xScaleIn, yScaleIn) => {\n    // Add the equity line\n    svg.append(\"path\").datum(dataIn).attr(\"fill\", \"none\").attr(\"stroke\", equityColor).attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n      return xScaleIn(d.year);\n    }).y(function (d) {\n      return yScaleIn(d.equity);\n    }));\n  };\n\n  const prepHoverStuff = svg => {\n    /*\n    // focus indicator\n    focus = svg\n    .append('g')\n    .append('circle')\n        .style(\"fill\", \"none\")\n        .attr(\"stroke\", \"black\")\n        .attr('r', 8.5)\n        .style(\"opacity\", 0);\n     // mouse tracking stuff\n    svg\n    .append('rect')\n    .style(\"fill\", \"none\")\n    .style(\"pointer-events\", \"all\")\n    .attr('width', width)\n    .attr('height', height)\n    .on('mouseover', handleMouseOver)\n    .on('mousemove', handleMouseMove)\n    .on('mouseout', handleMouseLeave);   \n    */\n  };\n\n  const isDataTrackingReady = () => {\n    return 0 < histDataState.length;\n  };\n\n  const handleMouseOver = e => {\n    if (isDataTrackingReady()) {\n      focus.style(\"opacity\", 1);\n    }\n  };\n\n  const handleMouseMove = e => {\n    const bisect = d3.bisector(d => d.year).left;\n    var xScaleIn = getXScale(histDataState, width);\n    const x0 = xScaleIn.invert(d3.pointer(e, this)[0]);\n    var i = bisect(histDataState, x0, 1);\n    var selectedData = histDataState[i];\n    console.log(\"mouseMove - data : \" + histDataState.length + \" x0 : \" + x0 + \" index : \" + i);\n\n    if (isDataTrackingReady()) {\n      focus.attr(\"cx\", getXScale(selectedData.year)).attr(\"cy\", getYScale(selectedData.equity));\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (isDataTrackingReady()) {\n      focus.style(\"opacity\", 0);\n    }\n  };\n\n  React.useEffect(() => {\n    console.log(\"loading ...\");\n    var svg = d3.select(\"#d3target\");\n    d3.csv(hist, function (d) {\n      return {\n        year: d.year,\n        inflation: +d.inflation,\n        equity: +d.equity,\n        bond: +d.bond\n      };\n    }).then(function (dataset) {\n      setHistDataState(dataset);\n      var xScaleIn = getXScale(dataset, width);\n      var yScaleIn = getYScale(dataset, height);\n      drawAxes(svg, xScaleIn, yScaleIn, height);\n      drawLines(svg, dataset, xScaleIn, yScaleIn);\n      prepHoverStuff(svg);\n      console.log(\"... loaded\");\n    });\n  }, [setHistDataState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"data size is \", histDataState.length, /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"d3target\",\n      width: 960 - margin.left - margin.right,\n      height: 600 - margin.top - margin.bottom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HistoricalChart, \"cMEpOntq8nsYvJREMdtCtfe9OZ4=\");\n\n_c = HistoricalChart;\nexport default HistoricalChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoricalChart\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js"],"names":["React","useState","d3","hist","HistoricalChart","histDataState","setHistDataState","margin","top","right","bottom","left","width","height","equityColor","focus","getXScale","dataIn","widthIn","xExt","extent","d","year","scaleLinear","domain","range","getYScale","heightIn","yExt","equity","drawAxes","svg","xScaleIn","yScaleIn","pctFormat","format","yearFormat","xGen","axisBottom","tickFormat","yGen","axisLeft","append","attr","call","drawLines","datum","line","x","y","prepHoverStuff","isDataTrackingReady","length","handleMouseOver","e","style","handleMouseMove","bisect","bisector","x0","invert","pointer","i","selectedData","console","log","handleMouseLeave","useEffect","select","csv","inflation","bond","then","dataset"],"mappings":";;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAO,iBAAP;AACA,OAAOC,IAAP,MAAiB,yBAAjB,C,CAEA;AACA;AACA;;;;AAEA,SAASC,eAAT,GAA4B;AAAA;;AACxB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMM,MAAM,GAAG;AAAEC,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,KAAK,EAAE,EAAlB;AAAsBC,IAAAA,MAAM,EAAE,EAA9B;AAAkCC,IAAAA,IAAI,EAAE;AAAxC,GAAf;AACA,QAAMC,KAAK,GAAG,MAAML,MAAM,CAACI,IAAb,GAAoBJ,MAAM,CAACE,KAAzC;AACA,QAAMI,MAAM,GAAG,MAAMN,MAAM,CAACC,GAAb,GAAmBD,MAAM,CAACG,MAAzC;AACA,QAAMI,WAAW,GAAG,WAApB;AACA,MAAIC,KAAK,GAAG,IAAZ;;AAEA,QAAMC,SAAS,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;AACnC,QAAIC,IAAI,GAAGjB,EAAE,CAACkB,MAAH,CAAUH,MAAV,EAAmBI,CAAD,IAAOA,CAAC,CAACC,IAA3B,CAAX;AACA,WAAOpB,EAAE,CAACqB,WAAH,GACGC,MADH,CACUL,IADV,EAEGM,KAFH,CAES,CAAE,CAAF,EAAKP,OAAL,CAFT,CAAP;AAGH,GALD;;AAOA,QAAMQ,SAAS,GAAG,CAACT,MAAD,EAASU,QAAT,KAAsB;AACpC,QAAIC,IAAI,GAAG1B,EAAE,CAACkB,MAAH,CAAUH,MAAV,EAAmBI,CAAD,IAAOA,CAAC,CAACQ,MAA3B,CAAX;AACA,WAAO3B,EAAE,CAACqB,WAAH,GACGC,MADH,CACUI,IADV,EAEGH,KAFH,CAES,CAAEE,QAAF,EAAY,CAAZ,CAFT,CAAP;AAGH,GALD;;AAOA,QAAMG,QAAQ,GAAG,CAACC,GAAD,EAAMC,QAAN,EAAgBC,QAAhB,EAA0BN,QAA1B,KAAuC;AACpD,QAAIO,SAAS,GAAGhC,EAAE,CAACiC,MAAH,CAAU,MAAV,CAAhB;AACA,QAAIC,UAAU,GAAGlC,EAAE,CAACiC,MAAH,CAAU,GAAV,CAAjB;AACA,QAAIE,IAAI,GAAGnC,EAAE,CAACoC,UAAH,CAAcN,QAAd,EACGO,UADH,CACcH,UADd,CAAX;AAEA,QAAII,IAAI,GAAGtC,EAAE,CAACuC,QAAH,CAAYR,QAAZ,EACGM,UADH,CACcL,SADd,CAAX;AAGAH,IAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,WADV,EACuB,iBAAiBhB,QAAjB,GAA4B,GADnD,EAEKiB,IAFL,CAEUP,IAFV;AAGAN,IAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EACIE,IADJ,CACSJ,IADT;AAEH,GAbD;;AAeA,QAAMK,SAAS,GAAG,CAACd,GAAD,EAAMd,MAAN,EAAce,QAAd,EAAwBC,QAAxB,KAAqC;AACnD;AACAF,IAAAA,GAAG,CAACW,MAAJ,CAAW,MAAX,EACKI,KADL,CACW7B,MADX,EAEK0B,IAFL,CAEU,MAFV,EAEkB,MAFlB,EAGKA,IAHL,CAGU,QAHV,EAGoB7B,WAHpB,EAIK6B,IAJL,CAIU,cAJV,EAI0B,GAJ1B,EAKKA,IALL,CAKU,GALV,EAKezC,EAAE,CAAC6C,IAAH,GACEC,CADF,CACI,UAAS3B,CAAT,EAAY;AAAE,aAAOW,QAAQ,CAACX,CAAC,CAACC,IAAH,CAAf;AAAyB,KAD3C,EAEE2B,CAFF,CAEI,UAAS5B,CAAT,EAAY;AAAE,aAAOY,QAAQ,CAACZ,CAAC,CAACQ,MAAH,CAAf;AAA2B,KAF7C,CALf;AASH,GAXD;;AAaA,QAAMqB,cAAc,GAAInB,GAAD,IAAS;AAC5B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEK,GAtBD;;AAwBA,QAAMoB,mBAAmB,GAAG,MAAM;AAC9B,WAAQ,IAAI9C,aAAa,CAAC+C,MAA1B;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAIC,CAAD,IAAO;AAC3B,QAAIH,mBAAmB,EAAvB,EAA2B;AACvBpC,MAAAA,KAAK,CAACwC,KAAN,CAAY,SAAZ,EAAuB,CAAvB;AACH;AACJ,GAJD;;AAMA,QAAMC,eAAe,GAAIF,CAAD,IAAO;AAC3B,UAAMG,MAAM,GAAGvD,EAAE,CAACwD,QAAH,CAAarC,CAAD,IAAOA,CAAC,CAACC,IAArB,EAA2BX,IAA1C;AACA,QAAIqB,QAAQ,GAAGhB,SAAS,CAACX,aAAD,EAAgBO,KAAhB,CAAxB;AACA,UAAM+C,EAAE,GAAG3B,QAAQ,CAAC4B,MAAT,CAAgB1D,EAAE,CAAC2D,OAAH,CAAWP,CAAX,EAAc,IAAd,EAAoB,CAApB,CAAhB,CAAX;AACA,QAAIQ,CAAC,GAAGL,MAAM,CAACpD,aAAD,EAAgBsD,EAAhB,EAAoB,CAApB,CAAd;AACA,QAAII,YAAY,GAAG1D,aAAa,CAACyD,CAAD,CAAhC;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwB5D,aAAa,CAAC+C,MAAtC,GAA+C,QAA/C,GAA0DO,EAA1D,GAA+D,WAA/D,GAA6EG,CAAzF;;AAEA,QAAIX,mBAAmB,EAAvB,EAA2B;AACnBpC,MAAAA,KAAK,CACJ4B,IADD,CACM,IADN,EACY3B,SAAS,CAAC+C,YAAY,CAACzC,IAAd,CADrB,EAECqB,IAFD,CAEM,IAFN,EAEYjB,SAAS,CAACqC,YAAY,CAAClC,MAAd,CAFrB;AAGP;AACJ,GAdD;;AAgBA,QAAMqC,gBAAgB,GAAG,MAAM;AAC3B,QAAIf,mBAAmB,EAAvB,EAA2B;AACvBpC,MAAAA,KAAK,CAACwC,KAAN,CAAY,SAAZ,EAAuB,CAAvB;AACH;AACJ,GAJD;;AAMAvD,EAAAA,KAAK,CAACmE,SAAN,CAAgB,MAAM;AAElBH,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,QAAIlC,GAAG,GAAG7B,EAAE,CAACkE,MAAH,CAAU,WAAV,CAAV;AACAlE,IAAAA,EAAE,CAACmE,GAAH,CAAOlE,IAAP,EAAY,UAASkB,CAAT,EAAY;AACpB,aAAO;AAAEC,QAAAA,IAAI,EAAED,CAAC,CAACC,IAAV;AAAgBgD,QAAAA,SAAS,EAAE,CAACjD,CAAC,CAACiD,SAA9B;AAAyCzC,QAAAA,MAAM,EAAE,CAACR,CAAC,CAACQ,MAApD;AAA4D0C,QAAAA,IAAI,EAAE,CAAClD,CAAC,CAACkD;AAArE,OAAP;AACH,KAFD,EAGCC,IAHD,CAGO,UAASC,OAAT,EAAkB;AACrBnE,MAAAA,gBAAgB,CAACmE,OAAD,CAAhB;AAEA,UAAIzC,QAAQ,GAAGhB,SAAS,CAACyD,OAAD,EAAU7D,KAAV,CAAxB;AACA,UAAIqB,QAAQ,GAAGP,SAAS,CAAC+C,OAAD,EAAU5D,MAAV,CAAxB;AAEAiB,MAAAA,QAAQ,CAACC,GAAD,EAAMC,QAAN,EAAgBC,QAAhB,EAA0BpB,MAA1B,CAAR;AACAgC,MAAAA,SAAS,CAACd,GAAD,EAAM0C,OAAN,EAAezC,QAAf,EAAyBC,QAAzB,CAAT;AACAiB,MAAAA,cAAc,CAACnB,GAAD,CAAd;AAEAiC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,KAdD;AAeH,GApBD,EAoBG,CAAC3D,gBAAD,CApBH;AAsBA,sBACI;AAAA,gCACkBD,aAAa,CAAC+C,MADhC,eAEI;AAAK,MAAA,EAAE,EAAC,UAAR;AACK,MAAA,KAAK,EAAE,MAAM7C,MAAM,CAACI,IAAb,GAAoBJ,MAAM,CAACE,KADvC;AAEK,MAAA,MAAM,EAAE,MAAMF,MAAM,CAACC,GAAb,GAAmBD,MAAM,CAACG;AAFvC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA1IQN,e;;KAAAA,e;AA4IT,eAAeA,eAAf","sourcesContent":["\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\";\n\n// d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nfunction HistoricalChart () {\n    const [histDataState, setHistDataState] = useState([]);\n    const margin = { top: 40, right: 80, bottom: 60, left: 50 };\n    const width = 960 - margin.left - margin.right;\n    const height = 600 - margin.top - margin.bottom;\n    const equityColor = \"OrangeRed\";\n    var focus = null;\n\n    const getXScale = (dataIn, widthIn) => { \n        var xExt = d3.extent(dataIn, (d) => d.year);\n        return d3.scaleLinear()\n                 .domain(xExt)\n                 .range([ 0, widthIn ]);\n    }\n\n    const getYScale = (dataIn, heightIn) => {\n        var yExt = d3.extent(dataIn, (d) => d.equity);\n        return d3.scaleLinear()\n                 .domain(yExt)\n                 .range([ heightIn, 0 ]);\n    }\n\n    const drawAxes = (svg, xScaleIn, yScaleIn, heightIn) => {\n        var pctFormat = d3.format(\"4.2%\");\n        var yearFormat = d3.format(\"d\");\n        var xGen = d3.axisBottom(xScaleIn)\n                     .tickFormat(yearFormat);            \n        var yGen = d3.axisLeft(yScaleIn)\n                     .tickFormat(pctFormat);    \n\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + heightIn + \")\")\n            .call(xGen);\n        svg.append(\"g\")\n           .call(yGen);\n    };\n\n    const drawLines = (svg, dataIn, xScaleIn, yScaleIn) => {\n        // Add the equity line\n        svg.append(\"path\")\n            .datum(dataIn)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", equityColor)\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"d\", d3.line()\n                        .x(function(d) { return xScaleIn(d.year) })\n                        .y(function(d) { return yScaleIn(d.equity) })\n            );\n    }\n\n    const prepHoverStuff = (svg) => {\n        /*\n        // focus indicator\n        focus = svg\n        .append('g')\n        .append('circle')\n            .style(\"fill\", \"none\")\n            .attr(\"stroke\", \"black\")\n            .attr('r', 8.5)\n            .style(\"opacity\", 0);\n\n        // mouse tracking stuff\n        svg\n        .append('rect')\n        .style(\"fill\", \"none\")\n        .style(\"pointer-events\", \"all\")\n        .attr('width', width)\n        .attr('height', height)\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseLeave);   \n        */\n    }\n\n    const isDataTrackingReady = () => {\n        return (0 < histDataState.length);\n    }\n\n    const handleMouseOver = (e) => {\n        if (isDataTrackingReady()) {\n            focus.style(\"opacity\", 1);\n        }\n    }\n\n    const handleMouseMove = (e) => {\n        const bisect = d3.bisector((d) => d.year).left;\n        var xScaleIn = getXScale(histDataState, width);\n        const x0 = xScaleIn.invert(d3.pointer(e, this)[0]);\n        var i = bisect(histDataState, x0, 1);\n        var selectedData = histDataState[i];\n\n        console.log(\"mouseMove - data : \" + histDataState.length + \" x0 : \" + x0 + \" index : \" + i);\n\n        if (isDataTrackingReady()) {            \n                focus\n                .attr(\"cx\", getXScale(selectedData.year))\n                .attr(\"cy\", getYScale(selectedData.equity));\n        }\n    };\n    \n    const handleMouseLeave = () => {\n        if (isDataTrackingReady()) {\n            focus.style(\"opacity\", 0);\n        }\n    };\n\n    React.useEffect(() => {\n\n        console.log(\"loading ...\");\n\n        var svg = d3.select(\"#d3target\");       \n        d3.csv(hist,function(d) {\n            return { year: d.year, inflation: +d.inflation, equity: +d.equity, bond: +d.bond };\n        })\n        .then (function(dataset) {\n            setHistDataState(dataset);\n\n            var xScaleIn = getXScale(dataset, width);\n            var yScaleIn = getYScale(dataset, height);\n\n            drawAxes(svg, xScaleIn, yScaleIn, height);\n            drawLines(svg, dataset, xScaleIn, yScaleIn); \n            prepHoverStuff(svg);\n \n            console.log(\"... loaded\");\n        })\n    }, [setHistDataState]);\n\n    return (\n        <div>\n            data size is {histDataState.length}\n            <svg id=\"d3target\" \n                 width={960 - margin.left - margin.right}\n                 height={600 - margin.top - margin.bottom} >\n            </svg>\n            \n        </div>\n    );\n}\n\nexport default HistoricalChart;\n"]},"metadata":{},"sourceType":"module"}