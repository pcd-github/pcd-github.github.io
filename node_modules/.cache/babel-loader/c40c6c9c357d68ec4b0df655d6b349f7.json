{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/endvaluechart.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport './common.js';\nimport { cleanupPrev, getPerRunClassName, getHighValueColorString, getLowValueColorString, getThresholdValues, getColorStringForRelativeValue } from \"./common.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EndValueChart(props) {\n  _s();\n\n  const svgID = 'endvaluechartsvg';\n  const svgSelect = '#' + svgID;\n  const perRunClass = getPerRunClassName();\n  const histoBarClass = 'histobar';\n  const pathGroupID = 'pathgroupid';\n  const margin = {\n    top: 40,\n    right: 65,\n    bottom: 40,\n    left: 65\n  };\n  const totalWidth = 960;\n  const totalHeight = 300;\n  const marginTranslate = \"translate(\" + margin.left + \",\" + margin.top + \")\";\n  const boundedWidth = totalWidth - margin.left - margin.right;\n  const boundedHeight = totalHeight - margin.top - margin.bottom;\n  const ttBinWrapID = 'ttevwrap';\n  const ttBinBackID = 'ttevback';\n  const ttBinRangeID = 'ttevrange';\n  const ttBinPctID = 'ttevpct';\n  const tooltipWidth = 75;\n  const tooltipHeight = 75;\n\n  const getXScaleForAxis = () => {\n    const thresholdValues = getCurrencyThresholds();\n    const numThresholds = thresholdValues.length;\n    var thresholdRange = [];\n    var thresholdInc = boundedWidth / (numThresholds + 1);\n\n    for (var i = 0; i <= thresholdValues.length; i++) {\n      thresholdRange[i] = i * thresholdInc;\n    }\n\n    return d3.scaleThreshold().domain(thresholdValues).range(thresholdRange);\n  };\n\n  const calcBinMetadata = data => {\n    const oneBinMetadata = {\n      'binData': data,\n      'extBin': d3.extent(data, d => d.adjEndCycleValue),\n      'extPctStartValue': d3.extent(data, d => d.pctOfStart),\n      'binCount': data.length\n    };\n    return oneBinMetadata;\n  };\n\n  const drawReferenceRects = (bins, parent, xScaleBins) => {\n    const lowValueColorString = getLowValueColorString();\n    const highValueColorString = getHighValueColorString();\n    const refRectOpacity = '0.25';\n    const xStart = xScaleBins(props.startvalue);\n    const width = xScaleBins(bins[0].x1) - xScaleBins(bins[0].x0); // startValue reference rect\n\n    parent.append('rect').attr('class', perRunClass).style('opacity', refRectOpacity).attr('x', xStart).attr('y', 0).attr('width', width).attr('height', boundedHeight); // failures and \n    // low end value reference rect\n\n    parent.append('rect').attr('class', perRunClass).style('opacity', refRectOpacity).attr('fill', lowValueColorString).attr('x', 0).attr('y', 0).attr('width', xStart).attr('height', boundedHeight); // high value reference rect\n\n    parent.append('rect').attr('class', perRunClass).style('opacity', refRectOpacity).attr('fill', highValueColorString).attr('x', xStart + width).attr('y', 0).attr('width', boundedWidth - xStart - width).attr('height', boundedHeight);\n  };\n\n  const drawReferenceLines = (bins, parent, xScaleBins) => {\n    const xCenterIncrement = (xScaleBins(bins[0].x1) - xScaleBins(bins[0].x0)) / 2;\n    const xForOne = xScaleBins(props.startvalue) + xCenterIncrement;\n    const textMargin = 15; // start value\n\n    parent.append('line').attr('class', perRunClass).style('stroke', 'black').style('stroke-width', '2').style(\"stroke-dasharray\", \"3, 3, 5\").attr('x1', xForOne).attr('y1', boundedHeight).attr('x2', xForOne).attr('y2', 0);\n    parent.append('text').attr('class', perRunClass).attr('x', xForOne + textMargin).attr('y', textMargin).text('start value'); // median end value\n\n    const xMedian = xScaleBins(props.medianendvalue) + xCenterIncrement;\n    parent.append('line').attr('class', perRunClass).style('stroke', 'black').style('stroke-width', '2').style(\"stroke-dasharray\", \"5, 5, 5, 3\").attr('x1', xMedian).attr('y1', boundedHeight).attr('x2', xMedian).attr('y2', 0);\n    parent.append('text').attr('class', perRunClass).attr('x', xMedian + textMargin).attr('y', textMargin * 2).text('median end value'); // threshold values, dilineating the bins of results\n\n    const currencyThresholds = getCurrencyThresholds();\n\n    for (var i = 1; i < currencyThresholds.length - 1; i++) {\n      const xThreshold = xScaleBins(currencyThresholds[i]);\n      parent.append('line').attr('class', perRunClass).style('stroke', 'grey').style('stroke-width', '1.5').style(\"stroke-dasharray\", \"10, 10\").attr('x1', xThreshold).attr('y1', boundedHeight).attr('x2', xThreshold).attr('y2', 0);\n    }\n  };\n\n  const getCurrencyThresholds = () => {\n    const pctThresholds = getThresholdValues();\n    const currencyThresholds = []; // create failure bin\n\n    currencyThresholds[0] = 0;\n    currencyThresholds[1] = 0.01; // start at index 1, as we've handled the zero case.  \n    // Consider removing zero from the common thresholds.\n    // for now, offset the first entry in the currency array to accomodate the failure bin.\n\n    for (var i = 1; i < pctThresholds.length; i++) {\n      currencyThresholds[i + 1] = pctThresholds[i] * props.startvalue;\n    }\n\n    return currencyThresholds;\n  };\n\n  const createBins = currencyThresholdValues => {\n    const binFunc = d3.bin().value(function (d) {\n      return d.adjEndCycleValue;\n    }).domain([currencyThresholdValues[0], currencyThresholdValues[currencyThresholdValues.length - 1]]).thresholds(currencyThresholdValues);\n    return binFunc(props.metadata);\n  };\n\n  const drawHistogram = svg => {\n    const currencyThresholdValues = getCurrencyThresholds();\n    const bins = createBins(currencyThresholdValues);\n    const xScale = getXScaleForAxis(currencyThresholdValues);\n    const yScale = d3.scaleLinear().domain([0, d3.max(bins, function (d) {\n      return d.length;\n    })]).range([boundedHeight, 0]); // x/y axes\n\n    svg.append(\"g\").attr(\"class\", perRunClass).attr(\"transform\", \"translate(0,\" + boundedHeight + \")\").call(d3.axisBottom(xScale));\n    svg.append(\"g\").attr(\"class\", perRunClass).call(d3.axisLeft(yScale));\n    var barGroup = svg.append('g').attr('class', perRunClass).attr('id', pathGroupID); // chart\n\n    var bars = barGroup.selectAll('.' + histoBarClass);\n    bars.data(bins).enter().append(\"rect\").attr(\"class\", perRunClass).attr(\"x\", 1).attr(\"transform\", function (d) {\n      return \"translate(\" + xScale(d.x0) + \",\" + yScale(d.length) + \")\";\n    }).attr(\"width\", function (d) {\n      return xScale(d.x1) - xScale(d.x0) - 1;\n    }).attr(\"height\", function (d) {\n      return boundedHeight - yScale(d.length);\n    }).style(\"fill\", function (d) {\n      return getColorStringForRelativeValue(d.x0 / props.startvalue);\n    }).on('mousedown', handleMouseDown).on(\"mouseover\", handleMouseOver).on(\"mouseout\", handleMouseLeave).on('mousemove', handleMouseMove);\n  };\n\n  const drawAreaChart = svg => {\n    const currencyThresholdValues = getCurrencyThresholds();\n    const bins = createBins(currencyThresholdValues);\n    const xScale = getXScaleForAxis(currencyThresholdValues);\n    const yScale = d3.scaleLinear().domain([0, d3.max(bins, function (d) {\n      return d.length;\n    })]).range([boundedHeight, 0]); // x/y axes\n\n    svg.append(\"g\").attr(\"class\", perRunClass).attr(\"transform\", \"translate(0,\" + boundedHeight + \")\").call(d3.axisBottom(xScale));\n    svg.append(\"g\").attr(\"class\", perRunClass).call(d3.axisLeft(yScale));\n    var pathGroup = svg.append('g').attr('class', perRunClass).attr('id', pathGroupID);\n    drawReferenceRects(bins, pathGroup, xScale);\n    drawReferenceLines(bins, pathGroup, xScale); // chart\n\n    pathGroup.append(\"path\").datum(bins).style('fill-opacity', '0.1').attr('class', perRunClass).attr(\"fill\", \"Grey\").attr(\"stroke\", 'Blue').attr(\"stroke-width\", 1.5).on('mouseover', handleMouseOver).on('mouseleave', handleMouseLeave).on('mousemove', handleMouseMove).on('mousedown', handleMouseDown).attr(\"d\", d3.area().x(d => xScale(d.x0 + (d.x1 - d.x0) / 2)).y0(yScale(0)).y1(d => yScale(d.length)).curve(d3.curveBasis));\n  };\n\n  const prepTooltip = svg => {\n    // wrapper\n    // background\n    // text element\n    //  tspan for each line\n    //  x0, x1, % of start, % of results\n    const tooltipWrapper = svg.append('g').attr('id', ttBinWrapID).attr(\"class\", perRunClass).style('opacity', 0);\n    tooltipWrapper.append('rect').style('opacity', 0.70).attr('id', ttBinBackID).attr('width', tooltipWidth).attr('height', tooltipHeight).attr(\"pointer-events\", \"none\").attr(\"fill\", \"#e8e8e8\");\n    const tooltipText = tooltipWrapper.append('g').append('text').attr(\"pointer-events\", \"none\").attr('font-weight', 900).attr('text-anchor', 'left');\n    tooltipText.append('tspan').attr('id', ttBinRangeID).attr('x', '5').attr('y', '5').attr('dy', '15px').attr(\"pointer-events\", \"none\");\n    tooltipText.append('tspan').attr('id', ttBinPctID).attr('x', '5').attr('y', '5').attr('dy', '30px').attr(\"pointer-events\", \"none\");\n  };\n\n  const makeCurrency = num => {\n    let dollarUSLocale = Intl.NumberFormat('en-US', {\n      style: \"currency\",\n      currency: \"USD\"\n    });\n    return dollarUSLocale.format(num);\n  };\n\n  const makePct = num => {\n    return Number(num * 100).toFixed(2) + '%';\n  };\n\n  const getTooltip = () => {\n    return d3.select('#' + ttBinWrapID);\n  };\n\n  const getTooltipBackground = () => {\n    return d3.select('#' + ttBinBackID);\n  };\n\n  const getBinRangeSpan = () => {\n    return d3.select('#' + ttBinRangeID);\n  };\n\n  const getBinPctSpan = () => {\n    return d3.select('#' + ttBinPctID);\n  };\n\n  const handleMouseDown = e => {\n    const cycleChart = d3.select(props.cyclechartid);\n    const thisClass = e.srcElement.cycleChart.selectAll();\n  };\n\n  const handleMouseOver = e => {\n    getTooltip().style('opacity', 1);\n  };\n\n  const handleMouseMove = e => {\n    const xScale = getXScaleForAxis();\n    const xZero = xScale(0);\n    const binData = e.srcElement.__data__;\n    const binMeta = calcBinMetadata(binData); // set the tt content\n\n    const rangeString = makeCurrency(+binMeta.extBin[0]) + '-' + makeCurrency(+binMeta.extBin[1]);\n    const binSizeString = ' ' + makePct(binData.length / props.metadata.length) + ' of cycles';\n    getBinRangeSpan().text(rangeString);\n    getBinPctSpan().text(binSizeString); // place the tt\n\n    const tt = getTooltip();\n    const ttBounds = tt.node().getBBox();\n    getTooltipBackground().attr('width', ttBounds.width).attr('height', ttBounds.height); // const mouseTranslate = 'translate(' + coords[0] + ',' + (coords[1] - ttBounds.height) + ')';\n    // tt.attr('transform', mouseTranslate);\n  };\n\n  const handleMouseLeave = () => {\n    getTooltip().style('opacity', 0);\n  };\n\n  React.useEffect(() => {\n    const svg = d3.select(svgSelect).append(\"g\").attr(\"transform\", marginTranslate);\n    drawHistogram(svg);\n    prepTooltip(svg);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: svgID,\n      width: totalWidth,\n      height: totalHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EndValueChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = EndValueChart;\n;\nexport default EndValueChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"EndValueChart\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/endvaluechart.js"],"names":["React","d3","cleanupPrev","getPerRunClassName","getHighValueColorString","getLowValueColorString","getThresholdValues","getColorStringForRelativeValue","EndValueChart","props","svgID","svgSelect","perRunClass","histoBarClass","pathGroupID","margin","top","right","bottom","left","totalWidth","totalHeight","marginTranslate","boundedWidth","boundedHeight","ttBinWrapID","ttBinBackID","ttBinRangeID","ttBinPctID","tooltipWidth","tooltipHeight","getXScaleForAxis","thresholdValues","getCurrencyThresholds","numThresholds","length","thresholdRange","thresholdInc","i","scaleThreshold","domain","range","calcBinMetadata","data","oneBinMetadata","extent","d","adjEndCycleValue","pctOfStart","drawReferenceRects","bins","parent","xScaleBins","lowValueColorString","highValueColorString","refRectOpacity","xStart","startvalue","width","x1","x0","append","attr","style","drawReferenceLines","xCenterIncrement","xForOne","textMargin","text","xMedian","medianendvalue","currencyThresholds","xThreshold","pctThresholds","createBins","currencyThresholdValues","binFunc","bin","value","thresholds","metadata","drawHistogram","svg","xScale","yScale","scaleLinear","max","call","axisBottom","axisLeft","barGroup","bars","selectAll","enter","on","handleMouseDown","handleMouseOver","handleMouseLeave","handleMouseMove","drawAreaChart","pathGroup","datum","area","x","y0","y1","curve","curveBasis","prepTooltip","tooltipWrapper","tooltipText","makeCurrency","num","dollarUSLocale","Intl","NumberFormat","currency","format","makePct","Number","toFixed","getTooltip","select","getTooltipBackground","getBinRangeSpan","getBinPctSpan","e","cycleChart","cyclechartid","thisClass","srcElement","xZero","binData","__data__","binMeta","rangeString","extBin","binSizeString","tt","ttBounds","node","getBBox","height","useEffect"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport * as d3 from \"d3\";\nimport './common.js';\nimport { cleanupPrev, getPerRunClassName, getHighValueColorString, getLowValueColorString, getThresholdValues, getColorStringForRelativeValue} from \"./common.js\";\n\nfunction EndValueChart (props) {\n\n    const svgID = 'endvaluechartsvg';\n    const svgSelect = '#' + svgID;\n    const perRunClass = getPerRunClassName();\n    const histoBarClass = 'histobar';\n    const pathGroupID = 'pathgroupid';\n    const margin = { top: 40, right: 65, bottom: 40, left: 65 };\n    const totalWidth = 960;\n    const totalHeight = 300;\n    const marginTranslate = \"translate(\" + margin.left + \",\" + margin.top + \")\";\n    const boundedWidth = totalWidth - margin.left - margin.right;\n    const boundedHeight = totalHeight - margin.top - margin.bottom;\n    const ttBinWrapID = 'ttevwrap';\n    const ttBinBackID = 'ttevback';\n    const ttBinRangeID = 'ttevrange';\n    const ttBinPctID = 'ttevpct';\n    const tooltipWidth = 75;\n    const tooltipHeight = 75;\n\n    const getXScaleForAxis = () => {\n        const thresholdValues = getCurrencyThresholds();\n        const numThresholds = thresholdValues.length;\n        var thresholdRange = [];\n        var thresholdInc = boundedWidth / (numThresholds + 1);\n\n        for (var i = 0; i <= thresholdValues.length; i++) {\n            thresholdRange[i] = i * thresholdInc;\n        }\n\n        return d3.scaleThreshold()\n                 .domain(thresholdValues)\n                 .range(thresholdRange);\n    }\n\n    const calcBinMetadata = (data) => {\n        const oneBinMetadata = {\n            'binData': data,\n            'extBin': d3.extent(data, (d) => d.adjEndCycleValue),\n            'extPctStartValue': d3.extent(data, (d) => d.pctOfStart),\n            'binCount': data.length,\n        }\n\n        return oneBinMetadata;\n    }\n\n    const drawReferenceRects = (bins, parent, xScaleBins) => {\n        const lowValueColorString = getLowValueColorString();\n        const highValueColorString = getHighValueColorString();\n        const refRectOpacity = '0.25';\n        const xStart = xScaleBins(props.startvalue);\n        const width = ((xScaleBins(bins[0].x1) - xScaleBins(bins[0].x0)));\n\n        // startValue reference rect\n        parent.append('rect')\n              .attr('class', perRunClass)\n              .style('opacity', refRectOpacity)\n              .attr('x', xStart)\n              .attr('y', 0)\n              .attr('width', width)\n              .attr('height', boundedHeight);\n        // failures and \n        // low end value reference rect\n        parent.append('rect')\n              .attr('class', perRunClass)\n              .style('opacity', refRectOpacity)\n              .attr('fill', lowValueColorString)\n              .attr('x', 0)\n              .attr('y', 0)\n              .attr('width', xStart)\n              .attr('height', boundedHeight);\n        // high value reference rect\n        parent.append('rect')\n              .attr('class', perRunClass)\n              .style('opacity', refRectOpacity)\n              .attr('fill', highValueColorString)\n              .attr('x', xStart + width)\n              .attr('y', 0)\n              .attr('width', boundedWidth - xStart - width)\n              .attr('height', boundedHeight);\n    }\n\n    const drawReferenceLines = (bins, parent, xScaleBins) => {\n\n        const xCenterIncrement = ((xScaleBins(bins[0].x1) - xScaleBins(bins[0].x0)) / 2)\n        const xForOne = xScaleBins(props.startvalue) + xCenterIncrement;\n        const textMargin = 15;\n\n        // start value\n        parent.append('line')\n              .attr('class', perRunClass)\n              .style('stroke', 'black')\n              .style('stroke-width', '2')\n              .style(\"stroke-dasharray\", (\"3, 3, 5\")) \n              .attr('x1', xForOne)\n              .attr('y1', boundedHeight)\n              .attr('x2', xForOne)\n              .attr('y2', 0);\n        parent.append('text')\n              .attr('class', perRunClass)\n              .attr('x', xForOne + textMargin)\n              .attr('y', textMargin)\n              .text('start value');\n        \n        // median end value\n        const xMedian = xScaleBins(props.medianendvalue) + xCenterIncrement;\n        parent.append('line')\n              .attr('class', perRunClass)\n              .style('stroke', 'black')\n              .style('stroke-width', '2')\n              .style(\"stroke-dasharray\", (\"5, 5, 5, 3\")) \n              .attr('x1', xMedian)\n              .attr('y1', boundedHeight)\n              .attr('x2', xMedian)\n              .attr('y2', 0);\n        parent.append('text')\n              .attr('class', perRunClass)\n              .attr('x', xMedian + textMargin)\n              .attr('y', textMargin * 2)\n              .text('median end value');\n\n        // threshold values, dilineating the bins of results\n        const currencyThresholds = getCurrencyThresholds();\n        for (var i = 1; i < (currencyThresholds.length - 1); i++) {\n            const xThreshold = xScaleBins(currencyThresholds[i]);\n            parent.append('line')\n                  .attr('class', perRunClass)\n                  .style('stroke', 'grey')\n                  .style('stroke-width', '1.5')\n                  .style(\"stroke-dasharray\", (\"10, 10\")) \n                  .attr('x1', xThreshold)\n                  .attr('y1', boundedHeight)\n                  .attr('x2', xThreshold)\n                  .attr('y2', 0);    \n        }\n    }\n\n    const getCurrencyThresholds = () => {\n        const pctThresholds = getThresholdValues();\n        const currencyThresholds = [];\n\n        // create failure bin\n        currencyThresholds[0] = 0;\n        currencyThresholds[1] = 0.01;\n        // start at index 1, as we've handled the zero case.  \n        // Consider removing zero from the common thresholds.\n        // for now, offset the first entry in the currency array to accomodate the failure bin.\n        for (var i = 1; i < pctThresholds.length; i++) {\n            currencyThresholds[i+1] = pctThresholds[i] * props.startvalue;\n        }\n        return currencyThresholds;\n    }\n\n    const createBins = (currencyThresholdValues) => {\n\n        const binFunc = d3.bin()\n                          .value(function(d) { return d.adjEndCycleValue; })   \n                          .domain([currencyThresholdValues[0], \n                                   currencyThresholdValues[currencyThresholdValues.length - 1]])\n                          .thresholds(currencyThresholdValues); \n\n        return binFunc(props.metadata);\n    }\n\n    const drawHistogram = (svg) => {\n        const currencyThresholdValues = getCurrencyThresholds();\n        const bins = createBins(currencyThresholdValues);        \n        const xScale = getXScaleForAxis(currencyThresholdValues);\n        const yScale = d3.scaleLinear()\n                         .domain([0, d3.max(bins, function(d) { return d.length; })])\n                         .range([boundedHeight, 0]);\n\n        // x/y axes\n        svg.append(\"g\")\n            .attr(\"class\", perRunClass)\n            .attr(\"transform\", \"translate(0,\" + boundedHeight + \")\")\n            .call(d3.axisBottom(xScale));\n        svg.append(\"g\")\n            .attr(\"class\", perRunClass)\n            .call(d3.axisLeft(yScale));\n             \n        var barGroup = svg.append('g')\n                          .attr('class', perRunClass)\n                          .attr('id', pathGroupID);\n\n        // chart\n        var bars = barGroup.selectAll('.' + histoBarClass);\n        bars.data(bins)\n                .enter()\n                .append(\"rect\")\n                .attr(\"class\", perRunClass)\n                .attr(\"x\", 1)\n                .attr(\"transform\", function(d) { return \"translate(\" + xScale(d.x0) + \",\" + yScale(d.length) + \")\"; })\n                .attr(\"width\", function(d) { return xScale(d.x1) - xScale(d.x0) -1 ; })\n                .attr(\"height\", function(d) { return boundedHeight - yScale(d.length); })\n                .style(\"fill\",  function(d) { return getColorStringForRelativeValue(d.x0 / props.startvalue);})\n                .on('mousedown', handleMouseDown)\n                .on(\"mouseover\", handleMouseOver)\n                .on(\"mouseout\", handleMouseLeave)                \n                .on('mousemove', handleMouseMove);\n    }\n\n    const drawAreaChart = (svg) => {\n        const currencyThresholdValues = getCurrencyThresholds();\n        const bins = createBins(currencyThresholdValues);        \n        const xScale = getXScaleForAxis(currencyThresholdValues);\n        const yScale = d3.scaleLinear()\n                         .domain([0, d3.max(bins, function(d) { return d.length; })])\n                         .range([boundedHeight, 0]);\n\n        // x/y axes\n        svg.append(\"g\")\n            .attr(\"class\", perRunClass)\n            .attr(\"transform\", \"translate(0,\" + boundedHeight + \")\")\n            .call(d3.axisBottom(xScale));\n        svg.append(\"g\")\n            .attr(\"class\", perRunClass)\n            .call(d3.axisLeft(yScale));\n             \n        var pathGroup = svg.append('g')\n                           .attr('class', perRunClass)\n                           .attr('id', pathGroupID);\n\n        drawReferenceRects(bins, pathGroup, xScale);   \n        drawReferenceLines(bins, pathGroup, xScale); \n\n        // chart\n        pathGroup.append(\"path\")\n                    .datum(bins)\n                    .style('fill-opacity', '0.1')\n                    .attr('class', perRunClass)\n                    .attr(\"fill\", \"Grey\")\n                    .attr(\"stroke\", 'Blue')\n                    .attr(\"stroke-width\", 1.5)\n                    .on('mouseover', handleMouseOver)\n                    .on('mouseleave', handleMouseLeave)\n                    .on('mousemove', handleMouseMove)\n                    .on('mousedown', handleMouseDown)\n                    .attr(\"d\", d3.area()\n                        .x(d => xScale(d.x0 + ((d.x1 - d.x0) / 2)))\n                        .y0(yScale(0))\n                        .y1(d => yScale(d.length))\n                        .curve(d3.curveBasis)\n                );  \n                        \n    }\n\n    const prepTooltip = (svg) => {\n        // wrapper\n        // background\n        // text element\n        //  tspan for each line\n        //  x0, x1, % of start, % of results\n\n        const tooltipWrapper = svg.append('g')\n                                  .attr('id', ttBinWrapID)\n                                  .attr(\"class\", perRunClass)\n                                  .style('opacity', 0);\n        tooltipWrapper.append('rect')\n                      .style('opacity', 0.70)\n                      .attr('id', ttBinBackID)\n                      .attr('width', tooltipWidth)\n                      .attr('height', tooltipHeight)\n                      .attr(\"pointer-events\", \"none\")\n                      .attr(\"fill\", \"#e8e8e8\"); \n\n        const tooltipText = tooltipWrapper.append('g').append('text')\n                                          .attr(\"pointer-events\", \"none\")\n                                          .attr('font-weight', 900)\n                                          .attr('text-anchor', 'left');\n        tooltipText.append('tspan')\n                   .attr('id', ttBinRangeID)\n                   .attr('x', '5')\n                   .attr('y', '5')\n                   .attr('dy', '15px')\n                   .attr(\"pointer-events\", \"none\");\n        tooltipText.append('tspan')\n                   .attr('id', ttBinPctID)\n                   .attr('x', '5')\n                   .attr('y', '5')\n                   .attr('dy', '30px')\n                   .attr(\"pointer-events\", \"none\");\n    }\n\n    const makeCurrency = (num) => {\n        let dollarUSLocale = Intl.NumberFormat('en-US', {\n            style: \"currency\",\n            currency: \"USD\",\n        });\n        return dollarUSLocale.format(num);\n    }\n\n    const makePct = (num) => {\n        return Number( num * 100).toFixed(2) + '%';\n    }\n\n    const getTooltip = () => {\n        return d3.select('#' + ttBinWrapID);\n    }\n\n    const getTooltipBackground = () => {\n        return d3.select('#' + ttBinBackID);\n    }\n\n    const getBinRangeSpan = () => {\n        return d3.select('#' + ttBinRangeID);\n    }\n\n    const getBinPctSpan = () => {\n        return d3.select('#' + ttBinPctID);\n    }\n\n    const handleMouseDown = (e) => {\n        const cycleChart = d3.select(props.cyclechartid);\n        const thisClass = e.srcElement.\n        cycleChart.selectAll()\n    }\n\n    const handleMouseOver = (e) => {\n        getTooltip().style('opacity', 1);\n    }\n\n    const handleMouseMove = (e) => {\n\n        const xScale = getXScaleForAxis();\n        const xZero = xScale(0);\n        const binData = e.srcElement.__data__;\n        const binMeta = calcBinMetadata(binData);\n        \n        // set the tt content\n        const rangeString = makeCurrency(+(binMeta.extBin[0])) + \n                            '-' + makeCurrency(+(binMeta.extBin[1]));\n        const binSizeString = ' ' + makePct(binData.length / props.metadata.length) +\n                              ' of cycles';\n        getBinRangeSpan().text(rangeString);\n        getBinPctSpan().text(binSizeString);\n\n        // place the tt\n        const tt = getTooltip();\n        const ttBounds = tt.node().getBBox();\n        getTooltipBackground()                \n            .attr('width', ttBounds.width)\n            .attr('height', ttBounds.height);\n        // const mouseTranslate = 'translate(' + coords[0] + ',' + (coords[1] - ttBounds.height) + ')';\n        // tt.attr('transform', mouseTranslate);\n    };\n    \n    const handleMouseLeave = () => {\n        getTooltip().style('opacity', 0);\n    };\n\n    React.useEffect(() => {\n\n        const svg = d3.select(svgSelect)\n                      .append(\"g\")\n                      .attr(\"transform\", marginTranslate);\n\n        drawHistogram(svg);\n        prepTooltip(svg);\n    }, [props] );\n\n    return (\n        <div>\n            <svg id={svgID}  \n                width={totalWidth}\n                height={totalHeight} \n             >\n            </svg>\n        </div>\n    );\n};\n\nexport default EndValueChart;\n"]},"metadata":{},"sourceType":"module"}