{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\"; // d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HistoricalChart() {\n  _s();\n\n  const [activeIndex, setActiveIndex] = React.useState(null);\n  const [histData, setData] = React.useState([]);\n  const margin = {\n    top: 40,\n    right: 80,\n    bottom: 60,\n    left: 50\n  };\n  const width = 960 - margin.left - margin.right;\n  const height = 600 - margin.top - margin.bottom;\n  const equityColor = \"OrangeRed\";\n\n  const getXScale = (dataIn, widthIn) => {\n    var xExt = d3.extent(dataIn, d => d.year);\n    return d3.scaleLinear().domain(xExt).range([0, widthIn]);\n  };\n\n  const getYScale = (dataIn, heightIn) => {\n    var yExt = d3.extent(dataIn, d => d.equity);\n    return d3.scaleLinear().domain(yExt).range([heightIn, 0]);\n  };\n\n  const drawAxes = (svg, xScaleIn, yScaleIn, heightIn) => {\n    var pctFormat = d3.format(\"4.2%\");\n    var yearFormat = d3.format(\"d\");\n    var xGen = d3.axisBottom(xScaleIn).tickFormat(yearFormat);\n    var yGen = d3.axisLeft(yScaleIn).tickFormat(pctFormat);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + heightIn + \")\").call(xGen);\n    svg.append(\"g\").call(yGen);\n  };\n\n  const drawLines = (svg, dataIn, xScaleIn, yScaleIn) => {\n    // Add the equity line\n    svg.append(\"path\").datum(dataIn).attr(\"fill\", \"none\").attr(\"stroke\", equityColor).attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n      return xScaleIn(d.year);\n    }).y(function (d) {\n      return yScaleIn(d.equity);\n    }));\n  };\n\n  const handleMouseMove = e => {\n    const bisect = d3.bisector(d => d.year).left;\n    var xScaleIn = getXScale(histData, width);\n    const x0 = xScaleIn.invert(d3.pointer(e, this)[0]);\n    const index = bisect(histData, x0, 1);\n    console.log(\"mouseMove - x0 : \" + x0 + \" index : \" + index);\n    setActiveIndex(index);\n  };\n\n  const handleMouseLeave = () => {\n    setActiveIndex(null);\n  };\n\n  React.useEffect(() => {\n    var svg = d3.select(\"#d3target\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    d3.csv(hist, function (d) {\n      return {\n        year: d.year,\n        inflation: +d.inflation,\n        equity: +d.equity,\n        bond: +d.bond\n      };\n    }).then(function (dataset) {\n      var xScaleIn = getXScale(dataset, width);\n      var yScaleIn = getYScale(dataset, height); // xy axes\n\n      drawAxes(svg, xScaleIn, yScaleIn, height); // chart lines\n\n      drawLines(svg, dataset, xScaleIn, yScaleIn); // update state \n\n      setData(dataset);\n    });\n  }, [setData, width, height]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"d3target\",\n      onMouseMove: handleMouseMove,\n      onMouseLeave: handleMouseLeave,\n      children: histData.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [\"// hovering text\", /*#__PURE__*/_jsxDEV(\"text\", {\n            fill: \"#666\",\n            x: getXScale(item.year),\n            y: getYScale(item.equity),\n            textAnchor: \"middle\",\n            children: index === activeIndex ? item.equity : \"nope\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 37\n          }, this), \"// hovering circle\", /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: getXScale(item.date),\n            cy: getYScale(item.price),\n            r: index === activeIndex ? 6 : 4,\n            fill: equityColor,\n            strokeWidth: index === activeIndex ? 2 : 0,\n            stroke: \"#fff\",\n            style: {\n              transition: \"ease-out .1s\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 37\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HistoricalChart, \"w7aL4YtEYJwAmzJRcT/B00Op1P8=\");\n\n_c = HistoricalChart;\nexport default HistoricalChart;\n/*\n                \n                <g className=\"axis xAxis\"\n                    ref={getXAxis}\n                    transform={`translate(0,${height})`} />\n                <g className=\"axis\" ref={getYAxis} />    \n                \n                               \n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoricalChart\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/historical_data.js"],"names":["React","d3","hist","HistoricalChart","activeIndex","setActiveIndex","useState","histData","setData","margin","top","right","bottom","left","width","height","equityColor","getXScale","dataIn","widthIn","xExt","extent","d","year","scaleLinear","domain","range","getYScale","heightIn","yExt","equity","drawAxes","svg","xScaleIn","yScaleIn","pctFormat","format","yearFormat","xGen","axisBottom","tickFormat","yGen","axisLeft","append","attr","call","drawLines","datum","line","x","y","handleMouseMove","e","bisect","bisector","x0","invert","pointer","index","console","log","handleMouseLeave","useEffect","select","csv","inflation","bond","then","dataset","map","item","date","price","transition"],"mappings":"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","sourcesContent":["\nimport * as React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./chartdata.css\";\nimport hist from \"./data/hist-returns.csv\";\n\n// d3 line chart example : https://www.d3-graph-gallery.com/graph/line_basic.html\n// example to draw axis : https://wattenberger.com/blog/react-and-d3\n// example : https://sharkcoder.com/data-visualization/d3-react\n\nfunction HistoricalChart () {\n    const [activeIndex, setActiveIndex] = React.useState(null);\n    const [histData, setData] = React.useState([]);\n    const margin = { top: 40, right: 80, bottom: 60, left: 50 };\n    const width = 960 - margin.left - margin.right;\n    const height = 600 - margin.top - margin.bottom;\n    const equityColor = \"OrangeRed\";\n\n    const getXScale = (dataIn, widthIn) => { \n        var xExt = d3.extent(dataIn, (d) => d.year);\n        return d3.scaleLinear()\n                 .domain(xExt)\n                 .range([ 0, widthIn ]);\n    }\n\n    const getYScale = (dataIn, heightIn) => {\n        var yExt = d3.extent(dataIn, (d) => d.equity);\n        return d3.scaleLinear()\n                 .domain(yExt)\n                 .range([ heightIn, 0 ]);\n    }\n\n    const drawAxes = (svg, xScaleIn, yScaleIn, heightIn) => {\n        var pctFormat = d3.format(\"4.2%\");\n        var yearFormat = d3.format(\"d\");\n        var xGen = d3.axisBottom(xScaleIn)\n                     .tickFormat(yearFormat);            \n        var yGen = d3.axisLeft(yScaleIn)\n                     .tickFormat(pctFormat);    \n\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + heightIn + \")\")\n            .call(xGen);\n        svg.append(\"g\")\n           .call(yGen);\n    };\n\n    const drawLines = (svg, dataIn, xScaleIn, yScaleIn) => {\n        // Add the equity line\n        svg.append(\"path\")\n            .datum(dataIn)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", equityColor)\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"d\", d3.line()\n                        .x(function(d) { return xScaleIn(d.year) })\n                        .y(function(d) { return yScaleIn(d.equity) })\n            );\n    }\n\n    const handleMouseMove = (e) => {\n        const bisect = d3.bisector((d) => d.year).left;\n        var xScaleIn = getXScale(histData, width);\n        const x0 = xScaleIn.invert(d3.pointer(e, this)[0]);\n        const index = bisect(histData, x0, 1);\n        console.log(\"mouseMove - x0 : \" + x0 + \" index : \" + index);\n        setActiveIndex(index);\n    };\n    \n    const handleMouseLeave = () => {\n        setActiveIndex(null);\n    };\n\n    React.useEffect(() => {\n\n        var svg = d3.select(\"#d3target\")\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom)\n                    .append(\"g\")\n                    .attr(\"transform\",\n                          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        d3.csv(hist,function(d) {\n            return { year: d.year, inflation: +d.inflation, equity: +d.equity, bond: +d.bond };\n        })\n        .then (function(dataset) {\n            var xScaleIn = getXScale(dataset, width);\n            var yScaleIn = getYScale(dataset, height);\n\n            // xy axes\n            drawAxes(svg, xScaleIn, yScaleIn, height);\n\n            // chart lines\n            drawLines(svg, dataset, xScaleIn, yScaleIn); \n            \n            // update state \n            setData(dataset);\n        })\n    }, [setData, width, height]);\n\n    return (\n        <div>\n            <svg id=\"d3target\"\n                 onMouseMove={handleMouseMove}\n                 onMouseLeave={handleMouseLeave} >\n\n                {histData.map((item, index) => {\n                            return (\n                                <g key={index}>\n                                // hovering text \n                                    <text\n                                        fill=\"#666\"\n                                        x={getXScale(item.year)}\n                                        y={getYScale(item.equity)}\n                                        textAnchor=\"middle\"\n                                    >\n                                        {index === activeIndex ? item.equity : \"nope\"}\n                                    </text>\n                                    // hovering circle\n                                    <circle\n                                        cx={getXScale(item.date)}\n                                        cy={getYScale(item.price)}\n                                        r={index === activeIndex ? 6 : 4}\n                                        fill={equityColor}\n                                        strokeWidth={index === activeIndex ? 2 : 0}\n                                        stroke=\"#fff\"\n                                        style={{ transition: \"ease-out .1s\" }}\n                                    />\n                                </g>\n                            );\n                        })}\n\n            </svg>\n        </div>\n    );\n}\n\nexport default HistoricalChart;\n/*\n                \n                <g className=\"axis xAxis\"\n                    ref={getXAxis}\n                    transform={`translate(0,${height})`} />\n                <g className=\"axis\" ref={getYAxis} />    \n                \n                               \n*/"]},"metadata":{},"sourceType":"module"}