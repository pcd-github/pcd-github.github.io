{"ast":null,"code":"var _jsxFileName = \"/Users/paul/OneDrive/Documents/code/src/swrve/src/summary.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Stack } from \"@mui/material\";\nimport { Card } from \"@mui/material\";\nimport { CardContent } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { makeCurrency, makePct } from \"./common.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SummaryCards(props) {\n  _s();\n\n  React.useEffect(() => {}, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [makePct(1 - props.fails / props.cycles), \" success\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [props.fails, \" failures from \", props.cycles, \" cycles\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"Median failure age : \", props.medianfailage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"Minimum failure age : \", props.minfailage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"$ End Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"median : \", makeCurrency(props.medianendvalue)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"mean : \", makeCurrency(props.avgendvalue)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"max : \", makeCurrency(props.maxendvalue)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"min : \", makeCurrency(props.minendvalue)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"% Returns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"median : \", makePct(props.medianreturns)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"mean : \", makePct(props.avgreturns)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"max : \", makePct(props.maxreturns)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"min : \", makePct(props.minreturns)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"% positive net cycles : \", makePct(props.netpositivepct)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"average net delta : \", makeCurrency(props.avgnetdelta)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"median net delta : \", makeCurrency(props.mediannetdelta)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"min net delta : \", makeCurrency(props.minnetdelta)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"max net delta : \", makeCurrency(props.maxnetdelta)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SummaryCards, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SummaryCards;\n;\nexport default SummaryCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"SummaryCards\");","map":{"version":3,"sources":["/Users/paul/OneDrive/Documents/code/src/swrve/src/summary.js"],"names":["React","Stack","Card","CardContent","Typography","makeCurrency","makePct","SummaryCards","props","useEffect","fails","cycles","medianfailage","minfailage","medianendvalue","avgendvalue","maxendvalue","minendvalue","medianreturns","avgreturns","maxreturns","minreturns","netpositivepct","avgnetdelta","mediannetdelta","minnetdelta","maxnetdelta"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAqC,aAArC;;;AAEA,SAASC,YAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAE1BR,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM,CAErB,CAFD,EAEG,CAACD,KAAD,CAFH;AAIA,sBACI;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,KAAjB;AAAA,8BACI,QAAC,IAAD;AAAA,+BACI,QAAC,WAAD;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,YAAY,MAAxB;AAAyB,YAAA,OAAO,EAAC,IAAjC;AAAsC,YAAA,SAAS,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,uBACKF,OAAO,CAAC,IAAKE,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACG,MAA1B,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,uBACKH,KAAK,CAACE,KADX,qBACiCF,KAAK,CAACG,MADvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAUI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,gDAC0BH,KAAK,CAACI,aADhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAaI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,iDAC2BJ,KAAK,CAACK,UADjC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAoBI,QAAC,IAAD;AAAA,+BACI,QAAC,WAAD;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,YAAY,MAAxB;AAAyB,YAAA,OAAO,EAAC,IAAjC;AAAsC,YAAA,SAAS,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,oCACcR,YAAY,CAACG,KAAK,CAACM,cAAP,CAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,kCACYT,YAAY,CAACG,KAAK,CAACO,WAAP,CADxB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAUI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,iCACWV,YAAY,CAACG,KAAK,CAACQ,WAAP,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAaI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,iCACWX,YAAY,CAACG,KAAK,CAACS,WAAP,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cApBJ,eAuCI,QAAC,IAAD;AAAA,+BACI,QAAC,WAAD;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,YAAY,MAAxB;AAAyB,YAAA,OAAO,EAAC,IAAjC;AAAsC,YAAA,SAAS,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,oCACeX,OAAO,CAACE,KAAK,CAACU,aAAP,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,kCACaZ,OAAO,CAACE,KAAK,CAACW,UAAP,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAUI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,iCACYb,OAAO,CAACE,KAAK,CAACY,UAAP,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAaI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,iCACYd,OAAO,CAACE,KAAK,CAACa,UAAP,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAvCJ,eA0DI,QAAC,IAAD;AAAA,+BACI,QAAC,WAAD;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,mDAC8Bf,OAAO,CAACE,KAAK,CAACc,cAAP,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,+CAC0BjB,YAAY,CAACG,KAAK,CAACe,WAAP,CADtC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,8CACyBlB,YAAY,CAACG,KAAK,CAACgB,cAAP,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAUI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,2CACsBnB,YAAY,CAACG,KAAK,CAACiB,WAAP,CADlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAaI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,2CACsBpB,YAAY,CAACG,KAAK,CAACkB,WAAP,CADlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA1DJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkFH;;GAxFQnB,Y;;KAAAA,Y;AAwFR;AAED,eAAeA,YAAf","sourcesContent":["import * as React from \"react\";\nimport { Stack } from \"@mui/material\";\nimport { Card } from \"@mui/material\";\nimport { CardContent } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { makeCurrency, makePct} from \"./common.js\";\n\nfunction SummaryCards (props) {\n\n    React.useEffect(() => {\n\n    }, [props] );\n\n    return (\n        <div>\n            <Stack direction=\"row\">\n                <Card>\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                            Summary\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {makePct(1 - (props.fails / props.cycles))} success\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {props.fails} failures from {props.cycles} cycles                               \n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            Median failure age : {props.medianfailage}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            Minimum failure age : {props.minfailage}\n                        </Typography>\n                    </CardContent>\n                </Card>\n                <Card>\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                            $ End Value\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            median : {makeCurrency(props.medianendvalue)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            mean : {makeCurrency(props.avgendvalue)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            max : {makeCurrency(props.maxendvalue)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            min : {makeCurrency(props.minendvalue)}\n                        </Typography>\n                    </CardContent>\n                </Card>\n                <Card>\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                            % Returns\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            median : { makePct(props.medianreturns) }\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            mean : { makePct(props.avgreturns) }\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            max : { makePct(props.maxreturns) }\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            min : { makePct(props.minreturns) }\n                        </Typography>\n                    </CardContent>\n                </Card>  \n                <Card>\n                    <CardContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            % positive net cycles : { makePct(props.netpositivepct)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            average net delta : { makeCurrency(props.avgnetdelta)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            median net delta : { makeCurrency(props.mediannetdelta)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            min net delta : { makeCurrency(props.minnetdelta)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            max net delta : { makeCurrency(props.maxnetdelta)}\n                        </Typography>\n                    </CardContent>\n                </Card>              \n            </Stack>             \n        </div>\n    );    \n};\n\nexport default SummaryCards;\n"]},"metadata":{},"sourceType":"module"}